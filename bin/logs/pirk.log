2016-08-27 14:23:37,578 INFO  general.ISO8601DateParserTest  [] - Starting testDateParsing: 
2016-08-27 14:23:37,583 INFO  general.ISO8601DateParserTest  [] - Successfully completed testDateParsing
2016-08-27 14:23:37,588 INFO  general.KeyedHashTest  [] - Starting testKeyedHash: 
2016-08-27 14:23:37,589 INFO  general.KeyedHashTest  [] - hash1 = 715 hash1 = 1011001011
2016-08-27 14:23:37,590 INFO  general.KeyedHashTest  [] - hash2 = -507510069 hash2 = -11110001111111111110100110101
2016-08-27 14:23:37,590 INFO  general.KeyedHashTest  [] - hash3 = -507510069 hash3 = -11110001111111111110100110101
2016-08-27 14:23:37,590 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHash
2016-08-27 14:23:37,591 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: MD5
2016-08-27 14:23:37,601 INFO  general.KeyedHashTest  [] - hash1 = 26 hash1 = 11010
2016-08-27 14:23:37,601 INFO  general.KeyedHashTest  [] - hash2 = 2047168538 hash2 = 1111010000001010101000000011010
2016-08-27 14:23:37,602 INFO  general.KeyedHashTest  [] - hash3 = 2047168538 hash3 = 1111010000001010101000000011010
2016-08-27 14:23:37,602 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: MD5
2016-08-27 14:23:37,603 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: SHA-1
2016-08-27 14:23:37,603 INFO  general.KeyedHashTest  [] - hash1 = 1116 hash1 = 10001011100
2016-08-27 14:23:37,604 INFO  general.KeyedHashTest  [] - hash2 = 1614103644 hash2 = 1100000001101010100010001011100
2016-08-27 14:23:37,604 INFO  general.KeyedHashTest  [] - hash3 = 1614103644 hash3 = 1100000001101010100010001011100
2016-08-27 14:23:37,605 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: SHA-1
2016-08-27 14:23:37,605 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: SHA-256
2016-08-27 14:23:37,606 INFO  general.KeyedHashTest  [] - hash1 = 2100 hash1 = 100000110100
2016-08-27 14:23:37,606 INFO  general.KeyedHashTest  [] - hash2 = 1097439284 hash2 = 1000001011010011001100000110100
2016-08-27 14:23:37,606 INFO  general.KeyedHashTest  [] - hash3 = 1097439284 hash3 = 1000001011010011001100000110100
2016-08-27 14:23:37,607 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: SHA-256
2016-08-27 14:23:37,607 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: FAKE-HASH-TYPE
2016-08-27 14:23:37,687 INFO  utils.KeyedHash    [] - java.security.NoSuchAlgorithmException: FAKE-HASH-TYPE MessageDigest not available
2016-08-27 14:23:37,687 INFO  general.KeyedHashTest  [] - hash1 = 715 hash1 = 1011001011
2016-08-27 14:23:37,688 INFO  utils.KeyedHash    [] - java.security.NoSuchAlgorithmException: FAKE-HASH-TYPE MessageDigest not available
2016-08-27 14:23:37,688 INFO  general.KeyedHashTest  [] - hash2 = -507510069 hash2 = -11110001111111111110100110101
2016-08-27 14:23:37,688 INFO  utils.KeyedHash    [] - java.security.NoSuchAlgorithmException: FAKE-HASH-TYPE MessageDigest not available
2016-08-27 14:23:37,688 INFO  general.KeyedHashTest  [] - hash3 = -507510069 hash3 = -11110001111111111110100110101
2016-08-27 14:23:37,689 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: FAKE-HASH-TYPE
2016-08-27 14:23:37,691 INFO  general.PaillierTest  [] - p = 7 q = 17 N = 119 bitLength = 7 lambdaN = 48 m1 = 5 m2 = 2 r1 = 3 r2 = 4
2016-08-27 14:23:37,691 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGeneration: 
2016-08-27 14:23:37,696 INFO  utils.SystemConfiguration  [] - Loading file 'pirk.properties'
2016-08-27 14:23:37,699 INFO  utils.SystemConfiguration  [] - Loading file 'querier.properties'
2016-08-27 14:23:37,701 INFO  utils.SystemConfiguration  [] - Loading file 'responder.properties'
2016-08-27 14:23:37,701 INFO  utils.SystemConfiguration  [] - Loading properties from dirName = /root/
2016-08-27 14:23:37,702 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-27 14:23:37,703 INFO  general.PaillierTest  [] - i = 0
2016-08-27 14:23:37,706 INFO  encryption.Paillier  [] - Using secure random from SUN:NativePRNG
2016-08-27 14:23:37,765 INFO  encryption.Paillier  [] - Parameters = p = -1104584247 q = 122524779 N = 1346966275 NSquared = -1189121527 lambdaN = -982970776 bitLength = 201
2016-08-27 14:23:37,822 INFO  general.PaillierTest  [] - encM1 = -1039260605 encM2 = 1359598328
2016-08-27 14:23:37,823 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 14:23:37,823 INFO  general.PaillierTest  [] - encM1_times_encM2 = 585911409 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 14:23:41,239 INFO  encryption.Paillier  [] - Parameters = p = 527018193 q = 1202175231 N = -108026833 NSquared = 1137590433 lambdaN = -918610128 bitLength = 3072
2016-08-27 14:23:41,354 INFO  general.PaillierTest  [] - encM1 = -1318143122 encM2 = -1693976301
2016-08-27 14:23:41,453 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 14:23:41,507 INFO  general.PaillierTest  [] - encM1_times_encM2 = -184815472 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 14:24:56,447 INFO  encryption.Paillier  [] - Parameters = p = -111086275 q = 322001411 N = 2047300023 NSquared = -32026415 lambdaN = -1270987732 bitLength = 6524
2016-08-27 14:24:57,376 INFO  general.PaillierTest  [] - encM1 = -1458316108 encM2 = 938922467
2016-08-27 14:24:58,349 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 14:24:58,832 INFO  general.PaillierTest  [] - encM1_times_encM2 = 29843882 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 14:24:58,832 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-27 14:24:58,832 INFO  general.PaillierTest  [] - i = 0
2016-08-27 14:24:58,840 INFO  encryption.Paillier  [] - testBit true
 N = 10110001110101100011010111110011010100011111011100000011001100000100100000110001100110001000001001001000010100010100010011111010011000001111110110011110101011101110000000011000101000010100101101101101
2016-08-27 14:24:58,840 INFO  encryption.Paillier  [] - Parameters = p = 656685239 q = 1396691195 N = 413223789 NSquared = 1699941481 lambdaN = 1327407326 bitLength = 201
2016-08-27 14:24:58,841 INFO  general.PaillierTest  [] - encM1 = 459643428 encM2 = 1080323405
2016-08-27 14:24:58,841 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 14:24:58,841 INFO  general.PaillierTest  [] - encM1_times_encM2 = 944906989 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 14:25:01,439 INFO  encryption.Paillier  [] - testBit false

2016-08-27 14:25:02,779 INFO  encryption.Paillier  [] - testBit false

2016-08-27 14:25:05,606 INFO  encryption.Paillier  [] - testBit true

2016-08-27 14:25:05,609 INFO  encryption.Paillier  [] - Parameters = p = 556036513 q = 420303307 N = 1309084587 NSquared = -673045447 lambdaN = -1981111264 bitLength = 3072
2016-08-27 14:25:05,714 INFO  general.PaillierTest  [] - encM1 = -911755262 encM2 = -841125816
2016-08-27 14:25:05,816 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 14:25:05,871 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1403234552 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 14:25:10,948 INFO  encryption.Paillier  [] - testBit true

2016-08-27 14:25:10,951 INFO  encryption.Paillier  [] - Parameters = p = -1902076297 q = 465444951 N = -1246315919 NSquared = 1786013153 lambdaN = 878025002 bitLength = 3722
2016-08-27 14:25:11,124 INFO  general.PaillierTest  [] - encM1 = 942318961 encM2 = -1733928348
2016-08-27 14:25:11,301 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 14:25:11,391 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1503066175 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 14:25:11,391 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-27 14:25:11,391 INFO  general.PaillierTest  [] - i = 0
2016-08-27 14:25:11,394 INFO  encryption.Paillier  [] - Parameters = p = 1624615427 q = -792315715 N = 692137015 NSquared = 428930001 lambdaN = 2077402300 bitLength = 201
2016-08-27 14:25:11,395 INFO  general.PaillierTest  [] - encM1 = 1187091650 encM2 = 1746260560
2016-08-27 14:25:11,395 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 14:25:11,395 INFO  general.PaillierTest  [] - encM1_times_encM2 = 898482979 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 14:25:13,205 INFO  encryption.Paillier  [] - Parameters = p = 187450687 q = -2113519707 N = -1240653157 NSquared = -328496679 lambdaN = 342707932 bitLength = 3072
2016-08-27 14:25:13,308 INFO  general.PaillierTest  [] - encM1 = 633604979 encM2 = 150686786
2016-08-27 14:25:13,414 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 14:25:13,466 INFO  general.PaillierTest  [] - encM1_times_encM2 = 2089715726 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 14:27:13,440 INFO  encryption.Paillier  [] - Parameters = p = -436089547 q = -2129463563 N = -39562823 NSquared = 2032048049 lambdaN = -530562468 bitLength = 6343
2016-08-27 14:27:14,319 INFO  general.PaillierTest  [] - encM1 = -1724719620 encM2 = -725271235
2016-08-27 14:27:15,145 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 14:27:15,544 INFO  general.PaillierTest  [] - encM1_times_encM2 = 18924071 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 14:27:15,544 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-27 14:27:15,544 INFO  general.PaillierTest  [] - i = 0
2016-08-27 14:27:15,550 INFO  encryption.Paillier  [] - testBit false
 N = 11001101010000101110000101111101100111111000100101101101001101100101100000011000111011100000110101000011100100011111110111011000101100100000101110001000111101010011000110000010100010111011111101000001
2016-08-27 14:27:15,555 INFO  encryption.Paillier  [] - testBit true
 N = 10100110000011111000011010000010111110111110100111100110010000010101101100011111101101001011000011011001101001001011111011011000000010000100000000000110001110101000100111101110101110010000111101100101
2016-08-27 14:27:15,556 INFO  encryption.Paillier  [] - Parameters = p = 489923811 q = 1863906583 N = -289861787 NSquared = 216464857 lambdaN = 825637558 bitLength = 201
2016-08-27 14:27:15,556 INFO  general.PaillierTest  [] - encM1 = 797714910 encM2 = 1820903608
2016-08-27 14:27:15,557 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 14:27:15,557 INFO  general.PaillierTest  [] - encM1_times_encM2 = -114813619 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 14:27:17,333 INFO  encryption.Paillier  [] - testBit false

2016-08-27 14:27:20,150 INFO  encryption.Paillier  [] - testBit true

2016-08-27 14:27:20,152 INFO  encryption.Paillier  [] - Parameters = p = -109707247 q = -935467453 N = -1711388045 NSquared = 1205514153 lambdaN = 1814376976 bitLength = 3072
2016-08-27 14:27:20,256 INFO  general.PaillierTest  [] - encM1 = -519655989 encM2 = 2072577670
2016-08-27 14:27:20,361 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 14:27:20,412 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1671708164 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 14:27:28,285 INFO  encryption.Paillier  [] - testBit true

2016-08-27 14:27:28,292 INFO  encryption.Paillier  [] - Parameters = p = 65161023 q = 1245156319 N = -712098591 NSquared = 35012033 lambdaN = -1011207966 bitLength = 6908
2016-08-27 14:27:29,411 INFO  general.PaillierTest  [] - encM1 = -1977607675 encM2 = 2058566231
2016-08-27 14:27:30,473 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 14:27:31,011 INFO  general.PaillierTest  [] - encM1_times_encM2 = 238435578 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 14:27:31,012 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-27 14:27:31,012 INFO  general.PaillierTest  [] - i = 0
2016-08-27 14:27:31,016 INFO  encryption.Paillier  [] - Parameters = p = -2049539593 q = -207785465 N = 1480100801 NSquared = 549136257 lambdaN = 1868712930 bitLength = 201
2016-08-27 14:27:31,016 INFO  general.PaillierTest  [] - encM1 = -1141586348 encM2 = 2084535259
2016-08-27 14:27:31,017 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 14:27:31,017 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1038503554 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 14:27:36,261 INFO  encryption.Paillier  [] - Parameters = p = -1154335669 q = 320865369 N = -137879021 NSquared = -331805335 lambdaN = 347795640 bitLength = 3072
2016-08-27 14:27:36,361 INFO  general.PaillierTest  [] - encM1 = -726172109 encM2 = -1899882859
2016-08-27 14:27:36,458 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 14:27:36,510 INFO  general.PaillierTest  [] - encM1_times_encM2 = 947121922 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 14:27:45,383 INFO  encryption.Paillier  [] - Parameters = p = -1227960491 q = -784000273 N = -217370021 NSquared = 532261977 lambdaN = 897295372 bitLength = 4814
2016-08-27 14:27:45,761 INFO  general.PaillierTest  [] - encM1 = -1387326989 encM2 = -1658034846
2016-08-27 14:27:46,142 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 14:27:46,329 INFO  general.PaillierTest  [] - encM1_times_encM2 = -857845135 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 14:27:46,329 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-27 14:27:46,329 INFO  general.PaillierTest  [] - i = 0
2016-08-27 14:27:46,333 INFO  encryption.Paillier  [] - testBit false
 N = 10111100101000100001110101001100010000000101000001001011110101001111101001011111010001001111111101001101111100101110011001010110100111000111110101111111100100001111010101000011111001010100011000001001
2016-08-27 14:27:46,336 INFO  encryption.Paillier  [] - testBit false
 N = 11010000100101101000011111101110010101010011110111001011100110010111001010100101111111111011001010101101111111101110111011101000000110111011011010010101101000100010100011010001001001110101100111000001
2016-08-27 14:27:46,340 INFO  encryption.Paillier  [] - testBit true
 N = 11001110010111100111101001011110000001101100000100000010000001111011010100111010101010111101011111111001110001011010100111101011001101000001011101000001001111110011100110110011111010011111000110111011
2016-08-27 14:27:46,341 INFO  encryption.Paillier  [] - Parameters = p = -1722821695 q = -2037631877 N = -1276513861 NSquared = 1822924441 lambdaN = -905513792 bitLength = 201
2016-08-27 14:27:46,341 INFO  general.PaillierTest  [] - encM1 = 125203352 encM2 = 260424196
2016-08-27 14:27:46,341 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 14:27:46,341 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1755011563 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 14:27:46,856 INFO  encryption.Paillier  [] - testBit false

2016-08-27 14:27:51,187 INFO  encryption.Paillier  [] - testBit false

2016-08-27 14:27:53,130 INFO  encryption.Paillier  [] - testBit false

2016-08-27 14:27:56,651 INFO  encryption.Paillier  [] - testBit true

2016-08-27 14:27:56,653 INFO  encryption.Paillier  [] - Parameters = p = -1065238285 q = -194407221 N = 1780186289 NSquared = 504492641 lambdaN = -209189250 bitLength = 3072
2016-08-27 14:27:56,747 INFO  general.PaillierTest  [] - encM1 = -1462285019 encM2 = -914154224
2016-08-27 14:27:56,849 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 14:27:56,897 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1212011322 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 14:28:06,418 INFO  encryption.Paillier  [] - testBit false
 N = 110100000111000000011111101110100011001100101110011000110011001010110100010000101100111000101001000111011111100100110000101100001111110111100101011110100111010111010000011001111000110010111110001110000110111100101001000011101111110010110000011101010010001111001000001101100011001101010000100110010011111010111010010010000011000000111010101100000110101001011011000101010010111001000011000010001110001001100010111100101111011110000101011111000011010111110110000010001001100011100011000101011101101001000010000100011110011100110001101101110111010101111111110000101110101111110100100101000111111100010000101110010011001010010111010001101011010010000110111000010010001011110101101000000100010010110011001000011000000001101101001110111101110010000110110100111100001010100111100011010110110100100011111010100111111111100010010001100100111101010110001110001011101000000111000011100100101011100000111000111000000000001000110101101101011001110001100011101011100011100010000000000100101111000010100011010000010011111010010101010101011011000010010100101110010000111010000001110100110011101010010111010010111010111111001110110101101010001110110001011000101001001011011101101001110001000111010001110100011000111010100110100011110110011100000000000011110001110100101001000101100111100010011001000000010001110001001000001110100110000111000110110100110101101011011000110001111101010101111111010001000011001001110001110000010000010100111000010011011000100011001001111111110000010110011100111111111011110101100111101101110110110111111000001110010111101001011011101011111101100000011111010000100010110100101111111000101010110010010110111100101010010111010101001101010011110011000000001000000010000101100010101000111101111001011010101111110000010111001011110100010110001101011001100100010111010001011101010010100100101101100111110101011011111101101011011111111010110111000011111011000101000101000110001101110000000011110010100101111111010101000001010001110000110111101110010110101111101010111000101010110101000001000011110111101110000000101001110101010100110000010000111000001101011111000100111011011010010101110000110110101101001110001011001010100110000111001100001111111101011011101010111001100111001111011000101100010011101011110101101111110010000101000001010110111110100000101100111101010110011110010000101110101010110100000110110011011110110110110111010100001011111001100011001100000011110101110110011011011010111111001000001001101010011100011010111000001101111000011011001110111111000011110000111101111100110010000001011011011110111110101100111111100001010010111111011000011101111000011101000010001110111001001011111011001000000110010100111011100001111100110111101100100001000100000001001010101101101010111100001011110101000101110001000111111100111111001110011010010000110001010110101011010100011101100000110011011110011000011001001011111000011111000110100000001010001000110000110111001100110001010010001000101111010010001001111100000111011000000110011111010110010010001100000000100110101011111110101110011000000100001101000101011111010001000000011011111100000101110001111001010011101001000001000100001111001010110001001100110001011101001011011011100000011001101000011110000111100010001001100001000100111100000111100111100111111000110101111011101110100001010110111110010100010011000101110001110101110011101111101111110000111000010100000110011111000001100011101100000101100101100101111110001000011101110111011100111110001000101100101011000110010011110101101010110110101110100101000101100000001011000101110000101001101101001100001001000000001110001100110000111101100000111011111010010101010110000001100010100110001011100111100101001010111111010000101000001110011011101000001011011010000000111010010100100110100100010100101100111010100111011111110010011111001011010001110101001010100011101011011111100010010100100101110000010101000000001110100010111100111010000111001000011011111000100101011010010100010100000011001110001111110110010100111010001100110110011111011001010001010111001010100111001010101001011011101100101101000000001001111001001000110011001100010110101101101111011000110110110110001010101100110000101100100000001110110010110010110010100110111000110010100101011101001111101111101101011010101101101100011010011100101011010000010101010000000101101110000000001011111010000101111010101100010011010100010101001010111101101101100111001111110001111010000101111100100110111110110100010011001000100011101011110111111001111111100001111101010111101001000101111000001101001110111110011101100101010000010011000011101111100100000001101100110010001110101001111110011111100010001011101011100010010101000011100011011101001101011011100010010110011010111100011010110000000000101000011100001001000110001110000000101011010010110101001000010111100010111110110010001111011110101101111011111100000111110010011010010110001100011100001100111101100011001000010010111101001001001110100001010101111100111101001100010110101011001010001111101001110100001001100100011111100011100011111010001011000101110010010011001111101010111011100010011101011000110011110010101100101010000100100100010110001100110110010010101110110100101111111001111111111000000011000111010011111010010001101001011110100000010100001101010111011010110011111010000001101101011000110000010111110111010010110100110001010010111011000100000110111111111010011110111011000011000110101001100010101000110001111100101010110100001010010100110111000100110111110001000100000111111000011000110110101000011110110011010101010011111100000010111101000010111011111101110100000001110100011111010011100011110101100101000001111001011011101110001001001001100000001010001001110010001100110011001111101010011001011100101000001011001001001000010010110100010000001011010001101101110001110111001100100000100111011010010000110111111000010000100011000100000101110001001111000011
2016-08-27 14:28:11,613 INFO  encryption.Paillier  [] - testBit false

2016-08-27 14:28:31,754 INFO  encryption.Paillier  [] - testBit true

2016-08-27 14:28:31,760 INFO  encryption.Paillier  [] - Parameters = p = -2028752653 q = 667729059 N = 2116034233 NSquared = -839917135 lambdaN = -1285555618 bitLength = 5779
2016-08-27 14:28:32,418 INFO  general.PaillierTest  [] - encM1 = -392168638 encM2 = 18187767
2016-08-27 14:28:33,077 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 14:28:33,404 INFO  general.PaillierTest  [] - encM1_times_encM2 = 2108721780 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 14:28:33,405 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-27 14:28:33,405 INFO  general.PaillierTest  [] - i = 0
2016-08-27 14:28:33,409 INFO  encryption.Paillier  [] - Parameters = p = 377977311 q = 1512861005 N = -839410925 NSquared = 177865577 lambdaN = -1365124620 bitLength = 201
2016-08-27 14:28:33,410 INFO  general.PaillierTest  [] - encM1 = -355795138 encM2 = -8511289
2016-08-27 14:28:33,410 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 14:28:33,411 INFO  general.PaillierTest  [] - encM1_times_encM2 = -344123815 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 14:28:34,924 INFO  encryption.Paillier  [] - Parameters = p = -920583927 q = 241188777 N = -949295631 NSquared = -400749343 lambdaN = 1040004264 bitLength = 3072
2016-08-27 14:28:35,023 INFO  general.PaillierTest  [] - encM1 = -1418170683 encM2 = -2061628985
2016-08-27 14:28:35,124 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 14:28:35,176 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1962985133 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 14:28:46,030 INFO  encryption.Paillier  [] - Parameters = p = 115533207 q = 1953033923 N = -509656059 NSquared = 1514711065 lambdaN = -1289111594 bitLength = 4701
2016-08-27 14:28:46,380 INFO  general.PaillierTest  [] - encM1 = 1628864600 encM2 = 897051890
2016-08-27 14:28:46,732 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 14:28:46,912 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1039940443 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 14:28:46,912 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-27 14:28:46,912 INFO  general.PaillierTest  [] - i = 0
2016-08-27 14:28:46,914 INFO  encryption.Paillier  [] - testBit false
 N = 10100010101111000011011011001001011011101010110111110100110001111100100111010011110011101011100110001110110000100100011000111110101111010100000011010011011000110000111101111010001101101011100000000001
2016-08-27 14:28:46,918 INFO  encryption.Paillier  [] - testBit false
 N = 10000111101000001000111111000100010000100010101000000110111001101111100001000110001010111100001111000111111001001101000111101000110001111000001100011100000001110101110101111100000010100100001101011011
2016-08-27 14:28:46,920 INFO  encryption.Paillier  [] - testBit true
 N = 10101101101011110011000100101111001100000000101110010100110011000010011000111000010100001100000110100100001110011010111101010001010111001101101010010100011001111111000010111010110111111011011101101001
2016-08-27 14:28:46,921 INFO  encryption.Paillier  [] - Parameters = p = -1090628481 q = -1603674089 N = -1159743639 NSquared = -1605023471 lambdaN = 767279466 bitLength = 201
2016-08-27 14:28:46,921 INFO  general.PaillierTest  [] - encM1 = 2003809133 encM2 = 162920186
2016-08-27 14:28:46,921 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 14:28:46,921 INFO  general.PaillierTest  [] - encM1_times_encM2 = -2050368582 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 14:28:49,680 INFO  encryption.Paillier  [] - testBit true

2016-08-27 14:28:49,683 INFO  encryption.Paillier  [] - Parameters = p = -989263411 q = 176024679 N = 1724181883 NSquared = -2069563111 lambdaN = 1268710308 bitLength = 3072
2016-08-27 14:28:49,777 INFO  general.PaillierTest  [] - encM1 = 1561022533 encM2 = -161582130
2016-08-27 14:28:49,874 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 14:28:49,921 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1548591119 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 14:28:55,076 INFO  encryption.Paillier  [] - testBit false

2016-08-27 14:28:56,376 INFO  encryption.Paillier  [] - testBit false

2016-08-27 14:29:00,689 INFO  encryption.Paillier  [] - testBit true

2016-08-27 14:29:00,693 INFO  encryption.Paillier  [] - Parameters = p = 1156800589 q = 1275589759 N = -1432278477 NSquared = -686111191 lambdaN = 215149236 bitLength = 4939
2016-08-27 14:29:01,083 INFO  general.PaillierTest  [] - encM1 = -68656096 encM2 = 567122668
2016-08-27 14:29:01,481 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 14:29:01,675 INFO  general.PaillierTest  [] - encM1_times_encM2 = 2055407316 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 14:29:01,675 INFO  utils.SystemConfiguration  [] - Loading file 'pirk.properties'
2016-08-27 14:29:01,677 INFO  utils.SystemConfiguration  [] - Loading file 'querier.properties'
2016-08-27 14:29:01,678 INFO  utils.SystemConfiguration  [] - Loading file 'responder.properties'
2016-08-27 14:29:01,679 INFO  utils.SystemConfiguration  [] - Loading properties from dirName = /root/
2016-08-27 14:29:01,679 INFO  general.PaillierTest  [] - Ending testPaillierWithKeyGeneration: 
2016-08-27 14:29:01,682 INFO  encryption.Paillier  [] - Parameters = p = 7 q = 17 N = 119 NSquared = 14161 lambdaN = 48 bitLength = 201
2016-08-27 14:29:01,684 INFO  encryption.Paillier  [] - Parameters = p = 7 q = 17 N = 119 NSquared = 14161 lambdaN = 48 bitLength = 201
2016-08-27 14:29:01,685 INFO  general.PaillierTest  [] - Starting testPaillierGivenAllParameters: 
2016-08-27 14:29:01,686 INFO  encryption.Paillier  [] - Parameters = p = 7 q = 17 N = 119 NSquared = 14161 lambdaN = 48 bitLength = 201
2016-08-27 14:29:01,686 INFO  general.PaillierTest  [] - encM1 = 14019 encM2 = 8836
2016-08-27 14:29:01,687 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 14:29:01,687 INFO  general.PaillierTest  [] - encM1_times_encM2 = 5617 encM1plusM2 = 5617
2016-08-27 14:29:01,687 INFO  general.PaillierTest  [] - Successfully completed testPaillierGivenAllParameters: 
2016-08-27 14:29:01,692 INFO  general.PartitionUtilsTest  [] - Starting testMask: 
2016-08-27 14:29:01,693 INFO  general.PartitionUtilsTest  [] - Successfully completed testMask
2016-08-27 14:29:01,693 INFO  general.PartitionUtilsTest  [] - Starting testToPartitions:
2016-08-27 14:29:01,695 INFO  general.PartitionUtilsTest  [] - testString.getBytes().length = 10
2016-08-27 14:29:01,695 INFO  general.PartitionUtilsTest  [] - testString.getBytes().length = 1
2016-08-27 14:29:01,696 INFO  general.PartitionUtilsTest  [] - Sucessfully completed testToPartitions:
2016-08-27 14:29:01,696 INFO  general.PartitionUtilsTest  [] - Starting testPartitionBits: 
2016-08-27 14:29:01,697 INFO  general.PartitionUtilsTest  [] - Successfully completed testPartitionBits
2016-08-27 14:29:01,703 INFO  utils.Inputs       [] - file = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/testDataSchemaFile13906192583879770.xml
2016-08-27 14:29:01,759 INFO  data.DataSchemaLoader  [] - Loading pre-configured data schemas: 
2016-08-27 14:29:01,760 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/testDataSchemaFile13906192583879770.xml hdfs = false
2016-08-27 14:29:01,760 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/testDataSchemaFile13906192583879770.xml
2016-08-27 14:29:01,762 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-27 14:29:01,763 INFO  data.DataSchemaLoader  [] - schemaName = testDataSchema
2016-08-27 14:29:01,764 INFO  data.DataSchemaLoader  [] - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-27 14:29:01,765 INFO  data.DataSchemaLoader  [] - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 14:29:01,765 INFO  data.DataSchemaLoader  [] - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 14:29:01,765 INFO  data.DataSchemaLoader  [] - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 14:29:01,765 INFO  data.DataSchemaLoader  [] - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 14:29:01,765 INFO  data.DataSchemaLoader  [] - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 14:29:01,766 INFO  data.DataSchemaLoader  [] - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 14:29:01,766 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/testDataSchemaFile13906192583879770.xml hdfs = false
2016-08-27 14:29:01,766 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/testDataSchemaFile13906192583879770.xml
2016-08-27 14:29:01,769 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-27 14:29:01,769 INFO  data.DataSchemaLoader  [] - schemaName = testDataSchema
2016-08-27 14:29:01,770 INFO  data.DataSchemaLoader  [] - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-27 14:29:01,770 INFO  data.DataSchemaLoader  [] - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 14:29:01,770 INFO  data.DataSchemaLoader  [] - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 14:29:01,770 INFO  data.DataSchemaLoader  [] - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 14:29:01,770 INFO  data.DataSchemaLoader  [] - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 14:29:01,771 INFO  data.DataSchemaLoader  [] - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 14:29:01,771 INFO  data.DataSchemaLoader  [] - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 14:29:01,771 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-hostname-query
2016-08-27 14:29:01,772 INFO  utils.TestUtils    [] - localFS: file = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-hostname-query_file4687800478219435877.xml
2016-08-27 14:29:01,772 INFO  utils.TestUtils    [] - query.schemas = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-hostname-query_file4687800478219435877.xml
2016-08-27 14:29:01,773 INFO  utils.TestUtils    [] - elementName = date
2016-08-27 14:29:01,774 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-27 14:29:01,774 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-27 14:29:01,774 INFO  utils.TestUtils    [] - elementName = qtype
2016-08-27 14:29:01,774 INFO  utils.TestUtils    [] - elementName = rcode
2016-08-27 14:29:01,774 INFO  utils.TestUtils    [] - elementName = ip
2016-08-27 14:29:01,776 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-ip-query
2016-08-27 14:29:01,777 INFO  utils.TestUtils    [] - localFS: file = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-ip-query_file3104820156887199055.xml
2016-08-27 14:29:01,777 INFO  utils.TestUtils    [] - query.schemas = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-hostname-query_file4687800478219435877.xml,/var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-ip-query_file3104820156887199055.xml
2016-08-27 14:29:01,778 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-27 14:29:01,779 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-27 14:29:01,779 INFO  utils.TestUtils    [] - elementName = ip
2016-08-27 14:29:01,781 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-nxdomain-query
2016-08-27 14:29:01,781 INFO  utils.TestUtils    [] - localFS: file = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-nxdomain-query_file64301807604971043.xml
2016-08-27 14:29:01,781 INFO  utils.TestUtils    [] - query.schemas = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-hostname-query_file4687800478219435877.xml,/var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-ip-query_file3104820156887199055.xml,/var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-nxdomain-query_file64301807604971043.xml
2016-08-27 14:29:01,783 INFO  utils.TestUtils    [] - elementName = qname
2016-08-27 14:29:01,784 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-27 14:29:01,784 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-27 14:29:01,785 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query
2016-08-27 14:29:01,786 INFO  utils.TestUtils    [] - localFS: file = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query_file3596829491844928214.xml
2016-08-27 14:29:01,786 INFO  utils.TestUtils    [] - query.schemas = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-hostname-query_file4687800478219435877.xml,/var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-ip-query_file3104820156887199055.xml,/var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-nxdomain-query_file64301807604971043.xml,/var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query_file3596829491844928214.xml
2016-08-27 14:29:01,787 INFO  utils.TestUtils    [] - elementName = qname
2016-08-27 14:29:01,787 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-27 14:29:01,787 INFO  utils.TestUtils    [] - elementName = ip
2016-08-27 14:29:01,789 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query-no-filter
2016-08-27 14:29:01,790 INFO  utils.TestUtils    [] - localFS: file = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query-no-filter_file8715743593923063866.xml
2016-08-27 14:29:01,790 INFO  utils.TestUtils    [] - query.schemas = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-hostname-query_file4687800478219435877.xml,/var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-ip-query_file3104820156887199055.xml,/var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-nxdomain-query_file64301807604971043.xml,/var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query_file3596829491844928214.xml,/var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query-no-filter_file8715743593923063866.xml
2016-08-27 14:29:01,791 INFO  utils.TestUtils    [] - elementName = qname
2016-08-27 14:29:01,792 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-27 14:29:01,792 INFO  utils.TestUtils    [] - elementName = ip
2016-08-27 14:29:01,795 INFO  query.QuerySchemaLoader  [] - Loading query schemas: 
2016-08-27 14:29:01,796 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-hostname-query_file4687800478219435877.xml
2016-08-27 14:29:01,797 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-hostname-query_file4687800478219435877.xml
2016-08-27 14:29:01,799 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 14:29:01,799 INFO  query.QuerySchemaLoader  [] - schemaName = dns-hostname-query
2016-08-27 14:29:01,799 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 14:29:01,800 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-27 14:29:01,800 INFO  query.QuerySchemaLoader  [] - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-27 14:29:01,800 INFO  query.QuerySchemaLoader  [] - name = date bits = 64 dataElementSize = 64
2016-08-27 14:29:01,801 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 14:29:01,801 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-27 14:29:01,801 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 14:29:01,801 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-27 14:29:01,801 INFO  query.QuerySchemaLoader  [] - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 14:29:01,802 INFO  query.QuerySchemaLoader  [] - name = qtype bits = 32 dataElementSize = 160
2016-08-27 14:29:01,802 INFO  query.QuerySchemaLoader  [] - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 14:29:01,802 INFO  query.QuerySchemaLoader  [] - name = rcode bits = 32 dataElementSize = 192
2016-08-27 14:29:01,802 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 14:29:01,802 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 256
2016-08-27 14:29:01,803 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-ip-query_file3104820156887199055.xml
2016-08-27 14:29:01,803 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-ip-query_file3104820156887199055.xml
2016-08-27 14:29:01,805 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 14:29:01,805 INFO  query.QuerySchemaLoader  [] - schemaName = dns-ip-query
2016-08-27 14:29:01,805 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 14:29:01,806 INFO  query.QuerySchemaLoader  [] - selectorName = ip
2016-08-27 14:29:01,806 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 14:29:01,806 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 32
2016-08-27 14:29:01,806 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 14:29:01,806 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 64
2016-08-27 14:29:01,806 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 14:29:01,807 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 128
2016-08-27 14:29:01,807 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-nxdomain-query_file64301807604971043.xml
2016-08-27 14:29:01,807 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-nxdomain-query_file64301807604971043.xml
2016-08-27 14:29:01,808 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 14:29:01,809 INFO  query.QuerySchemaLoader  [] - schemaName = dns-nxdomain-query
2016-08-27 14:29:01,809 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 14:29:01,809 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-27 14:29:01,809 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 14:29:01,810 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-27 14:29:01,810 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 14:29:01,810 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-27 14:29:01,810 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 14:29:01,810 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-27 14:29:01,810 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query_file3596829491844928214.xml
2016-08-27 14:29:01,810 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query_file3596829491844928214.xml
2016-08-27 14:29:01,812 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 14:29:01,812 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query
2016-08-27 14:29:01,812 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 14:29:01,812 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-27 14:29:01,812 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 14:29:01,812 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-27 14:29:01,813 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 14:29:01,813 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-27 14:29:01,813 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 14:29:01,813 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-27 14:29:01,813 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query-no-filter_file8715743593923063866.xml
2016-08-27 14:29:01,813 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query-no-filter_file8715743593923063866.xml
2016-08-27 14:29:01,816 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 14:29:01,816 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query-no-filter
2016-08-27 14:29:01,816 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 14:29:01,817 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-27 14:29:01,817 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 14:29:01,817 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-27 14:29:01,817 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 14:29:01,817 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-27 14:29:01,818 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 14:29:01,818 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-27 14:29:01,818 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-hostname-query_file4687800478219435877.xml
2016-08-27 14:29:01,818 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-hostname-query_file4687800478219435877.xml
2016-08-27 14:29:01,820 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 14:29:01,820 INFO  query.QuerySchemaLoader  [] - schemaName = dns-hostname-query
2016-08-27 14:29:01,820 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 14:29:01,821 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-27 14:29:01,821 INFO  query.QuerySchemaLoader  [] - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-27 14:29:01,821 INFO  query.QuerySchemaLoader  [] - name = date bits = 64 dataElementSize = 64
2016-08-27 14:29:01,821 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 14:29:01,821 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-27 14:29:01,821 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 14:29:01,822 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-27 14:29:01,822 INFO  query.QuerySchemaLoader  [] - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 14:29:01,822 INFO  query.QuerySchemaLoader  [] - name = qtype bits = 32 dataElementSize = 160
2016-08-27 14:29:01,822 INFO  query.QuerySchemaLoader  [] - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 14:29:01,822 INFO  query.QuerySchemaLoader  [] - name = rcode bits = 32 dataElementSize = 192
2016-08-27 14:29:01,823 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 14:29:01,823 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 256
2016-08-27 14:29:01,823 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-ip-query_file3104820156887199055.xml
2016-08-27 14:29:01,823 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-ip-query_file3104820156887199055.xml
2016-08-27 14:29:01,826 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 14:29:01,826 INFO  query.QuerySchemaLoader  [] - schemaName = dns-ip-query
2016-08-27 14:29:01,826 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 14:29:01,827 INFO  query.QuerySchemaLoader  [] - selectorName = ip
2016-08-27 14:29:01,827 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 14:29:01,827 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 32
2016-08-27 14:29:01,827 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 14:29:01,827 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 64
2016-08-27 14:29:01,827 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 14:29:01,827 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 128
2016-08-27 14:29:01,828 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-nxdomain-query_file64301807604971043.xml
2016-08-27 14:29:01,828 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-nxdomain-query_file64301807604971043.xml
2016-08-27 14:29:01,830 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 14:29:01,830 INFO  query.QuerySchemaLoader  [] - schemaName = dns-nxdomain-query
2016-08-27 14:29:01,830 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 14:29:01,830 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-27 14:29:01,830 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 14:29:01,831 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-27 14:29:01,831 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 14:29:01,831 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-27 14:29:01,831 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 14:29:01,831 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-27 14:29:01,831 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query_file3596829491844928214.xml
2016-08-27 14:29:01,831 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query_file3596829491844928214.xml
2016-08-27 14:29:01,833 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 14:29:01,834 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query
2016-08-27 14:29:01,834 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 14:29:01,834 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-27 14:29:01,834 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 14:29:01,835 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-27 14:29:01,835 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 14:29:01,835 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-27 14:29:01,835 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 14:29:01,836 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-27 14:29:01,836 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query-no-filter_file8715743593923063866.xml
2016-08-27 14:29:01,836 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query-no-filter_file8715743593923063866.xml
2016-08-27 14:29:01,838 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 14:29:01,838 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query-no-filter
2016-08-27 14:29:01,838 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 14:29:01,838 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-27 14:29:01,839 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 14:29:01,839 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-27 14:29:01,839 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 14:29:01,839 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-27 14:29:01,839 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 14:29:01,840 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-27 14:29:01,891 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,892 INFO  utils.QueryParserUtils  [] - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,892 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,892 INFO  utils.QueryParserUtils  [] - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,894 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,895 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
2016-08-27 14:29:01,895 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,895 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
2016-08-27 14:29:01,895 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,896 INFO  utils.QueryParserUtils  [] - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
2016-08-27 14:29:01,896 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,896 INFO  utils.QueryParserUtils  [] - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
2016-08-27 14:29:01,896 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,897 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
2016-08-27 14:29:01,897 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,897 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
2016-08-27 14:29:01,897 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,898 INFO  utils.QueryParserUtils  [] - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
2016-08-27 14:29:01,898 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,898 INFO  utils.QueryParserUtils  [] - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
2016-08-27 14:29:01,898 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,898 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,899 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,899 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,899 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,900 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
2016-08-27 14:29:01,900 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,900 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
2016-08-27 14:29:01,900 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,901 INFO  utils.QueryParserUtils  [] - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,901 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,901 INFO  utils.QueryParserUtils  [] - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,901 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,902 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
2016-08-27 14:29:01,902 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,902 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
2016-08-27 14:29:01,902 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,903 INFO  utils.QueryParserUtils  [] - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
2016-08-27 14:29:01,903 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,903 INFO  utils.QueryParserUtils  [] - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
2016-08-27 14:29:01,903 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,904 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
2016-08-27 14:29:01,904 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,904 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
2016-08-27 14:29:01,905 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,905 INFO  utils.QueryParserUtils  [] - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
2016-08-27 14:29:01,905 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,905 INFO  utils.QueryParserUtils  [] - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
2016-08-27 14:29:01,906 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,906 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,906 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,906 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,907 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,907 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
2016-08-27 14:29:01,907 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,907 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
2016-08-27 14:29:01,908 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,908 INFO  utils.QueryParserUtils  [] - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,908 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,908 INFO  utils.QueryParserUtils  [] - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,908 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,909 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
2016-08-27 14:29:01,909 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,909 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
2016-08-27 14:29:01,909 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,910 INFO  utils.QueryParserUtils  [] - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
2016-08-27 14:29:01,910 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,910 INFO  utils.QueryParserUtils  [] - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
2016-08-27 14:29:01,910 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,911 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
2016-08-27 14:29:01,911 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,911 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
2016-08-27 14:29:01,911 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,912 INFO  utils.QueryParserUtils  [] - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
2016-08-27 14:29:01,912 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,912 INFO  utils.QueryParserUtils  [] - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
2016-08-27 14:29:01,912 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,912 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,913 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,913 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,913 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,914 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
2016-08-27 14:29:01,914 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,914 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
2016-08-27 14:29:01,918 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [0+TO+2] value = 0
2016-08-27 14:29:01,919 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {-1+TO+2} value = 0
2016-08-27 14:29:01,919 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [-1+TO+0] value = 0
2016-08-27 14:29:01,919 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {0+TO+3} value = 0
2016-08-27 14:29:01,919 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [3+TO+10] value = 0
2016-08-27 14:29:01,920 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [0+TO+2] value = 0
2016-08-27 14:29:01,920 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {-1+TO+2} value = 0
2016-08-27 14:29:01,920 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [-1+TO+0] value = 0
2016-08-27 14:29:01,921 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {0+TO+3} value = 0
2016-08-27 14:29:01,921 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [3+TO+10] value = 0
2016-08-27 14:29:01,921 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [0+TO+2] value = 0
2016-08-27 14:29:01,921 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {-1+TO+2} value = 0
2016-08-27 14:29:01,922 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [-1+TO+0] value = 0
2016-08-27 14:29:01,922 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {0+TO+3} value = 0
2016-08-27 14:29:01,922 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [3+TO+10] value = 0
2016-08-27 14:29:01,926 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
2016-08-27 14:29:01,927 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
2016-08-27 14:29:01,927 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
2016-08-27 14:29:01,927 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
2016-08-27 14:29:01,928 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
2016-08-27 14:29:01,928 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
2016-08-27 14:29:01,928 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
2016-08-27 14:29:01,929 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
2016-08-27 14:29:01,929 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 14:29:01,929 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 14:29:01,929 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 14:29:01,929 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 14:29:01,929 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 14:29:01,929 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 14:29:01,929 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
2016-08-27 14:29:01,930 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
2016-08-27 14:29:01,930 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-27 14:29:01,930 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 14:29:01,930 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 14:29:01,930 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 14:29:01,930 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 14:29:01,930 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 14:29:01,931 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 14:29:01,931 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
2016-08-27 14:29:01,931 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
2016-08-27 14:29:01,931 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
2016-08-27 14:29:01,931 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 14:29:01,932 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 14:29:01,932 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 14:29:01,932 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 14:29:01,932 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 14:29:01,932 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 14:29:01,932 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
2016-08-27 14:29:01,932 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
2016-08-27 14:29:01,933 INFO  utils.QueryParserUtils  [] - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
2016-08-27 14:29:01,933 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
2016-08-27 14:29:01,933 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 14:29:01,933 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-27 14:29:01,934 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
2016-08-27 14:29:01,934 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 14:29:01,934 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-27 14:29:01,934 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
2016-08-27 14:29:01,934 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 14:29:01,934 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-27 14:29:01,934 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
2016-08-27 14:29:01,934 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-27 14:29:01,935 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
2016-08-27 14:29:01,935 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-27 14:29:01,936 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
2016-08-27 14:29:01,937 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
2016-08-27 14:29:01,937 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
2016-08-27 14:29:01,937 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
2016-08-27 14:29:01,937 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
2016-08-27 14:29:01,937 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
2016-08-27 14:29:01,937 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
2016-08-27 14:29:01,938 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
2016-08-27 14:29:01,938 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 14:29:01,938 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 14:29:01,938 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 14:29:01,938 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 14:29:01,938 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 14:29:01,938 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 14:29:01,938 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
2016-08-27 14:29:01,939 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
2016-08-27 14:29:01,939 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-27 14:29:01,939 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 14:29:01,939 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 14:29:01,939 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 14:29:01,939 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 14:29:01,939 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 14:29:01,939 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 14:29:01,939 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
2016-08-27 14:29:01,940 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
2016-08-27 14:29:01,940 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
2016-08-27 14:29:01,940 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 14:29:01,940 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 14:29:01,940 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 14:29:01,940 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 14:29:01,940 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 14:29:01,940 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 14:29:01,941 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
2016-08-27 14:29:01,941 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
2016-08-27 14:29:01,941 INFO  utils.QueryParserUtils  [] - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
2016-08-27 14:29:01,941 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
2016-08-27 14:29:01,941 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 14:29:01,941 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-27 14:29:01,941 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
2016-08-27 14:29:01,941 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 14:29:01,942 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-27 14:29:01,942 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
2016-08-27 14:29:01,942 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 14:29:01,942 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-27 14:29:01,942 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
2016-08-27 14:29:01,942 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-27 14:29:01,942 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
2016-08-27 14:29:01,942 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-27 14:29:01,943 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.40
2016-08-27 14:29:01,943 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-27 14:29:01,943 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-27 14:29:01,943 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 14:29:01,943 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-27 14:29:01,943 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 14:29:01,943 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-27 14:29:01,943 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 14:29:01,943 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 40 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-27 14:29:01,943 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-27 14:29:01,944 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.60
2016-08-27 14:29:01,944 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-27 14:29:01,944 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-27 14:29:01,944 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 14:29:01,945 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-27 14:29:01,945 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 14:29:01,945 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-27 14:29:01,945 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 14:29:01,945 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 60 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-27 14:29:01,945 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
2016-08-27 14:29:01,945 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
2016-08-27 14:29:01,946 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
2016-08-27 14:29:01,946 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
2016-08-27 14:29:01,946 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
2016-08-27 14:29:01,946 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
2016-08-27 14:29:01,946 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
2016-08-27 14:29:01,946 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
2016-08-27 14:29:01,946 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 14:29:01,947 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 14:29:01,947 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 14:29:01,947 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 14:29:01,947 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 14:29:01,947 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 14:29:01,947 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
2016-08-27 14:29:01,947 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
2016-08-27 14:29:01,948 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-27 14:29:01,948 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 14:29:01,948 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 14:29:01,948 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 14:29:01,948 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 14:29:01,948 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 14:29:01,948 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 14:29:01,948 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
2016-08-27 14:29:01,949 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
2016-08-27 14:29:01,949 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
2016-08-27 14:29:01,949 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 14:29:01,950 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 14:29:01,950 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 14:29:01,950 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 14:29:01,950 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 14:29:01,950 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 14:29:01,950 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
2016-08-27 14:29:01,951 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
2016-08-27 14:29:01,951 INFO  utils.QueryParserUtils  [] - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
2016-08-27 14:29:01,951 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
2016-08-27 14:29:01,951 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 14:29:01,952 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-27 14:29:01,952 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
2016-08-27 14:29:01,952 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 14:29:01,952 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-27 14:29:01,952 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
2016-08-27 14:29:01,953 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 14:29:01,953 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-27 14:29:01,953 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
2016-08-27 14:29:01,953 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-27 14:29:01,953 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
2016-08-27 14:29:01,953 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-27 14:29:01,954 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.40
2016-08-27 14:29:01,954 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-27 14:29:01,954 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-27 14:29:01,954 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 14:29:01,954 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-27 14:29:01,954 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 14:29:01,954 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-27 14:29:01,954 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 14:29:01,955 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 40 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-27 14:29:01,955 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-27 14:29:01,955 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.60
2016-08-27 14:29:01,955 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-27 14:29:01,955 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-27 14:29:01,955 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 14:29:01,955 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-27 14:29:01,955 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 14:29:01,955 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-27 14:29:01,956 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 14:29:01,956 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 60 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-27 14:29:01,956 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,956 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,957 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,957 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,957 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,958 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,958 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,958 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,959 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,959 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,960 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,960 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,960 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,961 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,961 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,961 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,962 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,962 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,962 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,962 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,963 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,963 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,963 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,964 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,964 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,964 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,964 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,964 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,965 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,965 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,965 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,966 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,966 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,966 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,966 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,966 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,967 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,967 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,967 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,967 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,968 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,968 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,968 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,968 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 14:29:01,969 INFO  general.QueryParserUtilsTest  [] - running testIgnoreCase
2016-08-27 14:29:01,969 INFO  general.QueryParserUtilsTest  [] - completed testIgnoreCase
2016-08-27 14:29:01,970 INFO  general.QueryParserUtilsTest  [] - running testQueryFieldDoesNotExist
2016-08-27 14:29:01,971 INFO  general.QueryParserUtilsTest  [] - completed testQueryFieldDoesNotExist
2016-08-27 14:29:01,974 INFO  data.LoadDataSchemaTest  [] - file = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/unknownPartitioner4066358504708497115.xml
2016-08-27 14:29:01,977 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/unknownPartitioner4066358504708497115.xml hdfs = false
2016-08-27 14:29:01,978 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/unknownPartitioner4066358504708497115.xml
2016-08-27 14:29:01,979 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-27 14:29:01,980 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-27 14:29:01,981 INFO  data.LoadDataSchemaTest  [] - file = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/schemaFile2576294688774074503.xml
2016-08-27 14:29:01,983 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/schemaFile2576294688774074503.xml hdfs = false
2016-08-27 14:29:01,984 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/schemaFile2576294688774074503.xml
2016-08-27 14:29:01,985 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-27 14:29:01,986 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-27 14:29:01,986 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 14:29:01,986 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 14:29:01,986 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 14:29:01,988 INFO  data.LoadDataSchemaTest  [] - file = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/wrongJavaType6633990904534674161.xml
2016-08-27 14:29:01,990 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/wrongJavaType6633990904534674161.xml hdfs = false
2016-08-27 14:29:01,991 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/wrongJavaType6633990904534674161.xml
2016-08-27 14:29:01,992 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-27 14:29:01,992 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-27 14:29:01,995 INFO  query.LoadQuerySchemaTest  [] - Starting testDataSchemaDoesNotExist: 
2016-08-27 14:29:01,995 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-27 14:29:01,995 INFO  utils.TestUtils    [] - localFS: file = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySchemaFile3104870627719450765.xml
2016-08-27 14:29:01,996 INFO  utils.TestUtils    [] - query.schemas = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySchemaFile3104870627719450765.xml
2016-08-27 14:29:01,997 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-27 14:29:01,997 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-27 14:29:01,997 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-27 14:29:01,998 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySchemaFile3104870627719450765.xml
2016-08-27 14:29:01,998 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySchemaFile3104870627719450765.xml
2016-08-27 14:29:02,000 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 14:29:02,000 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-27 14:29:02,000 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-27 14:29:02,000 INFO  query.QuerySchemaLoader  [] - selectorName = elementName4
2016-08-27 14:29:02,000 INFO  query.LoadQuerySchemaTest  [] - Finished testDataSchemaDoesNotExist 
2016-08-27 14:29:02,001 INFO  query.LoadQuerySchemaTest  [] - Starting testGeneralSchemaLoad: 
2016-08-27 14:29:02,001 INFO  utils.Inputs       [] - StopList file being created
2016-08-27 14:29:02,002 INFO  utils.TestUtils    [] - localFS: file = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/stopListFile21595444382942423.tmp
2016-08-27 14:29:02,003 INFO  query.LoadQuerySchemaTest  [] - file = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dataSchemaFile6067878843274726126.xml
2016-08-27 14:29:02,006 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dataSchemaFile6067878843274726126.xml hdfs = false
2016-08-27 14:29:02,006 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dataSchemaFile6067878843274726126.xml
2016-08-27 14:29:02,008 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-27 14:29:02,008 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-27 14:29:02,009 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 14:29:02,011 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 14:29:02,011 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 14:29:02,011 INFO  data.DataSchemaLoader  [] - name = elementName4 javaType = byte isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 14:29:02,012 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-27 14:29:02,013 INFO  utils.TestUtils    [] - localFS: file = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySchemaFile1179522469726343765.xml
2016-08-27 14:29:02,013 INFO  utils.TestUtils    [] - query.schemas = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySchemaFile1179522469726343765.xml
2016-08-27 14:29:02,015 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-27 14:29:02,015 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-27 14:29:02,016 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-27 14:29:02,016 INFO  utils.TestUtils    [] - filterName = elementName2
2016-08-27 14:29:02,018 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySchemaFile1179522469726343765.xml
2016-08-27 14:29:02,018 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySchemaFile1179522469726343765.xml
2016-08-27 14:29:02,019 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 14:29:02,020 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-27 14:29:02,020 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-27 14:29:02,020 INFO  query.QuerySchemaLoader  [] - selectorName = elementName4
2016-08-27 14:29:02,020 INFO  query.QuerySchemaLoader  [] - name = elementName1 partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 14:29:02,020 INFO  query.QuerySchemaLoader  [] - name = elementName1 bits = 64 dataElementSize = 64
2016-08-27 14:29:02,020 INFO  query.QuerySchemaLoader  [] - name = elementName2 partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 14:29:02,020 INFO  query.QuerySchemaLoader  [] - name = elementName2 bits = 64 dataElementSize = 128
2016-08-27 14:29:02,020 INFO  query.QuerySchemaLoader  [] - name = elementName3 partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 14:29:02,020 INFO  query.QuerySchemaLoader  [] - name = elementName3 bits = 64 dataElementSize = 192
2016-08-27 14:29:02,021 INFO  query.QuerySchemaLoader  [] - filterName = elementName2
2016-08-27 14:29:02,224 WARN  util.NativeCodeLoader  [] - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2016-08-27 14:29:02,432 INFO  query.LoadQuerySchemaTest  [] - Finished testGeneralSchemaLoad: 
2016-08-27 14:29:02,432 INFO  query.LoadQuerySchemaTest  [] - Starting testSelectorDoesNotExistInDataSchema: 
2016-08-27 14:29:02,433 INFO  query.LoadQuerySchemaTest  [] - file = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dataSchemaFile1499184303744582617.xml
2016-08-27 14:29:02,436 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dataSchemaFile1499184303744582617.xml hdfs = false
2016-08-27 14:29:02,437 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dataSchemaFile1499184303744582617.xml
2016-08-27 14:29:02,438 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-27 14:29:02,438 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-27 14:29:02,439 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 14:29:02,439 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 14:29:02,439 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 14:29:02,439 INFO  data.DataSchemaLoader  [] - name = elementName4 javaType = byte isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 14:29:02,439 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-27 14:29:02,440 INFO  utils.TestUtils    [] - localFS: file = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySchemaFile5403612746684519038.xml
2016-08-27 14:29:02,440 INFO  utils.TestUtils    [] - query.schemas = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySchemaFile5403612746684519038.xml
2016-08-27 14:29:02,441 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-27 14:29:02,441 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-27 14:29:02,441 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-27 14:29:02,441 INFO  utils.TestUtils    [] - filterName = elementName2
2016-08-27 14:29:02,443 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySchemaFile5403612746684519038.xml
2016-08-27 14:29:02,443 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySchemaFile5403612746684519038.xml
2016-08-27 14:29:02,444 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 14:29:02,445 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-27 14:29:02,445 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-27 14:29:02,445 INFO  query.QuerySchemaLoader  [] - selectorName = nonExistentElement
2016-08-27 14:29:02,445 INFO  query.LoadQuerySchemaTest  [] - Finished testSelectorDoesNotExistInDataSchema 
2016-08-27 14:29:02,446 INFO  query.LoadQuerySchemaTest  [] - file = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dataSchemaFile2467656399795674255.xml
2016-08-27 14:29:02,448 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dataSchemaFile2467656399795674255.xml hdfs = false
2016-08-27 14:29:02,448 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dataSchemaFile2467656399795674255.xml
2016-08-27 14:29:02,449 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-27 14:29:02,450 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-27 14:29:02,450 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 14:29:02,450 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 14:29:02,450 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 14:29:02,450 INFO  data.DataSchemaLoader  [] - name = elementName4 javaType = byte isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 14:29:02,450 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-27 14:29:02,450 INFO  utils.TestUtils    [] - localFS: file = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySchemaFile8618970081965044713.xml
2016-08-27 14:29:02,451 INFO  utils.TestUtils    [] - query.schemas = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySchemaFile8618970081965044713.xml
2016-08-27 14:29:02,452 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-27 14:29:02,452 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-27 14:29:02,452 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-27 14:29:02,453 INFO  utils.TestUtils    [] - filterName = elementName2
2016-08-27 14:29:02,455 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySchemaFile8618970081965044713.xml
2016-08-27 14:29:02,455 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySchemaFile8618970081965044713.xml
2016-08-27 14:29:02,457 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 14:29:02,457 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-27 14:29:02,457 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-27 14:29:02,457 INFO  query.QuerySchemaLoader  [] - selectorName = nonExistentElement
2016-08-27 14:29:02,458 INFO  query.LoadQuerySchemaTest  [] - Finished testFunkyFilterScenarios
2016-08-27 14:29:02,723 INFO  utils.Inputs       [] - StopList file being created
2016-08-27 14:29:02,724 INFO  utils.TestUtils    [] - localFS: file = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/stopListFile8301823979446133606.tmp
2016-08-27 14:29:02,724 INFO  standalone.StandaloneTest  [] - stopListFileProp = stopListFile new prop = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/stopListFile8301823979446133606.tmp
2016-08-27 14:29:02,725 INFO  utils.Inputs       [] - file = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/testDataSchemaFile262285525453620293.xml
2016-08-27 14:29:02,727 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/testDataSchemaFile262285525453620293.xml hdfs = false
2016-08-27 14:29:02,728 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/testDataSchemaFile262285525453620293.xml
2016-08-27 14:29:02,729 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-27 14:29:02,729 INFO  data.DataSchemaLoader  [] - schemaName = testDataSchema
2016-08-27 14:29:02,730 INFO  data.DataSchemaLoader  [] - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-27 14:29:02,730 INFO  data.DataSchemaLoader  [] - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 14:29:02,730 INFO  data.DataSchemaLoader  [] - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 14:29:02,731 INFO  data.DataSchemaLoader  [] - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 14:29:02,731 INFO  data.DataSchemaLoader  [] - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 14:29:02,731 INFO  data.DataSchemaLoader  [] - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 14:29:02,732 INFO  data.DataSchemaLoader  [] - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 14:29:02,732 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-hostname-query
2016-08-27 14:29:02,733 INFO  utils.TestUtils    [] - localFS: file = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-hostname-query_file6069678862051516825.xml
2016-08-27 14:29:02,733 INFO  utils.TestUtils    [] - query.schemas = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-hostname-query_file6069678862051516825.xml
2016-08-27 14:29:02,734 INFO  utils.TestUtils    [] - elementName = date
2016-08-27 14:29:02,735 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-27 14:29:02,735 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-27 14:29:02,736 INFO  utils.TestUtils    [] - elementName = qtype
2016-08-27 14:29:02,736 INFO  utils.TestUtils    [] - elementName = rcode
2016-08-27 14:29:02,736 INFO  utils.TestUtils    [] - elementName = ip
2016-08-27 14:29:02,736 INFO  utils.TestUtils    [] - filterName = qname
2016-08-27 14:29:02,739 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-ip-query
2016-08-27 14:29:02,740 INFO  utils.TestUtils    [] - localFS: file = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-ip-query_file3776200587166386295.xml
2016-08-27 14:29:02,740 INFO  utils.TestUtils    [] - query.schemas = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-hostname-query_file6069678862051516825.xml,/var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-ip-query_file3776200587166386295.xml
2016-08-27 14:29:02,742 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-27 14:29:02,742 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-27 14:29:02,742 INFO  utils.TestUtils    [] - elementName = ip
2016-08-27 14:29:02,742 INFO  utils.TestUtils    [] - filterName = qname
2016-08-27 14:29:02,744 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-nxdomain-query
2016-08-27 14:29:02,745 INFO  utils.TestUtils    [] - localFS: file = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-nxdomain-query_file5320273951083823555.xml
2016-08-27 14:29:02,745 INFO  utils.TestUtils    [] - query.schemas = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-hostname-query_file6069678862051516825.xml,/var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-ip-query_file3776200587166386295.xml,/var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-nxdomain-query_file5320273951083823555.xml
2016-08-27 14:29:02,747 INFO  utils.TestUtils    [] - elementName = qname
2016-08-27 14:29:02,747 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-27 14:29:02,747 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-27 14:29:02,747 INFO  utils.TestUtils    [] - filterName = qname
2016-08-27 14:29:02,749 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query
2016-08-27 14:29:02,750 INFO  utils.TestUtils    [] - localFS: file = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query_file7088002410185362647.xml
2016-08-27 14:29:02,750 INFO  utils.TestUtils    [] - query.schemas = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-hostname-query_file6069678862051516825.xml,/var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-ip-query_file3776200587166386295.xml,/var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-nxdomain-query_file5320273951083823555.xml,/var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query_file7088002410185362647.xml
2016-08-27 14:29:02,751 INFO  utils.TestUtils    [] - elementName = qname
2016-08-27 14:29:02,751 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-27 14:29:02,751 INFO  utils.TestUtils    [] - elementName = ip
2016-08-27 14:29:02,751 INFO  utils.TestUtils    [] - filterName = src_ip
2016-08-27 14:29:02,752 INFO  utils.TestUtils    [] - filterName = ip
2016-08-27 14:29:02,753 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query-no-filter
2016-08-27 14:29:02,754 INFO  utils.TestUtils    [] - localFS: file = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query-no-filter_file5954130011987370639.xml
2016-08-27 14:29:02,754 INFO  utils.TestUtils    [] - query.schemas = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-hostname-query_file6069678862051516825.xml,/var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-ip-query_file3776200587166386295.xml,/var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-nxdomain-query_file5320273951083823555.xml,/var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query_file7088002410185362647.xml,/var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query-no-filter_file5954130011987370639.xml
2016-08-27 14:29:02,755 INFO  utils.TestUtils    [] - elementName = qname
2016-08-27 14:29:02,755 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-27 14:29:02,755 INFO  utils.TestUtils    [] - elementName = ip
2016-08-27 14:29:02,761 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-hostname-query_file6069678862051516825.xml
2016-08-27 14:29:02,761 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-hostname-query_file6069678862051516825.xml
2016-08-27 14:29:02,763 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 14:29:02,764 INFO  query.QuerySchemaLoader  [] - schemaName = dns-hostname-query
2016-08-27 14:29:02,765 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 14:29:02,765 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-27 14:29:02,765 INFO  query.QuerySchemaLoader  [] - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-27 14:29:02,766 INFO  query.QuerySchemaLoader  [] - name = date bits = 64 dataElementSize = 64
2016-08-27 14:29:02,766 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 14:29:02,766 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-27 14:29:02,766 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 14:29:02,767 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-27 14:29:02,767 INFO  query.QuerySchemaLoader  [] - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 14:29:02,767 INFO  query.QuerySchemaLoader  [] - name = qtype bits = 32 dataElementSize = 160
2016-08-27 14:29:02,768 INFO  query.QuerySchemaLoader  [] - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 14:29:02,768 INFO  query.QuerySchemaLoader  [] - name = rcode bits = 32 dataElementSize = 192
2016-08-27 14:29:02,768 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 14:29:02,768 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 256
2016-08-27 14:29:02,769 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-27 14:29:02,804 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-ip-query_file3776200587166386295.xml
2016-08-27 14:29:02,804 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-ip-query_file3776200587166386295.xml
2016-08-27 14:29:02,806 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 14:29:02,806 INFO  query.QuerySchemaLoader  [] - schemaName = dns-ip-query
2016-08-27 14:29:02,806 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 14:29:02,807 INFO  query.QuerySchemaLoader  [] - selectorName = ip
2016-08-27 14:29:02,807 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 14:29:02,807 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 32
2016-08-27 14:29:02,808 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 14:29:02,808 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 64
2016-08-27 14:29:02,808 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 14:29:02,808 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 128
2016-08-27 14:29:02,808 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-27 14:29:02,845 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-nxdomain-query_file5320273951083823555.xml
2016-08-27 14:29:02,845 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-nxdomain-query_file5320273951083823555.xml
2016-08-27 14:29:02,848 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 14:29:02,849 INFO  query.QuerySchemaLoader  [] - schemaName = dns-nxdomain-query
2016-08-27 14:29:02,849 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 14:29:02,849 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-27 14:29:02,850 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 14:29:02,850 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-27 14:29:02,850 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 14:29:02,850 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-27 14:29:02,850 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 14:29:02,850 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-27 14:29:02,851 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-27 14:29:02,877 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query_file7088002410185362647.xml
2016-08-27 14:29:02,877 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query_file7088002410185362647.xml
2016-08-27 14:29:02,879 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 14:29:02,879 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query
2016-08-27 14:29:02,880 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 14:29:02,880 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-27 14:29:02,880 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 14:29:02,880 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-27 14:29:02,880 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 14:29:02,881 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-27 14:29:02,881 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 14:29:02,881 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-27 14:29:02,881 INFO  query.QuerySchemaLoader  [] - filterName = src_ip
2016-08-27 14:29:02,882 INFO  query.QuerySchemaLoader  [] - filterName = ip
2016-08-27 14:29:02,909 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query-no-filter_file5954130011987370639.xml
2016-08-27 14:29:02,910 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query-no-filter_file5954130011987370639.xml
2016-08-27 14:29:02,912 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 14:29:02,912 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query-no-filter
2016-08-27 14:29:02,912 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 14:29:02,912 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-27 14:29:02,912 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 14:29:02,913 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-27 14:29:02,914 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 14:29:02,914 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-27 14:29:02,914 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 14:29:02,915 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-27 14:29:02,917 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-27 14:29:02,925 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-27 14:29:02,931 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySideOut-querier7430119319270134213.txt fileQuery  = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySideOut-query7657146309960020391.txt responseFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/encryptedResponse5349154555225064591.txt fileFinalResults = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/finalResultFile7836773645311829888.txt
2016-08-27 14:29:02,934 INFO  wideskies.QueryInfo  [] - identifier = 1d581191-6e18-477f-ab80-ccc5c9aff936 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-27 14:29:02,945 INFO  encryption.Paillier  [] - Parameters = p = -2085772611 q = -1342973979 N = 1248218641 NSquared = 559570209 lambdaN = 95499484 bitLength = 384
2016-08-27 14:29:02,946 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-27 14:29:03,694 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-27 14:29:03,696 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-27 14:29:03,912 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-27 14:29:04,024 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-27 14:29:04,024 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-27 14:29:04,028 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 14:29:04,031 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 14:29:04,034 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 14:29:04,037 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 14:29:04,040 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 14:29:04,042 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-27 14:29:04,046 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-27 14:29:04,049 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-27 14:29:04,051 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-27 14:29:04,051 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-27 14:29:04,058 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-27 14:29:04,058 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-27 14:29:04,196 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-27 14:29:04,197 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-27 14:29:04,199 INFO  utils.BaseTests    [] - results:
2016-08-27 14:29:04,199 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-27 14:29:04,199 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-27 14:29:04,200 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 14:29:04,200 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 14:29:04,200 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-27 14:29:04,200 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 14:29:04,201 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 14:29:04,201 INFO  utils.BaseTests    [] - correctResults: 
2016-08-27 14:29:04,201 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-27 14:29:04,204 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 14:29:04,204 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 14:29:04,204 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-27 14:29:04,205 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 14:29:04,205 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 14:29:04,205 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-27 14:29:04,206 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-27 14:29:04,206 INFO  utils.BaseTests    [] - Running testSRCIPQuery(): 
2016-08-27 14:29:04,206 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-27 14:29:04,207 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySideOut-querier5551759842902011910.txt fileQuery  = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySideOut-query6487158835884239009.txt responseFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/encryptedResponse4791763240312879008.txt fileFinalResults = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/finalResultFile5051701239484200375.txt
2016-08-27 14:29:04,207 INFO  wideskies.QueryInfo  [] - identifier = 1d581191-6e18-477f-ab80-ccc5c9aff936 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 160 numPartitionsPerDataElement = 24 queryType = dns-srcip-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-27 14:29:04,221 INFO  encryption.Paillier  [] - Parameters = p = 1822550099 q = -1208699735 N = 1381546699 NSquared = -2384647 lambdaN = -1763635480 bitLength = 384
2016-08-27 14:29:04,221 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-27 14:29:04,651 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-27 14:29:04,652 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-27 14:29:04,786 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-27 14:29:04,856 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-27 14:29:04,856 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-27 14:29:04,858 INFO  utils.StandaloneQuery  [] - selector = 127.128.129.130 numDataElements = 7
2016-08-27 14:29:04,860 INFO  utils.StandaloneQuery  [] - selector = 131.132.133.134 numDataElements = 7
2016-08-27 14:29:04,863 INFO  utils.StandaloneQuery  [] - selector = 135.136.137.138 numDataElements = 7
2016-08-27 14:29:04,864 INFO  utils.StandaloneQuery  [] - selector = 139.140.141.142 numDataElements = 7
2016-08-27 14:29:04,866 INFO  utils.StandaloneQuery  [] - selector = 143.144.145.146 numDataElements = 7
2016-08-27 14:29:04,868 INFO  utils.StandaloneQuery  [] - selector = 1.1.1.1 numDataElements = 7
2016-08-27 14:29:04,869 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-27 14:29:04,871 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-27 14:29:04,872 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-27 14:29:04,873 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-27 14:29:04,874 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-27 14:29:04,874 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-27 14:29:04,939 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-27 14:29:04,939 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-27 14:29:04,941 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-27 14:29:04,941 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-27 14:29:04,941 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-27 14:29:04,941 INFO  utils.BaseTests    [] - correctResults:
2016-08-27 14:29:04,941 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":1d581191-6e18-477f-ab80-ccc5c9aff936,"qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-27 14:29:04,942 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":1d581191-6e18-477f-ab80-ccc5c9aff936,"qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-27 14:29:04,942 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":1d581191-6e18-477f-ab80-ccc5c9aff936,"qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-27 14:29:04,942 INFO  utils.BaseTests    [] - Completed testSRCIPQuery(): 
2016-08-27 14:29:04,942 INFO  utils.BaseTests    [] - Running testDNSIPQuery(): 
2016-08-27 14:29:04,942 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-27 14:29:04,943 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySideOut-querier1234154421143473554.txt fileQuery  = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySideOut-query6846411388366800645.txt responseFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/encryptedResponse7153226815330874305.txt fileFinalResults = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/finalResultFile326653478534356185.txt
2016-08-27 14:29:04,943 INFO  wideskies.QueryInfo  [] - identifier = 1d581191-6e18-477f-ab80-ccc5c9aff936 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-ip-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-27 14:29:04,949 INFO  encryption.Paillier  [] - Parameters = p = -1580983019 q = -1611815997 N = 240616959 NSquared = 1031074817 lambdaN = 1716707988 bitLength = 384
2016-08-27 14:29:04,949 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-27 14:29:05,277 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-27 14:29:05,277 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-27 14:29:05,369 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-27 14:29:05,419 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-27 14:29:05,419 INFO  utils.StandaloneQuery  [] - selector = 10.20.30.40 numDataElements = 7
2016-08-27 14:29:05,420 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-27 14:29:05,422 INFO  utils.StandaloneQuery  [] - selector = 13.14.15.16 numDataElements = 7
2016-08-27 14:29:05,423 INFO  utils.StandaloneQuery  [] - selector = 21.22.23.24 numDataElements = 7
2016-08-27 14:29:05,424 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-27 14:29:05,425 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-27 14:29:05,427 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.3 numDataElements = 7
2016-08-27 14:29:05,429 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-27 14:29:05,431 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-27 14:29:05,433 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-27 14:29:05,433 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-27 14:29:05,434 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-27 14:29:05,435 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-27 14:29:05,498 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-27 14:29:05,498 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-27 14:29:05,500 INFO  utils.BaseTests    [] - {"src_ip":"127.128.129.130","event_type":"dns-ip-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-27 14:29:05,500 INFO  utils.BaseTests    [] - {"src_ip":"139.140.141.142","event_type":"dns-ip-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-27 14:29:05,500 INFO  utils.BaseTests    [] - {"src_ip":"143.144.145.146","event_type":"dns-ip-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-27 14:29:05,500 INFO  utils.BaseTests    [] - {"src_ip":"131.132.133.134","event_type":"dns-ip-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"match":"13.14.15.16"}
2016-08-27 14:29:05,500 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-ip-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"10.20.30.40"}
2016-08-27 14:29:05,501 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-ip-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"match":"21.22.23.24"}
2016-08-27 14:29:05,501 INFO  utils.BaseTests    [] - Completed testDNSIPQuery(): 
2016-08-27 14:29:05,502 INFO  utils.BaseTests    [] - Running testDNSNXDOMAINQuery(): 
2016-08-27 14:29:05,502 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-27 14:29:05,502 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySideOut-querier2628068269570644795.txt fileQuery  = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySideOut-query2790548287809686809.txt responseFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/encryptedResponse5558980412252426486.txt fileFinalResults = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/finalResultFile1958580254888727391.txt
2016-08-27 14:29:05,502 INFO  wideskies.QueryInfo  [] - identifier = 1d581191-6e18-477f-ab80-ccc5c9aff936 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-nxdomain-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-27 14:29:05,508 INFO  encryption.Paillier  [] - Parameters = p = 631742857 q = 883223097 N = -339857023 NSquared = 1527685889 lambdaN = -768723784 bitLength = 384
2016-08-27 14:29:05,508 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-27 14:29:05,837 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-27 14:29:05,837 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-27 14:29:05,936 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-27 14:29:05,986 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-27 14:29:05,986 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 14:29:05,987 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-27 14:29:05,987 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-27 14:29:05,988 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-27 14:29:05,988 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-27 14:29:06,050 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-27 14:29:06,051 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-27 14:29:06,052 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-nxdomain-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qname":"d.e.com","dest_ip":"17.18.19.20","match":"d.e.com"}
2016-08-27 14:29:06,052 INFO  utils.BaseTests    [] - Completed testDNSNXDOMAINQuery(): 
2016-08-27 14:29:06,053 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-27 14:29:06,053 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-27 14:29:06,053 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySideOut-querier4273756459243154208.txt fileQuery  = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySideOut-query6535949879089343543.txt responseFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/encryptedResponse6839470462555657851.txt fileFinalResults = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/finalResultFile1586268146402867257.txt
2016-08-27 14:29:06,054 INFO  wideskies.QueryInfo  [] - identifier = 1d581191-6e18-477f-ab80-ccc5c9aff936 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-27 14:29:06,059 INFO  encryption.Paillier  [] - Parameters = p = 1993075961 q = -125791199 N = -372670439 NSquared = -379911567 lambdaN = -734494176 bitLength = 384
2016-08-27 14:29:06,060 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-27 14:29:06,737 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-27 14:29:06,737 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-27 14:29:06,830 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-27 14:29:06,883 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-27 14:29:06,883 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-27 14:29:06,885 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 14:29:06,886 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 14:29:06,888 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 14:29:06,889 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 14:29:06,890 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 14:29:06,892 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-27 14:29:06,893 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-27 14:29:06,895 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-27 14:29:06,896 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-27 14:29:06,897 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-27 14:29:06,905 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-27 14:29:06,905 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-27 14:29:06,994 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-27 14:29:06,994 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-27 14:29:06,995 INFO  utils.BaseTests    [] - results:
2016-08-27 14:29:06,996 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-27 14:29:06,996 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-27 14:29:06,996 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 14:29:06,996 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 14:29:06,996 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-27 14:29:06,996 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 14:29:06,996 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 14:29:06,996 INFO  utils.BaseTests    [] - correctResults: 
2016-08-27 14:29:06,996 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-27 14:29:06,997 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 14:29:06,997 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 14:29:06,997 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-27 14:29:06,997 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 14:29:06,997 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 14:29:06,997 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-27 14:29:06,998 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-27 14:29:06,998 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-27 14:29:06,998 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-27 14:29:06,999 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySideOut-querier4495254576572028085.txt fileQuery  = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySideOut-query5908038079222001650.txt responseFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/encryptedResponse7948608542052768881.txt fileFinalResults = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/finalResultFile2700094920011462827.txt
2016-08-27 14:29:06,999 INFO  wideskies.QueryInfo  [] - identifier = 1d581191-6e18-477f-ab80-ccc5c9aff936 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-27 14:29:07,004 INFO  encryption.Paillier  [] - Parameters = p = -1957687561 q = 533051399 N = -955977535 NSquared = 1987211649 lambdaN = 234329314 bitLength = 384
2016-08-27 14:29:07,004 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-27 14:29:07,654 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-27 14:29:07,654 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-27 14:29:07,746 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-27 14:29:07,795 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-27 14:29:07,795 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-27 14:29:07,796 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 14:29:07,798 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 14:29:07,799 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 14:29:07,801 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 14:29:07,802 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 14:29:07,803 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-27 14:29:07,805 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-27 14:29:07,806 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-27 14:29:07,808 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-27 14:29:07,808 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-27 14:29:07,810 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-27 14:29:07,810 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-27 14:29:07,890 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-27 14:29:07,890 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-27 14:29:07,891 INFO  utils.BaseTests    [] - results:
2016-08-27 14:29:07,892 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-27 14:29:07,892 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-27 14:29:07,892 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 14:29:07,892 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 14:29:07,892 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-27 14:29:07,892 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 14:29:07,892 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 14:29:07,892 INFO  utils.BaseTests    [] - correctResults: 
2016-08-27 14:29:07,893 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-27 14:29:07,893 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 14:29:07,893 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 14:29:07,893 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-27 14:29:07,893 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 14:29:07,893 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 14:29:07,893 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-27 14:29:07,894 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-27 14:29:07,894 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-27 14:29:07,894 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-27 14:29:07,895 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySideOut-querier1662180063872347578.txt fileQuery  = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySideOut-query5763652890103072005.txt responseFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/encryptedResponse5286852130719869581.txt fileFinalResults = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/finalResultFile3578000102615402683.txt
2016-08-27 14:29:07,895 INFO  wideskies.QueryInfo  [] - identifier = 1d581191-6e18-477f-ab80-ccc5c9aff936 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-27 14:29:07,901 INFO  encryption.Paillier  [] - Parameters = p = -1970793733 q = -1580787071 N = 1016860283 NSquared = 1320791833 lambdaN = 761406848 bitLength = 384
2016-08-27 14:29:07,901 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-27 14:29:08,233 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-27 14:29:08,233 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-27 14:29:08,326 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-27 14:29:08,374 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-27 14:29:08,374 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-27 14:29:08,375 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 14:29:08,377 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 14:29:08,378 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 14:29:08,380 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 14:29:08,381 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 14:29:08,383 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-27 14:29:08,384 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-27 14:29:08,386 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-27 14:29:08,388 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-27 14:29:08,388 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-27 14:29:08,391 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-27 14:29:08,391 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-27 14:29:08,474 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-27 14:29:08,474 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-27 14:29:08,476 INFO  utils.BaseTests    [] - results:
2016-08-27 14:29:08,476 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-27 14:29:08,476 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-27 14:29:08,476 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 14:29:08,476 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 14:29:08,476 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-27 14:29:08,476 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 14:29:08,476 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 14:29:08,477 INFO  utils.BaseTests    [] - correctResults: 
2016-08-27 14:29:08,477 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-27 14:29:08,477 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 14:29:08,477 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 14:29:08,477 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-27 14:29:08,477 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 14:29:08,477 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 14:29:08,477 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-27 14:29:08,478 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-27 14:29:08,478 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-27 14:29:08,478 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-27 14:29:08,478 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySideOut-querier7078220820873792156.txt fileQuery  = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySideOut-query3850064992734419415.txt responseFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/encryptedResponse2619933165912729434.txt fileFinalResults = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/finalResultFile1795610489955146195.txt
2016-08-27 14:29:08,478 INFO  wideskies.QueryInfo  [] - identifier = 1d581191-6e18-477f-ab80-ccc5c9aff936 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 32 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-27 14:29:08,495 INFO  encryption.Paillier  [] - Parameters = p = -904413125 q = 461147711 N = 1041041541 NSquared = 1238013209 lambdaN = -1405330170 bitLength = 384
2016-08-27 14:29:08,495 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-27 14:29:09,203 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-27 14:29:09,204 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-27 14:29:09,292 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-27 14:29:09,344 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-27 14:29:09,344 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-27 14:29:09,345 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 14:29:09,347 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 14:29:09,348 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 14:29:09,349 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 14:29:09,351 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 14:29:09,352 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-27 14:29:09,353 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-27 14:29:09,355 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-27 14:29:09,359 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-27 14:29:09,359 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-27 14:29:09,362 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-27 14:29:09,362 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-27 14:29:09,441 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-27 14:29:09,446 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-27 14:29:09,447 INFO  utils.BaseTests    [] - results:
2016-08-27 14:29:09,448 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-27 14:29:09,448 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-27 14:29:09,448 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 14:29:09,448 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 14:29:09,448 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-27 14:29:09,449 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 14:29:09,449 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 14:29:09,449 INFO  utils.BaseTests    [] - correctResults: 
2016-08-27 14:29:09,450 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-27 14:29:09,450 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 14:29:09,450 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 14:29:09,451 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-27 14:29:09,451 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 14:29:09,451 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 14:29:09,452 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-27 14:29:09,452 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-27 14:29:09,453 INFO  utils.BaseTests    [] - Running testSRCIPQuery(): 
2016-08-27 14:29:09,453 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-27 14:29:09,454 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySideOut-querier3189258152180511128.txt fileQuery  = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySideOut-query2655143151021219068.txt responseFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/encryptedResponse1301057974876334697.txt fileFinalResults = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/finalResultFile3459306781578621836.txt
2016-08-27 14:29:09,454 INFO  wideskies.QueryInfo  [] - identifier = 1d581191-6e18-477f-ab80-ccc5c9aff936 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 160 numPartitionsPerDataElement = 20 queryType = dns-srcip-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-27 14:29:09,469 INFO  encryption.Paillier  [] - Parameters = p = -296205445 q = -616576479 N = 853852379 NSquared = -1553908903 lambdaN = -421388832 bitLength = 384
2016-08-27 14:29:09,469 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-27 14:29:09,808 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-27 14:29:09,808 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-27 14:29:09,907 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-27 14:29:09,955 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-27 14:29:09,955 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-27 14:29:09,956 INFO  utils.StandaloneQuery  [] - selector = 127.128.129.130 numDataElements = 7
2016-08-27 14:29:09,957 INFO  utils.StandaloneQuery  [] - selector = 131.132.133.134 numDataElements = 7
2016-08-27 14:29:09,958 INFO  utils.StandaloneQuery  [] - selector = 135.136.137.138 numDataElements = 7
2016-08-27 14:29:09,959 INFO  utils.StandaloneQuery  [] - selector = 139.140.141.142 numDataElements = 7
2016-08-27 14:29:09,960 INFO  utils.StandaloneQuery  [] - selector = 143.144.145.146 numDataElements = 7
2016-08-27 14:29:09,961 INFO  utils.StandaloneQuery  [] - selector = 1.1.1.1 numDataElements = 7
2016-08-27 14:29:09,962 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-27 14:29:09,963 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-27 14:29:09,964 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-27 14:29:09,964 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-27 14:29:09,965 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-27 14:29:09,965 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-27 14:29:10,022 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-27 14:29:10,022 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-27 14:29:10,023 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-27 14:29:10,023 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-27 14:29:10,023 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-27 14:29:10,024 INFO  utils.BaseTests    [] - correctResults:
2016-08-27 14:29:10,024 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":1d581191-6e18-477f-ab80-ccc5c9aff936,"qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-27 14:29:10,024 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":1d581191-6e18-477f-ab80-ccc5c9aff936,"qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-27 14:29:10,024 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":1d581191-6e18-477f-ab80-ccc5c9aff936,"qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-27 14:29:10,024 INFO  utils.BaseTests    [] - Completed testSRCIPQuery(): 
2016-08-27 14:29:10,024 INFO  utils.BaseTests    [] - Running testDNSIPQuery(): 
2016-08-27 14:29:10,024 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-27 14:29:10,025 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySideOut-querier8332993833182519575.txt fileQuery  = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySideOut-query3062978978939559880.txt responseFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/encryptedResponse2881491912848889210.txt fileFinalResults = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/finalResultFile5772682800968526600.txt
2016-08-27 14:29:10,025 INFO  wideskies.QueryInfo  [] - identifier = 1d581191-6e18-477f-ab80-ccc5c9aff936 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-ip-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-27 14:29:10,030 INFO  encryption.Paillier  [] - Parameters = p = -2096791683 q = 390590101 N = -177968703 NSquared = 880272257 lambdaN = 1455800044 bitLength = 384
2016-08-27 14:29:10,030 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-27 14:29:10,364 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-27 14:29:10,364 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-27 14:29:10,455 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-27 14:29:10,506 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-27 14:29:10,506 INFO  utils.StandaloneQuery  [] - selector = 10.20.30.40 numDataElements = 7
2016-08-27 14:29:10,507 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-27 14:29:10,508 INFO  utils.StandaloneQuery  [] - selector = 13.14.15.16 numDataElements = 7
2016-08-27 14:29:10,509 INFO  utils.StandaloneQuery  [] - selector = 21.22.23.24 numDataElements = 7
2016-08-27 14:29:10,510 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-27 14:29:10,510 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-27 14:29:10,511 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.3 numDataElements = 7
2016-08-27 14:29:10,512 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-27 14:29:10,513 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-27 14:29:10,514 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-27 14:29:10,514 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-27 14:29:10,515 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-27 14:29:10,515 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-27 14:29:10,577 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-27 14:29:10,578 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-27 14:29:10,579 INFO  utils.BaseTests    [] - {"src_ip":"127.128.129.130","event_type":"dns-ip-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-27 14:29:10,579 INFO  utils.BaseTests    [] - {"src_ip":"139.140.141.142","event_type":"dns-ip-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-27 14:29:10,579 INFO  utils.BaseTests    [] - {"src_ip":"143.144.145.146","event_type":"dns-ip-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-27 14:29:10,579 INFO  utils.BaseTests    [] - {"src_ip":"131.132.133.134","event_type":"dns-ip-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"match":"13.14.15.16"}
2016-08-27 14:29:10,580 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-ip-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"10.20.30.40"}
2016-08-27 14:29:10,580 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-ip-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"match":"21.22.23.24"}
2016-08-27 14:29:10,580 INFO  utils.BaseTests    [] - Completed testDNSIPQuery(): 
2016-08-27 14:29:10,580 INFO  utils.BaseTests    [] - Running testDNSNXDOMAINQuery(): 
2016-08-27 14:29:10,580 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-27 14:29:10,581 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySideOut-querier6404869669825604479.txt fileQuery  = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySideOut-query5595488611769415728.txt responseFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/encryptedResponse3761072222433639642.txt fileFinalResults = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/finalResultFile5519550201912952124.txt
2016-08-27 14:29:10,581 INFO  wideskies.QueryInfo  [] - identifier = 1d581191-6e18-477f-ab80-ccc5c9aff936 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-nxdomain-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-27 14:29:10,590 INFO  encryption.Paillier  [] - Parameters = p = 408810091 q = -424928151 N = 1190142435 NSquared = -1306767543 lambdaN = 603130248 bitLength = 384
2016-08-27 14:29:10,591 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-27 14:29:10,911 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-27 14:29:10,912 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-27 14:29:11,005 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-27 14:29:11,055 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-27 14:29:11,055 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 14:29:11,056 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-27 14:29:11,056 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-27 14:29:11,057 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-27 14:29:11,057 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-27 14:29:11,110 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-27 14:29:11,110 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-27 14:29:11,111 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-nxdomain-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qname":"d.e.com","dest_ip":"17.18.19.20","match":"d.e.com"}
2016-08-27 14:29:11,111 INFO  utils.BaseTests    [] - Completed testDNSNXDOMAINQuery(): 
2016-08-27 14:29:11,111 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-27 14:29:11,112 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-27 14:29:11,112 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySideOut-querier6585259787966103989.txt fileQuery  = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySideOut-query1237745840988348627.txt responseFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/encryptedResponse1219831121093023471.txt fileFinalResults = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/finalResultFile3544963015710561810.txt
2016-08-27 14:29:11,112 INFO  wideskies.QueryInfo  [] - identifier = 1d581191-6e18-477f-ab80-ccc5c9aff936 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-27 14:29:11,121 INFO  encryption.Paillier  [] - Parameters = p = 112889063 q = 1986026221 N = 551397339 NSquared = -30575271 lambdaN = 1373724676 bitLength = 384
2016-08-27 14:29:11,121 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-27 14:29:11,776 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-27 14:29:11,777 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-27 14:29:11,777 INFO  utils.StandaloneQuery  [] - embedSelectorMap((embedSelectorMap.size()-2)) = 650527453 selector = something.else
2016-08-27 14:29:11,871 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-27 14:29:11,921 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-27 14:29:11,921 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-27 14:29:11,922 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 14:29:11,924 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 14:29:11,925 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 14:29:11,926 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 14:29:11,927 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 14:29:11,929 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-27 14:29:11,930 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-27 14:29:11,932 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-27 14:29:11,933 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-27 14:29:11,934 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-27 14:29:11,936 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-27 14:29:11,936 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-27 14:29:12,017 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-27 14:29:12,017 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-27 14:29:12,018 INFO  utils.BaseTests    [] - results:
2016-08-27 14:29:12,018 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-27 14:29:12,018 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 14:29:12,019 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 14:29:12,019 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-27 14:29:12,019 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 14:29:12,019 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 14:29:12,019 INFO  utils.BaseTests    [] - correctResults: 
2016-08-27 14:29:12,019 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-27 14:29:12,019 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 14:29:12,019 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 14:29:12,020 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-27 14:29:12,020 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 14:29:12,020 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"1d581191-6e18-477f-ab80-ccc5c9aff936","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 14:29:12,020 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-27 15:29:58,218 INFO  general.ISO8601DateParserTest  [] - Starting testDateParsing: 
2016-08-27 15:29:58,224 INFO  general.ISO8601DateParserTest  [] - Successfully completed testDateParsing
2016-08-27 15:29:58,234 INFO  general.KeyedHashTest  [] - Starting testKeyedHash: 
2016-08-27 15:29:58,243 INFO  general.KeyedHashTest  [] - hash1 = 715 hash1 = 1011001011
2016-08-27 15:29:58,243 INFO  general.KeyedHashTest  [] - hash2 = -507510069 hash2 = -11110001111111111110100110101
2016-08-27 15:29:58,244 INFO  general.KeyedHashTest  [] - hash3 = -507510069 hash3 = -11110001111111111110100110101
2016-08-27 15:29:58,244 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHash
2016-08-27 15:29:58,247 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: MD5
2016-08-27 15:29:58,255 INFO  general.KeyedHashTest  [] - hash1 = 26 hash1 = 11010
2016-08-27 15:29:58,255 INFO  general.KeyedHashTest  [] - hash2 = 2047168538 hash2 = 1111010000001010101000000011010
2016-08-27 15:29:58,256 INFO  general.KeyedHashTest  [] - hash3 = 2047168538 hash3 = 1111010000001010101000000011010
2016-08-27 15:29:58,257 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: MD5
2016-08-27 15:29:58,257 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: SHA-1
2016-08-27 15:29:58,258 INFO  general.KeyedHashTest  [] - hash1 = 1116 hash1 = 10001011100
2016-08-27 15:29:58,259 INFO  general.KeyedHashTest  [] - hash2 = 1614103644 hash2 = 1100000001101010100010001011100
2016-08-27 15:29:58,260 INFO  general.KeyedHashTest  [] - hash3 = 1614103644 hash3 = 1100000001101010100010001011100
2016-08-27 15:29:58,260 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: SHA-1
2016-08-27 15:29:58,261 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: SHA-256
2016-08-27 15:29:58,263 INFO  general.KeyedHashTest  [] - hash1 = 2100 hash1 = 100000110100
2016-08-27 15:29:58,264 INFO  general.KeyedHashTest  [] - hash2 = 1097439284 hash2 = 1000001011010011001100000110100
2016-08-27 15:29:58,264 INFO  general.KeyedHashTest  [] - hash3 = 1097439284 hash3 = 1000001011010011001100000110100
2016-08-27 15:29:58,265 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: SHA-256
2016-08-27 15:29:58,265 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: FAKE-HASH-TYPE
2016-08-27 15:29:58,320 INFO  general.PaillierTest  [] - p = 7 q = 17 N = 119 bitLength = 7 lambdaN = 48 m1 = 5 m2 = 2 r1 = 3 r2 = 4
2016-08-27 15:29:58,325 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGeneration: 
2016-08-27 15:29:58,330 INFO  utils.SystemConfiguration  [] - Loading file 'pirk.properties'
2016-08-27 15:29:58,339 INFO  utils.SystemConfiguration  [] - Loading file 'querier.properties'
2016-08-27 15:29:58,355 INFO  utils.SystemConfiguration  [] - Loading file 'responder.properties'
2016-08-27 15:29:58,357 INFO  utils.SystemConfiguration  [] - Loading properties from dirName = /root/
2016-08-27 15:29:58,359 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-27 15:29:58,362 INFO  general.PaillierTest  [] - i = 0
2016-08-27 15:29:58,376 INFO  encryption.Paillier  [] - Using secure random from SUN:NativePRNG
2016-08-27 15:29:58,387 INFO  utils.KeyedHash    [] - java.security.NoSuchAlgorithmException: FAKE-HASH-TYPE MessageDigest not available
2016-08-27 15:29:58,387 INFO  general.KeyedHashTest  [] - hash1 = 715 hash1 = 1011001011
2016-08-27 15:29:58,387 INFO  utils.KeyedHash    [] - java.security.NoSuchAlgorithmException: FAKE-HASH-TYPE MessageDigest not available
2016-08-27 15:29:58,388 INFO  general.KeyedHashTest  [] - hash2 = -507510069 hash2 = -11110001111111111110100110101
2016-08-27 15:29:58,388 INFO  utils.KeyedHash    [] - java.security.NoSuchAlgorithmException: FAKE-HASH-TYPE MessageDigest not available
2016-08-27 15:29:58,389 INFO  general.KeyedHashTest  [] - hash3 = -507510069 hash3 = -11110001111111111110100110101
2016-08-27 15:29:58,390 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: FAKE-HASH-TYPE
2016-08-27 15:29:58,401 INFO  utils.SystemConfiguration  [] - Loading file 'pirk.properties'
2016-08-27 15:29:58,403 INFO  utils.SystemConfiguration  [] - Loading file 'querier.properties'
2016-08-27 15:29:58,404 INFO  utils.SystemConfiguration  [] - Loading file 'responder.properties'
2016-08-27 15:29:58,406 INFO  utils.SystemConfiguration  [] - Loading properties from dirName = /root/
2016-08-27 15:29:58,426 INFO  utils.Inputs       [] - StopList file being created
2016-08-27 15:29:58,442 INFO  utils.TestUtils    [] - localFS: file = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/stopListFile3265985943200090790.tmp
2016-08-27 15:29:58,443 INFO  standalone.StandaloneTest  [] - stopListFileProp = stopListFile new prop = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/stopListFile3265985943200090790.tmp
2016-08-27 15:29:58,447 INFO  utils.Inputs       [] - file = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/testDataSchemaFile7400400310236958651.xml
2016-08-27 15:29:58,483 INFO  encryption.Paillier  [] - Parameters = p = 923114699 q = 1864642103 N = -437442147 NSquared = -176838071 lambdaN = 965970294 bitLength = 201
2016-08-27 15:29:58,565 INFO  data.DataSchemaLoader  [] - Loading pre-configured data schemas: 
2016-08-27 15:29:58,566 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/testDataSchemaFile7400400310236958651.xml hdfs = false
2016-08-27 15:29:58,568 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/testDataSchemaFile7400400310236958651.xml
2016-08-27 15:29:58,579 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-27 15:29:58,582 INFO  data.DataSchemaLoader  [] - schemaName = testDataSchema
2016-08-27 15:29:58,591 INFO  data.DataSchemaLoader  [] - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-27 15:29:58,592 INFO  data.DataSchemaLoader  [] - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 15:29:58,592 INFO  data.DataSchemaLoader  [] - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:29:58,593 INFO  data.DataSchemaLoader  [] - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:29:58,594 INFO  data.DataSchemaLoader  [] - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 15:29:58,594 INFO  data.DataSchemaLoader  [] - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 15:29:58,595 INFO  data.DataSchemaLoader  [] - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:29:58,595 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/testDataSchemaFile7400400310236958651.xml hdfs = false
2016-08-27 15:29:58,596 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/testDataSchemaFile7400400310236958651.xml
2016-08-27 15:29:58,599 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-27 15:29:58,600 INFO  data.DataSchemaLoader  [] - schemaName = testDataSchema
2016-08-27 15:29:58,601 INFO  data.DataSchemaLoader  [] - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-27 15:29:58,602 INFO  data.DataSchemaLoader  [] - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 15:29:58,602 INFO  data.DataSchemaLoader  [] - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:29:58,603 INFO  data.DataSchemaLoader  [] - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:29:58,603 INFO  data.DataSchemaLoader  [] - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 15:29:58,604 INFO  data.DataSchemaLoader  [] - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 15:29:58,604 INFO  data.DataSchemaLoader  [] - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:29:58,605 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-hostname-query
2016-08-27 15:29:58,605 INFO  utils.TestUtils    [] - localFS: file = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-hostname-query_file3314386415501988537.xml
2016-08-27 15:29:58,606 INFO  utils.TestUtils    [] - query.schemas = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-hostname-query_file3314386415501988537.xml
2016-08-27 15:29:58,608 INFO  utils.TestUtils    [] - elementName = date
2016-08-27 15:29:58,609 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-27 15:29:58,609 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-27 15:29:58,609 INFO  utils.TestUtils    [] - elementName = qtype
2016-08-27 15:29:58,610 INFO  utils.TestUtils    [] - elementName = rcode
2016-08-27 15:29:58,610 INFO  utils.TestUtils    [] - elementName = ip
2016-08-27 15:29:58,610 INFO  utils.TestUtils    [] - filterName = qname
2016-08-27 15:29:58,616 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-ip-query
2016-08-27 15:29:58,617 INFO  utils.TestUtils    [] - localFS: file = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-ip-query_file915737331856012481.xml
2016-08-27 15:29:58,617 INFO  utils.TestUtils    [] - query.schemas = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-hostname-query_file3314386415501988537.xml,/var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-ip-query_file915737331856012481.xml
2016-08-27 15:29:58,619 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-27 15:29:58,621 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-27 15:29:58,622 INFO  general.PaillierTest  [] - encM1 = -1571946673 encM2 = -1567628001
2016-08-27 15:29:58,624 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 15:29:58,624 INFO  utils.TestUtils    [] - elementName = ip
2016-08-27 15:29:58,625 INFO  utils.TestUtils    [] - filterName = qname
2016-08-27 15:29:58,625 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1232373163 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 15:29:58,631 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-nxdomain-query
2016-08-27 15:29:58,635 INFO  utils.TestUtils    [] - localFS: file = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-nxdomain-query_file3551224420275441127.xml
2016-08-27 15:29:58,636 INFO  utils.TestUtils    [] - query.schemas = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-hostname-query_file3314386415501988537.xml,/var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-ip-query_file915737331856012481.xml,/var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-nxdomain-query_file3551224420275441127.xml
2016-08-27 15:29:58,638 INFO  utils.TestUtils    [] - elementName = qname
2016-08-27 15:29:58,638 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-27 15:29:58,640 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-27 15:29:58,643 INFO  utils.TestUtils    [] - filterName = qname
2016-08-27 15:29:58,649 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query
2016-08-27 15:29:58,650 INFO  utils.TestUtils    [] - localFS: file = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query_file64669928874202112.xml
2016-08-27 15:29:58,653 INFO  utils.TestUtils    [] - query.schemas = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-hostname-query_file3314386415501988537.xml,/var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-ip-query_file915737331856012481.xml,/var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-nxdomain-query_file3551224420275441127.xml,/var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query_file64669928874202112.xml
2016-08-27 15:29:58,660 INFO  utils.TestUtils    [] - elementName = qname
2016-08-27 15:29:58,666 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-27 15:29:58,666 INFO  utils.TestUtils    [] - elementName = ip
2016-08-27 15:29:58,673 INFO  utils.TestUtils    [] - filterName = src_ip
2016-08-27 15:29:58,676 INFO  utils.TestUtils    [] - filterName = ip
2016-08-27 15:29:58,684 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query-no-filter
2016-08-27 15:29:58,685 INFO  utils.TestUtils    [] - localFS: file = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query-no-filter_file8397507933417789406.xml
2016-08-27 15:29:58,685 INFO  utils.TestUtils    [] - query.schemas = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-hostname-query_file3314386415501988537.xml,/var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-ip-query_file915737331856012481.xml,/var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-nxdomain-query_file3551224420275441127.xml,/var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query_file64669928874202112.xml,/var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query-no-filter_file8397507933417789406.xml
2016-08-27 15:29:58,687 INFO  utils.TestUtils    [] - elementName = qname
2016-08-27 15:29:58,687 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-27 15:29:58,688 INFO  utils.TestUtils    [] - elementName = ip
2016-08-27 15:29:58,693 INFO  query.QuerySchemaLoader  [] - Loading query schemas: 
2016-08-27 15:29:58,693 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-hostname-query_file3314386415501988537.xml
2016-08-27 15:29:58,694 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-hostname-query_file3314386415501988537.xml
2016-08-27 15:29:58,697 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 15:29:58,697 INFO  query.QuerySchemaLoader  [] - schemaName = dns-hostname-query
2016-08-27 15:29:58,698 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 15:29:58,698 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-27 15:29:58,699 INFO  query.QuerySchemaLoader  [] - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-27 15:29:58,699 INFO  query.QuerySchemaLoader  [] - name = date bits = 64 dataElementSize = 64
2016-08-27 15:29:58,700 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:29:58,700 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-27 15:29:58,700 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:29:58,701 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-27 15:29:58,701 INFO  query.QuerySchemaLoader  [] - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 15:29:58,701 INFO  query.QuerySchemaLoader  [] - name = qtype bits = 32 dataElementSize = 160
2016-08-27 15:29:58,702 INFO  query.QuerySchemaLoader  [] - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 15:29:58,702 INFO  query.QuerySchemaLoader  [] - name = rcode bits = 32 dataElementSize = 192
2016-08-27 15:29:58,702 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:29:58,703 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 256
2016-08-27 15:29:58,703 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-27 15:29:59,273 WARN  util.NativeCodeLoader  [] - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2016-08-27 15:29:59,715 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-ip-query_file915737331856012481.xml
2016-08-27 15:29:59,715 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-ip-query_file915737331856012481.xml
2016-08-27 15:29:59,718 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 15:29:59,718 INFO  query.QuerySchemaLoader  [] - schemaName = dns-ip-query
2016-08-27 15:29:59,718 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 15:29:59,719 INFO  query.QuerySchemaLoader  [] - selectorName = ip
2016-08-27 15:29:59,719 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:29:59,720 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 32
2016-08-27 15:29:59,723 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:29:59,723 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 64
2016-08-27 15:29:59,724 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:29:59,724 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 128
2016-08-27 15:29:59,724 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-27 15:29:59,791 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-nxdomain-query_file3551224420275441127.xml
2016-08-27 15:29:59,792 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-nxdomain-query_file3551224420275441127.xml
2016-08-27 15:29:59,795 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 15:29:59,796 INFO  query.QuerySchemaLoader  [] - schemaName = dns-nxdomain-query
2016-08-27 15:29:59,796 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 15:29:59,796 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-27 15:29:59,796 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 15:29:59,797 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-27 15:29:59,799 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:29:59,799 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-27 15:29:59,799 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:29:59,800 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-27 15:29:59,800 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-27 15:29:59,843 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query_file64669928874202112.xml
2016-08-27 15:29:59,844 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query_file64669928874202112.xml
2016-08-27 15:29:59,845 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 15:29:59,846 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query
2016-08-27 15:29:59,846 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 15:29:59,847 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-27 15:29:59,847 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 15:29:59,848 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-27 15:29:59,848 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:29:59,848 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-27 15:29:59,848 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:29:59,848 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-27 15:29:59,849 INFO  query.QuerySchemaLoader  [] - filterName = src_ip
2016-08-27 15:29:59,849 INFO  query.QuerySchemaLoader  [] - filterName = ip
2016-08-27 15:29:59,928 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query-no-filter_file8397507933417789406.xml
2016-08-27 15:29:59,928 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query-no-filter_file8397507933417789406.xml
2016-08-27 15:29:59,930 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 15:29:59,931 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query-no-filter
2016-08-27 15:29:59,932 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 15:29:59,932 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-27 15:29:59,932 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 15:29:59,933 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-27 15:29:59,933 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:29:59,934 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-27 15:29:59,934 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:29:59,935 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-27 15:29:59,936 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-hostname-query_file3314386415501988537.xml
2016-08-27 15:29:59,936 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-hostname-query_file3314386415501988537.xml
2016-08-27 15:29:59,938 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 15:29:59,940 INFO  query.QuerySchemaLoader  [] - schemaName = dns-hostname-query
2016-08-27 15:29:59,940 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 15:29:59,941 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-27 15:29:59,941 INFO  query.QuerySchemaLoader  [] - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-27 15:29:59,941 INFO  query.QuerySchemaLoader  [] - name = date bits = 64 dataElementSize = 64
2016-08-27 15:29:59,941 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:29:59,941 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-27 15:29:59,941 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:29:59,942 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-27 15:29:59,942 INFO  query.QuerySchemaLoader  [] - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 15:29:59,942 INFO  query.QuerySchemaLoader  [] - name = qtype bits = 32 dataElementSize = 160
2016-08-27 15:29:59,942 INFO  query.QuerySchemaLoader  [] - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 15:29:59,942 INFO  query.QuerySchemaLoader  [] - name = rcode bits = 32 dataElementSize = 192
2016-08-27 15:29:59,942 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:29:59,943 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 256
2016-08-27 15:29:59,943 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-27 15:29:59,992 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-ip-query_file915737331856012481.xml
2016-08-27 15:29:59,992 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-ip-query_file915737331856012481.xml
2016-08-27 15:29:59,994 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 15:29:59,994 INFO  query.QuerySchemaLoader  [] - schemaName = dns-ip-query
2016-08-27 15:29:59,995 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 15:29:59,995 INFO  query.QuerySchemaLoader  [] - selectorName = ip
2016-08-27 15:29:59,995 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:29:59,995 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 32
2016-08-27 15:29:59,996 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:29:59,996 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 64
2016-08-27 15:29:59,996 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:29:59,997 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 128
2016-08-27 15:29:59,997 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-27 15:30:00,023 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-nxdomain-query_file3551224420275441127.xml
2016-08-27 15:30:00,024 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-nxdomain-query_file3551224420275441127.xml
2016-08-27 15:30:00,026 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 15:30:00,026 INFO  query.QuerySchemaLoader  [] - schemaName = dns-nxdomain-query
2016-08-27 15:30:00,026 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 15:30:00,027 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-27 15:30:00,027 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 15:30:00,027 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-27 15:30:00,027 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:30:00,027 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-27 15:30:00,028 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:30:00,028 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-27 15:30:00,028 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-27 15:30:00,053 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query_file64669928874202112.xml
2016-08-27 15:30:00,054 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query_file64669928874202112.xml
2016-08-27 15:30:00,056 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 15:30:00,056 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query
2016-08-27 15:30:00,056 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 15:30:00,057 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-27 15:30:00,057 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 15:30:00,057 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-27 15:30:00,058 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:30:00,058 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-27 15:30:00,058 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:30:00,058 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-27 15:30:00,059 INFO  query.QuerySchemaLoader  [] - filterName = src_ip
2016-08-27 15:30:00,059 INFO  query.QuerySchemaLoader  [] - filterName = ip
2016-08-27 15:30:00,123 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query-no-filter_file8397507933417789406.xml
2016-08-27 15:30:00,123 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query-no-filter_file8397507933417789406.xml
2016-08-27 15:30:00,125 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 15:30:00,126 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query-no-filter
2016-08-27 15:30:00,127 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 15:30:00,127 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-27 15:30:00,128 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 15:30:00,128 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-27 15:30:00,128 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:30:00,128 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-27 15:30:00,128 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:30:00,129 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-27 15:30:00,140 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-27 15:30:00,147 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-27 15:30:00,153 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySideOut-querier3843007850328626117.txt fileQuery  = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySideOut-query9110080292961137824.txt responseFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/encryptedResponse8306333623250541901.txt fileFinalResults = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/finalResultFile2223670633434411418.txt
2016-08-27 15:30:00,155 INFO  wideskies.QueryInfo  [] - identifier = 63e0dc1f-5750-4c74-95a9-0d71c600d7e9 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-27 15:30:00,157 INFO  encryption.Paillier  [] - Using secure random from SUN:NativePRNG
2016-08-27 15:30:00,234 INFO  encryption.Paillier  [] - Parameters = p = 1643872859 q = 1408367357 N = -1417170449 NSquared = 1874746657 lambdaN = 2060261964 bitLength = 384
2016-08-27 15:30:00,234 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-27 15:30:00,762 INFO  encryption.Paillier  [] - Parameters = p = 1779395111 q = 1544886207 N = 1027388441 NSquared = -731174287 lambdaN = 1048840286 bitLength = 3072
2016-08-27 15:30:00,913 INFO  general.PaillierTest  [] - encM1 = -1041527550 encM2 = 1134813765
2016-08-27 15:30:01,063 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 15:30:01,147 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1924051799 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 15:30:01,272 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-27 15:30:01,274 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-27 15:30:01,573 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-27 15:30:01,729 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-27 15:30:01,729 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-27 15:30:01,751 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 15:30:01,759 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 15:30:01,767 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 15:30:01,770 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 15:30:01,773 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 15:30:01,776 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-27 15:30:01,780 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-27 15:30:01,784 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-27 15:30:01,787 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-27 15:30:01,788 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-27 15:30:01,799 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-27 15:30:01,800 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-27 15:30:02,025 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-27 15:30:02,028 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-27 15:30:02,038 INFO  utils.BaseTests    [] - results:
2016-08-27 15:30:02,039 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-27 15:30:02,039 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-27 15:30:02,040 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 15:30:02,040 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 15:30:02,041 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-27 15:30:02,044 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 15:30:02,046 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 15:30:02,047 INFO  utils.BaseTests    [] - correctResults: 
2016-08-27 15:30:02,048 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-27 15:30:02,048 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 15:30:02,049 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 15:30:02,049 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-27 15:30:02,050 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 15:30:02,053 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 15:30:02,053 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-27 15:30:02,055 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-27 15:30:02,055 INFO  utils.BaseTests    [] - Running testSRCIPQuery(): 
2016-08-27 15:30:02,056 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-27 15:30:02,057 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySideOut-querier2322449589991861511.txt fileQuery  = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySideOut-query1534603966599825876.txt responseFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/encryptedResponse6228058243871973148.txt fileFinalResults = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/finalResultFile3545561396863807927.txt
2016-08-27 15:30:02,058 INFO  wideskies.QueryInfo  [] - identifier = 63e0dc1f-5750-4c74-95a9-0d71c600d7e9 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 160 numPartitionsPerDataElement = 24 queryType = dns-srcip-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-27 15:30:02,087 INFO  encryption.Paillier  [] - Parameters = p = 1473833901 q = -1784661641 N = 527372907 NSquared = -467846983 lambdaN = 419100324 bitLength = 384
2016-08-27 15:30:02,088 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-27 15:30:03,016 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-27 15:30:03,016 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-27 15:30:03,205 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-27 15:30:03,351 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-27 15:30:03,352 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-27 15:30:03,354 INFO  utils.StandaloneQuery  [] - selector = 127.128.129.130 numDataElements = 7
2016-08-27 15:30:03,356 INFO  utils.StandaloneQuery  [] - selector = 131.132.133.134 numDataElements = 7
2016-08-27 15:30:03,359 INFO  utils.StandaloneQuery  [] - selector = 135.136.137.138 numDataElements = 7
2016-08-27 15:30:03,361 INFO  utils.StandaloneQuery  [] - selector = 139.140.141.142 numDataElements = 7
2016-08-27 15:30:03,363 INFO  utils.StandaloneQuery  [] - selector = 143.144.145.146 numDataElements = 7
2016-08-27 15:30:03,366 INFO  utils.StandaloneQuery  [] - selector = 1.1.1.1 numDataElements = 7
2016-08-27 15:30:03,368 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-27 15:30:03,371 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-27 15:30:03,374 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-27 15:30:03,375 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-27 15:30:03,377 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-27 15:30:03,377 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-27 15:30:03,565 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-27 15:30:03,565 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-27 15:30:03,570 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-27 15:30:03,570 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-27 15:30:03,577 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-27 15:30:03,578 INFO  utils.BaseTests    [] - correctResults:
2016-08-27 15:30:03,578 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":63e0dc1f-5750-4c74-95a9-0d71c600d7e9,"qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-27 15:30:03,579 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":63e0dc1f-5750-4c74-95a9-0d71c600d7e9,"qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-27 15:30:03,579 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":63e0dc1f-5750-4c74-95a9-0d71c600d7e9,"qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-27 15:30:03,580 INFO  utils.BaseTests    [] - Completed testSRCIPQuery(): 
2016-08-27 15:30:03,580 INFO  utils.BaseTests    [] - Running testDNSIPQuery(): 
2016-08-27 15:30:03,581 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-27 15:30:03,582 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySideOut-querier3623563098820035255.txt fileQuery  = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySideOut-query745569536352900137.txt responseFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/encryptedResponse5630956979775915060.txt fileFinalResults = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/finalResultFile1703675608692272477.txt
2016-08-27 15:30:03,583 INFO  wideskies.QueryInfo  [] - identifier = 63e0dc1f-5750-4c74-95a9-0d71c600d7e9 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-ip-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-27 15:30:03,601 INFO  encryption.Paillier  [] - Parameters = p = -1776233361 q = -1985121467 N = 743055083 NSquared = -1416107079 lambdaN = -680920780 bitLength = 384
2016-08-27 15:30:03,603 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-27 15:30:04,070 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-27 15:30:04,070 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-27 15:30:04,183 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-27 15:30:04,245 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-27 15:30:04,246 INFO  utils.StandaloneQuery  [] - selector = 10.20.30.40 numDataElements = 7
2016-08-27 15:30:04,248 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-27 15:30:04,250 INFO  utils.StandaloneQuery  [] - selector = 13.14.15.16 numDataElements = 7
2016-08-27 15:30:04,252 INFO  utils.StandaloneQuery  [] - selector = 21.22.23.24 numDataElements = 7
2016-08-27 15:30:04,255 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-27 15:30:04,256 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-27 15:30:04,258 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.3 numDataElements = 7
2016-08-27 15:30:04,261 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-27 15:30:04,263 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-27 15:30:04,265 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-27 15:30:04,265 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-27 15:30:04,267 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-27 15:30:04,268 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-27 15:30:04,349 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-27 15:30:04,349 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-27 15:30:04,351 INFO  utils.BaseTests    [] - {"src_ip":"127.128.129.130","event_type":"dns-ip-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-27 15:30:04,351 INFO  utils.BaseTests    [] - {"src_ip":"139.140.141.142","event_type":"dns-ip-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-27 15:30:04,352 INFO  utils.BaseTests    [] - {"src_ip":"143.144.145.146","event_type":"dns-ip-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-27 15:30:04,352 INFO  utils.BaseTests    [] - {"src_ip":"131.132.133.134","event_type":"dns-ip-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"match":"13.14.15.16"}
2016-08-27 15:30:04,352 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-ip-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"10.20.30.40"}
2016-08-27 15:30:04,352 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-ip-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"match":"21.22.23.24"}
2016-08-27 15:30:04,353 INFO  utils.BaseTests    [] - Completed testDNSIPQuery(): 
2016-08-27 15:30:04,354 INFO  utils.BaseTests    [] - Running testDNSNXDOMAINQuery(): 
2016-08-27 15:30:04,354 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-27 15:30:04,355 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySideOut-querier6053050132868035183.txt fileQuery  = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySideOut-query1006355306527096193.txt responseFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/encryptedResponse1538807944028392928.txt fileFinalResults = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/finalResultFile4817662487798614637.txt
2016-08-27 15:30:04,355 INFO  wideskies.QueryInfo  [] - identifier = 63e0dc1f-5750-4c74-95a9-0d71c600d7e9 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-nxdomain-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-27 15:30:04,373 INFO  encryption.Paillier  [] - Parameters = p = 1948242861 q = 925946217 N = 2018381557 NSquared = -835996039 lambdaN = -1287693704 bitLength = 384
2016-08-27 15:30:04,374 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-27 15:30:04,875 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-27 15:30:04,876 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-27 15:30:05,025 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-27 15:30:05,097 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-27 15:30:05,098 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 15:30:05,099 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-27 15:30:05,101 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-27 15:30:05,103 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-27 15:30:05,103 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-27 15:30:05,210 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-27 15:30:05,211 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-27 15:30:05,213 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-nxdomain-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qname":"d.e.com","dest_ip":"17.18.19.20","match":"d.e.com"}
2016-08-27 15:30:05,215 INFO  utils.BaseTests    [] - Completed testDNSNXDOMAINQuery(): 
2016-08-27 15:30:05,216 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-27 15:30:05,216 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-27 15:30:05,217 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySideOut-querier396680456236120717.txt fileQuery  = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySideOut-query5591269861589044440.txt responseFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/encryptedResponse5657407092679251209.txt fileFinalResults = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/finalResultFile4363419296273460027.txt
2016-08-27 15:30:05,217 INFO  wideskies.QueryInfo  [] - identifier = 63e0dc1f-5750-4c74-95a9-0d71c600d7e9 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-27 15:30:05,249 INFO  encryption.Paillier  [] - Parameters = p = 1776489747 q = 1019402951 N = 467505093 NSquared = 417312153 lambdaN = -1819720366 bitLength = 384
2016-08-27 15:30:05,249 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-27 15:30:05,897 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-27 15:30:05,897 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-27 15:30:05,997 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-27 15:30:06,050 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-27 15:30:06,051 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-27 15:30:06,053 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 15:30:06,056 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 15:30:06,059 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 15:30:06,065 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 15:30:06,067 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 15:30:06,069 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-27 15:30:06,072 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-27 15:30:06,075 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-27 15:30:06,078 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-27 15:30:06,078 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-27 15:30:06,082 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-27 15:30:06,083 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-27 15:30:06,172 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-27 15:30:06,173 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-27 15:30:06,174 INFO  utils.BaseTests    [] - results:
2016-08-27 15:30:06,175 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-27 15:30:06,175 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-27 15:30:06,175 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 15:30:06,176 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 15:30:06,176 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-27 15:30:06,176 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 15:30:06,176 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 15:30:06,177 INFO  utils.BaseTests    [] - correctResults: 
2016-08-27 15:30:06,177 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-27 15:30:06,177 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 15:30:06,177 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 15:30:06,177 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-27 15:30:06,178 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 15:30:06,178 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 15:30:06,178 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-27 15:30:06,179 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-27 15:30:06,179 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-27 15:30:06,179 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-27 15:30:06,182 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySideOut-querier6730618379290877038.txt fileQuery  = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySideOut-query2004594196542346056.txt responseFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/encryptedResponse7852076984691048447.txt fileFinalResults = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/finalResultFile2798017819437846567.txt
2016-08-27 15:30:06,183 INFO  wideskies.QueryInfo  [] - identifier = 63e0dc1f-5750-4c74-95a9-0d71c600d7e9 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-27 15:30:06,213 INFO  encryption.Paillier  [] - Parameters = p = -1275357191 q = 1492817423 N = -135017065 NSquared = 1405431569 lambdaN = 1971245000 bitLength = 384
2016-08-27 15:30:06,214 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-27 15:30:06,862 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-27 15:30:06,862 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-27 15:30:06,973 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-27 15:30:07,027 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-27 15:30:07,027 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-27 15:30:07,028 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 15:30:07,033 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 15:30:07,035 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 15:30:07,037 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 15:30:07,039 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 15:30:07,041 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-27 15:30:07,044 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-27 15:30:07,047 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-27 15:30:07,050 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-27 15:30:07,050 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-27 15:30:07,053 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-27 15:30:07,053 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-27 15:30:07,158 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-27 15:30:07,159 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-27 15:30:07,161 INFO  utils.BaseTests    [] - results:
2016-08-27 15:30:07,162 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-27 15:30:07,162 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-27 15:30:07,162 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 15:30:07,163 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 15:30:07,163 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-27 15:30:07,163 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 15:30:07,163 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 15:30:07,164 INFO  utils.BaseTests    [] - correctResults: 
2016-08-27 15:30:07,164 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-27 15:30:07,164 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 15:30:07,164 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 15:30:07,165 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-27 15:30:07,165 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 15:30:07,165 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 15:30:07,165 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-27 15:30:07,166 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-27 15:30:07,166 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-27 15:30:07,167 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-27 15:30:07,168 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySideOut-querier1259710645512618019.txt fileQuery  = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySideOut-query3375683425048715210.txt responseFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/encryptedResponse6138856073711328828.txt fileFinalResults = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/finalResultFile2144920272162833407.txt
2016-08-27 15:30:07,173 INFO  wideskies.QueryInfo  [] - identifier = 63e0dc1f-5750-4c74-95a9-0d71c600d7e9 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-27 15:30:07,191 INFO  encryption.Paillier  [] - Parameters = p = 1567111521 q = -787386923 N = 412551861 NSquared = -1845976071 lambdaN = 423377184 bitLength = 384
2016-08-27 15:30:07,203 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-27 15:30:07,686 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-27 15:30:07,686 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-27 15:30:07,893 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-27 15:30:07,995 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-27 15:30:07,995 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-27 15:30:08,002 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 15:30:08,005 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 15:30:08,014 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 15:30:08,018 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 15:30:08,021 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 15:30:08,030 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-27 15:30:08,037 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-27 15:30:08,040 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-27 15:30:08,043 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-27 15:30:08,043 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-27 15:30:08,048 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-27 15:30:08,049 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-27 15:30:08,199 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-27 15:30:08,200 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-27 15:30:08,203 INFO  utils.BaseTests    [] - results:
2016-08-27 15:30:08,203 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-27 15:30:08,204 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-27 15:30:08,204 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 15:30:08,204 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 15:30:08,204 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-27 15:30:08,204 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 15:30:08,204 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 15:30:08,205 INFO  utils.BaseTests    [] - correctResults: 
2016-08-27 15:30:08,205 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-27 15:30:08,205 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 15:30:08,205 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 15:30:08,205 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-27 15:30:08,205 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 15:30:08,206 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 15:30:08,206 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-27 15:30:08,207 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-27 15:30:08,207 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-27 15:30:08,208 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-27 15:30:08,209 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySideOut-querier4369098895546656333.txt fileQuery  = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySideOut-query614511490051148493.txt responseFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/encryptedResponse4569413515286007974.txt fileFinalResults = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/finalResultFile1951727497196208543.txt
2016-08-27 15:30:08,210 INFO  wideskies.QueryInfo  [] - identifier = 63e0dc1f-5750-4c74-95a9-0d71c600d7e9 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 32 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-27 15:30:08,236 INFO  encryption.Paillier  [] - Parameters = p = -843009765 q = 993594395 N = 1671623129 NSquared = -786544143 lambdaN = 760519250 bitLength = 384
2016-08-27 15:30:08,243 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-27 15:30:09,094 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-27 15:30:09,094 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-27 15:30:09,188 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-27 15:30:09,265 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-27 15:30:09,265 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-27 15:30:09,266 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 15:30:09,267 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 15:30:09,269 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 15:30:09,270 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 15:30:09,271 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 15:30:09,274 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-27 15:30:09,276 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-27 15:30:09,277 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-27 15:30:09,280 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-27 15:30:09,280 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-27 15:30:09,283 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-27 15:30:09,283 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-27 15:30:09,358 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-27 15:30:09,358 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-27 15:30:09,360 INFO  utils.BaseTests    [] - results:
2016-08-27 15:30:09,360 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-27 15:30:09,360 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-27 15:30:09,360 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 15:30:09,360 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 15:30:09,361 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-27 15:30:09,361 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 15:30:09,361 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 15:30:09,361 INFO  utils.BaseTests    [] - correctResults: 
2016-08-27 15:30:09,361 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-27 15:30:09,362 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 15:30:09,362 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 15:30:09,362 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-27 15:30:09,362 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 15:30:09,362 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 15:30:09,362 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-27 15:30:09,363 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-27 15:30:09,363 INFO  utils.BaseTests    [] - Running testSRCIPQuery(): 
2016-08-27 15:30:09,363 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-27 15:30:09,364 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySideOut-querier3960497822538183161.txt fileQuery  = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySideOut-query8893364678542373810.txt responseFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/encryptedResponse6910220209322459092.txt fileFinalResults = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/finalResultFile1013177733846573876.txt
2016-08-27 15:30:09,364 INFO  wideskies.QueryInfo  [] - identifier = 63e0dc1f-5750-4c74-95a9-0d71c600d7e9 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 160 numPartitionsPerDataElement = 20 queryType = dns-srcip-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-27 15:30:09,377 INFO  encryption.Paillier  [] - Parameters = p = -1955215441 q = 1419267581 N = 1012792051 NSquared = 848134825 lambdaN = -457704564 bitLength = 384
2016-08-27 15:30:09,377 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-27 15:30:09,895 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-27 15:30:09,895 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-27 15:30:10,009 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-27 15:30:10,060 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-27 15:30:10,061 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-27 15:30:10,062 INFO  utils.StandaloneQuery  [] - selector = 127.128.129.130 numDataElements = 7
2016-08-27 15:30:10,063 INFO  utils.StandaloneQuery  [] - selector = 131.132.133.134 numDataElements = 7
2016-08-27 15:30:10,064 INFO  utils.StandaloneQuery  [] - selector = 135.136.137.138 numDataElements = 7
2016-08-27 15:30:10,065 INFO  utils.StandaloneQuery  [] - selector = 139.140.141.142 numDataElements = 7
2016-08-27 15:30:10,066 INFO  utils.StandaloneQuery  [] - selector = 143.144.145.146 numDataElements = 7
2016-08-27 15:30:10,067 INFO  utils.StandaloneQuery  [] - selector = 1.1.1.1 numDataElements = 7
2016-08-27 15:30:10,068 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-27 15:30:10,069 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-27 15:30:10,070 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-27 15:30:10,070 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-27 15:30:10,071 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-27 15:30:10,071 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-27 15:30:10,128 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-27 15:30:10,128 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-27 15:30:10,129 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-27 15:30:10,129 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-27 15:30:10,129 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-27 15:30:10,129 INFO  utils.BaseTests    [] - correctResults:
2016-08-27 15:30:10,130 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":63e0dc1f-5750-4c74-95a9-0d71c600d7e9,"qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-27 15:30:10,130 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":63e0dc1f-5750-4c74-95a9-0d71c600d7e9,"qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-27 15:30:10,130 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":63e0dc1f-5750-4c74-95a9-0d71c600d7e9,"qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-27 15:30:10,130 INFO  utils.BaseTests    [] - Completed testSRCIPQuery(): 
2016-08-27 15:30:10,130 INFO  utils.BaseTests    [] - Running testDNSIPQuery(): 
2016-08-27 15:30:10,130 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-27 15:30:10,131 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySideOut-querier894240581231733240.txt fileQuery  = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySideOut-query6460244631041298426.txt responseFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/encryptedResponse2180117917610318831.txt fileFinalResults = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/finalResultFile7568367685847607367.txt
2016-08-27 15:30:10,131 INFO  wideskies.QueryInfo  [] - identifier = 63e0dc1f-5750-4c74-95a9-0d71c600d7e9 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-ip-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-27 15:30:10,138 INFO  encryption.Paillier  [] - Parameters = p = -1722949553 q = 535336313 N = -1577779113 NSquared = 344333713 lambdaN = 1952400712 bitLength = 384
2016-08-27 15:30:10,138 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-27 15:30:10,668 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-27 15:30:10,669 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-27 15:30:10,785 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-27 15:30:10,842 INFO  encryption.Paillier  [] - Parameters = p = -1552438419 q = -1796342293 N = 187569679 NSquared = 961189089 lambdaN = 589391732 bitLength = 3522
2016-08-27 15:30:10,862 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-27 15:30:10,863 INFO  utils.StandaloneQuery  [] - selector = 10.20.30.40 numDataElements = 7
2016-08-27 15:30:10,864 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-27 15:30:10,866 INFO  utils.StandaloneQuery  [] - selector = 13.14.15.16 numDataElements = 7
2016-08-27 15:30:10,868 INFO  utils.StandaloneQuery  [] - selector = 21.22.23.24 numDataElements = 7
2016-08-27 15:30:10,869 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-27 15:30:10,871 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-27 15:30:10,872 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.3 numDataElements = 7
2016-08-27 15:30:10,874 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-27 15:30:10,876 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-27 15:30:10,877 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-27 15:30:10,877 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-27 15:30:10,878 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-27 15:30:10,879 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-27 15:30:10,952 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-27 15:30:10,952 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-27 15:30:10,954 INFO  utils.BaseTests    [] - {"src_ip":"127.128.129.130","event_type":"dns-ip-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-27 15:30:10,954 INFO  utils.BaseTests    [] - {"src_ip":"139.140.141.142","event_type":"dns-ip-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-27 15:30:10,954 INFO  utils.BaseTests    [] - {"src_ip":"143.144.145.146","event_type":"dns-ip-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-27 15:30:10,954 INFO  utils.BaseTests    [] - {"src_ip":"131.132.133.134","event_type":"dns-ip-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"match":"13.14.15.16"}
2016-08-27 15:30:10,954 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-ip-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"10.20.30.40"}
2016-08-27 15:30:10,955 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-ip-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"match":"21.22.23.24"}
2016-08-27 15:30:10,955 INFO  utils.BaseTests    [] - Completed testDNSIPQuery(): 
2016-08-27 15:30:10,956 INFO  utils.BaseTests    [] - Running testDNSNXDOMAINQuery(): 
2016-08-27 15:30:10,956 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-27 15:30:10,956 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySideOut-querier4881681351125662371.txt fileQuery  = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySideOut-query6471821872798663602.txt responseFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/encryptedResponse8237702190939361668.txt fileFinalResults = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/finalResultFile4429597777999760886.txt
2016-08-27 15:30:10,957 INFO  wideskies.QueryInfo  [] - identifier = 63e0dc1f-5750-4c74-95a9-0d71c600d7e9 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-nxdomain-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-27 15:30:10,972 INFO  encryption.Paillier  [] - Parameters = p = 599263481 q = -567393817 N = -2146086481 NSquared = -2134493791 lambdaN = 1058505576 bitLength = 384
2016-08-27 15:30:10,973 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-27 15:30:11,188 INFO  general.PaillierTest  [] - encM1 = -1333486673 encM2 = -1730557203
2016-08-27 15:30:11,284 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-27 15:30:11,285 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-27 15:30:11,377 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-27 15:30:11,380 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 15:30:11,425 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-27 15:30:11,425 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 15:30:11,426 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-27 15:30:11,426 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-27 15:30:11,426 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-27 15:30:11,426 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-27 15:30:11,467 INFO  general.PaillierTest  [] - encM1_times_encM2 = -746705181 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 15:30:11,468 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-27 15:30:11,469 INFO  general.PaillierTest  [] - i = 0
2016-08-27 15:30:11,494 INFO  encryption.Paillier  [] - testBit true
 N = 11010011010000011001000101111001110001100011000011010100001011100111010110010001100011001000101111111010100010001011100111100000011101101111010001010101101001111111101011011001000100000101011001100011
2016-08-27 15:30:11,494 INFO  encryption.Paillier  [] - Parameters = p = 344578881 q = -188302173 N = -653240733 NSquared = -1081693623 lambdaN = -850747456 bitLength = 201
2016-08-27 15:30:11,495 INFO  general.PaillierTest  [] - encM1 = -1330740680 encM2 = -414979934
2016-08-27 15:30:11,495 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 15:30:11,496 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1422142 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 15:30:11,503 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-27 15:30:11,503 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-27 15:30:11,508 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-nxdomain-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qname":"d.e.com","dest_ip":"17.18.19.20","match":"d.e.com"}
2016-08-27 15:30:11,508 INFO  utils.BaseTests    [] - Completed testDNSNXDOMAINQuery(): 
2016-08-27 15:30:11,508 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-27 15:30:11,508 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-27 15:30:11,509 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySideOut-querier6435150911406792831.txt fileQuery  = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySideOut-query484361505536259494.txt responseFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/encryptedResponse4337808255699203430.txt fileFinalResults = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/finalResultFile7093616721366174904.txt
2016-08-27 15:30:11,509 INFO  wideskies.QueryInfo  [] - identifier = 63e0dc1f-5750-4c74-95a9-0d71c600d7e9 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-27 15:30:11,518 INFO  encryption.Paillier  [] - Parameters = p = 1969297849 q = 1700312583 N = 310983183 NSquared = 1295568097 lambdaN = 468170024 bitLength = 384
2016-08-27 15:30:11,519 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-27 15:30:12,180 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-27 15:30:12,180 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-27 15:30:12,180 INFO  utils.StandaloneQuery  [] - embedSelectorMap((embedSelectorMap.size()-2)) = 650527453 selector = something.else
2016-08-27 15:30:12,282 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-27 15:30:12,332 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-27 15:30:12,332 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-27 15:30:12,334 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 15:30:12,336 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 15:30:12,339 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 15:30:12,343 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 15:30:12,345 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 15:30:12,348 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-27 15:30:12,350 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-27 15:30:12,352 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-27 15:30:12,354 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-27 15:30:12,355 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-27 15:30:12,361 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-27 15:30:12,362 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-27 15:30:12,451 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-27 15:30:12,452 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-27 15:30:12,454 INFO  utils.BaseTests    [] - results:
2016-08-27 15:30:12,455 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-27 15:30:12,455 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 15:30:12,455 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 15:30:12,456 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-27 15:30:12,456 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 15:30:12,456 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 15:30:12,456 INFO  utils.BaseTests    [] - correctResults: 
2016-08-27 15:30:12,457 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-27 15:30:12,457 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 15:30:12,457 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 15:30:12,458 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-27 15:30:12,458 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 15:30:12,458 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"63e0dc1f-5750-4c74-95a9-0d71c600d7e9","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 15:30:12,459 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-27 15:30:12,749 INFO  encryption.Paillier  [] - testBit true

2016-08-27 15:30:12,752 INFO  encryption.Paillier  [] - Parameters = p = 1634680555 q = -163909399 N = 209359843 NSquared = -1849001143 lambdaN = -630705656 bitLength = 3072
2016-08-27 15:30:12,884 INFO  general.PaillierTest  [] - encM1 = 398733349 encM2 = 722052088
2016-08-27 15:30:12,998 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 15:30:13,051 INFO  general.PaillierTest  [] - encM1_times_encM2 = 858135229 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 15:30:16,100 INFO  encryption.Paillier  [] - testBit true
 N = 11100111000001100001001111000110110010010101101110001000101110110110011100110001001100101011100101110101001011001100111100111001101100010001010010110110011001011100111100011100011011111101110111111110110100000101100001011011011010010101100000000101001011100110111111001010101010100110001110110001010010111101001110000100110010100001011100001110000100000100111110011001101100000110000101001111111101001000111010101011001100000010100100011110111000110001011110100010000001110110000111011100001111110101100001101001110100001111010000011011001011000100001001000111000000000100010000001111000100000110101110110101111000110101010110100000001010101011110101010110101101110101111101001111111100000100001000000011001101011001100001100001100011100010110001010000010110011010010111010111111001010111110001100000111100000110011011101100100010100000100101000100111100010011111000001011111000101111111100100111000111100110101101111101000000110001010110111111101011010000101010000101001001011011101000111001011000011100011001100100111100100101111011011111011111000101011000100111101110110010110011110011100000100000010110001101001000110000011100001000100011010010111110000101110100110000111101001001010101111101000001101001010111101011010001101000000100111100010010011101011110111110001100111000000010010100011110000000001101011110101110001100001100001110111010001000110110001000001110101000010100111110011101011011001100101010001101101010111000001011100000010001111011111000110010100111011011000111010001110100100010111001000011011000010000111100100011010001101100010011110110111010010110111001100010001100101100110001001111101110010110101001011101111110001100001101000011100000100001110010110101101010010111110100110000010111100011111110101011111110101110101011100001110001010100000101000101011000110101101010111111110011101101100001100010110001100101011101111011100011111100101100000001101010101011010101010010011010110101001111111111110000010111001101111111010001001110000001110100111000100000000010100011110010111011011010011001011100111000101000000101111000000010110000000111000011100111011000001100101010001110111110011101010010001010100101001000100111010001001010111110110110001110110110111000111000000000111011111001111001101000111100000000000100101010100101000100100111110100010000010101001001110010101100000001100010100001001011101111001000011101001011011011111000001010100001101110001001001100010000010110001001000010010001100000010110000110000010010101110100010000110011001011110000100101100101110111010110000111100011101011001000110000111010011110011100111010101100101001110110000101111001111111011101111110000111010100011001001110000001001111011101000000101011011101000010100101100111000111110011111001111011110101011010101101011110111111011001010110011010100110100000000100001001010100110111111111101100110111001000001000111100100000110110010110001101010100001001000101010111000111001001001000100000000010111110110101101111110111010001101101110010111100001110110111010000001001111110101000101111111010101001000000000000111110111111000000011101001000110001010010000011000101011011010011110001111011000101010111011101111100100000000000010110101011000000011101111010101100000100111001011100010101110101001110110111101111011001001111000011000100101001101000000110010111110110111101000100000001001110100100101010000000101000100010010000111110100001110111111100010111010101001001000000110001110100000110100111011010111111110000010010000101101111011110011101011111101000010110010101110000001001000100011101011101010001010110110010011011000111100100011000010111101110010010110111011000110101001001011001100001010001001100100101011100010011110001110110110001
2016-08-27 15:30:16,104 INFO  encryption.Paillier  [] - Parameters = p = -980710469 q = 1823836035 N = 1548688817 NSquared = -1901095839 lambdaN = -1794702022 bitLength = 3651
2016-08-27 15:30:16,299 INFO  general.PaillierTest  [] - encM1 = 1909462215 encM2 = 1344821666
2016-08-27 15:30:16,464 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 15:30:16,543 INFO  general.PaillierTest  [] - encM1_times_encM2 = -51342205 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 15:30:16,544 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-27 15:30:16,544 INFO  general.PaillierTest  [] - i = 0
2016-08-27 15:30:16,547 INFO  encryption.Paillier  [] - Parameters = p = -80692239 q = 755704763 N = -1767490549 NSquared = -799463303 lambdaN = 1024571920 bitLength = 201
2016-08-27 15:30:16,548 INFO  general.PaillierTest  [] - encM1 = -1731033566 encM2 = -31225759
2016-08-27 15:30:16,548 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 15:30:16,548 INFO  general.PaillierTest  [] - encM1_times_encM2 = 711918341 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 15:30:18,696 INFO  encryption.Paillier  [] - Parameters = p = -1372196785 q = -1212754847 N = -23365137 NSquared = 629001505 lambdaN = 1280793248 bitLength = 3072
2016-08-27 15:30:18,805 INFO  general.PaillierTest  [] - encM1 = -121441246 encM2 = 413863904
2016-08-27 15:30:18,917 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 15:30:18,981 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1542952606 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 15:30:20,102 INFO  encryption.Paillier  [] - Parameters = p = 1863395235 q = 280101571 N = 2075555625 NSquared = 197338257 lambdaN = -33970590 bitLength = 3238
2016-08-27 15:30:20,220 INFO  general.PaillierTest  [] - encM1 = 512882116 encM2 = 1213943741
2016-08-27 15:30:20,345 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 15:30:20,407 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1306501118 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 15:30:20,407 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-27 15:30:20,407 INFO  general.PaillierTest  [] - i = 0
2016-08-27 15:30:20,412 INFO  encryption.Paillier  [] - testBit true
 N = 10100010111000010001100001101101111111000010111101110000111101100101010010010001010001010101010111001011011001010101011101011111101100100010100111111111111111111011000110100000011000000011110000110011
2016-08-27 15:30:20,413 INFO  encryption.Paillier  [] - Parameters = p = -1714725337 q = 784811285 N = -1604305869 NSquared = -194514391 lambdaN = 2035085012 bitLength = 201
2016-08-27 15:30:20,413 INFO  general.PaillierTest  [] - encM1 = 808755113 encM2 = -600157908
2016-08-27 15:30:20,413 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 15:30:20,414 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1532888006 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 15:30:21,501 INFO  encryption.Paillier  [] - testBit false

2016-08-27 15:30:26,183 INFO  encryption.Paillier  [] - testBit true

2016-08-27 15:30:26,185 INFO  encryption.Paillier  [] - Parameters = p = -966656445 q = 613365303 N = -1105411483 NSquared = 95763417 lambdaN = 1771423478 bitLength = 3072
2016-08-27 15:30:26,297 INFO  general.PaillierTest  [] - encM1 = 1074404631 encM2 = -1327586216
2016-08-27 15:30:26,399 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 15:30:26,450 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1109133971 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 15:30:35,138 INFO  encryption.Paillier  [] - testBit true

2016-08-27 15:30:35,143 INFO  encryption.Paillier  [] - Parameters = p = 580740761 q = -1871833655 N = 1019091745 NSquared = -1076102591 lambdaN = 825643992 bitLength = 3662
2016-08-27 15:30:35,309 INFO  general.PaillierTest  [] - encM1 = 349336171 encM2 = -1977282124
2016-08-27 15:30:35,471 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 15:30:35,550 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1170976454 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 15:30:35,550 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-27 15:30:35,550 INFO  general.PaillierTest  [] - i = 0
2016-08-27 15:30:35,561 INFO  encryption.Paillier  [] - Parameters = p = -348498449 q = -512537841 N = -1997206015 NSquared = -559014911 lambdaN = 1723090578 bitLength = 201
2016-08-27 15:30:35,562 INFO  general.PaillierTest  [] - encM1 = -284253894 encM2 = -402680320
2016-08-27 15:30:35,562 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 15:30:35,562 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1605495243 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 15:30:36,385 INFO  encryption.Paillier  [] - Parameters = p = 480956865 q = 2076331877 N = -1251913691 NSquared = 656483673 lambdaN = -2026042432 bitLength = 3072
2016-08-27 15:30:36,486 INFO  general.PaillierTest  [] - encM1 = 99778165 encM2 = -1727880076
2016-08-27 15:30:36,588 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 15:30:36,637 INFO  general.PaillierTest  [] - encM1_times_encM2 = -243491370 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 15:30:37,331 INFO  encryption.Paillier  [] - Parameters = p = -1679105509 q = 794802715 N = -149784871 NSquared = -1414478863 lambdaN = -1780224686 bitLength = 3698
2016-08-27 15:30:37,503 INFO  general.PaillierTest  [] - encM1 = -1299415158 encM2 = -1721111753
2016-08-27 15:30:37,671 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 15:30:37,751 INFO  general.PaillierTest  [] - encM1_times_encM2 = -819757411 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 15:30:37,752 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-27 15:30:37,752 INFO  general.PaillierTest  [] - i = 0
2016-08-27 15:30:37,755 INFO  encryption.Paillier  [] - testBit true
 N = 10011011101011011110000000100010000000001000011111111010000010111111011010010000101000000011000101100000100100010100001101010101001111110010101110010010101010001000010010101000001010101111001110111011
2016-08-27 15:30:37,755 INFO  encryption.Paillier  [] - Parameters = p = 686911491 q = 1423879145 N = -1473580101 NSquared = 1365805721 lambdaN = 118432760 bitLength = 201
2016-08-27 15:30:37,755 INFO  general.PaillierTest  [] - encM1 = 979389033 encM2 = -162037725
2016-08-27 15:30:37,756 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 15:30:37,756 INFO  general.PaillierTest  [] - encM1_times_encM2 = -715614072 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 15:30:38,468 INFO  encryption.Paillier  [] - testBit false

2016-08-27 15:30:40,233 INFO  encryption.Paillier  [] - testBit true

2016-08-27 15:30:40,235 INFO  encryption.Paillier  [] - Parameters = p = -1888265535 q = 668276399 N = -482566161 NSquared = 905101601 lambdaN = 838731712 bitLength = 3072
2016-08-27 15:30:40,328 INFO  general.PaillierTest  [] - encM1 = -858345696 encM2 = -396163804
2016-08-27 15:30:40,421 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 15:30:40,471 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1408808805 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 15:30:48,757 INFO  encryption.Paillier  [] - testBit false

2016-08-27 15:30:52,017 INFO  encryption.Paillier  [] - testBit true

2016-08-27 15:30:52,019 INFO  encryption.Paillier  [] - Parameters = p = 1620675485 q = 2133420155 N = 161668207 NSquared = -2008352735 lambdaN = 351269932 bitLength = 3992
2016-08-27 15:30:52,232 INFO  general.PaillierTest  [] - encM1 = -1748716859 encM2 = 368068187
2016-08-27 15:30:52,443 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 15:30:52,546 INFO  general.PaillierTest  [] - encM1_times_encM2 = 2145104040 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 15:30:52,546 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-27 15:30:52,547 INFO  general.PaillierTest  [] - i = 0
2016-08-27 15:30:52,549 INFO  encryption.Paillier  [] - Parameters = p = 1701542623 q = 938954093 N = -119446541 NSquared = -1473521495 lambdaN = -1379971628 bitLength = 201
2016-08-27 15:30:52,549 INFO  general.PaillierTest  [] - encM1 = -287029333 encM2 = -2012885324
2016-08-27 15:30:52,549 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 15:30:52,550 INFO  general.PaillierTest  [] - encM1_times_encM2 = -259917927 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 15:30:54,788 INFO  encryption.Paillier  [] - Parameters = p = -238235161 q = 202988239 N = -638062647 NSquared = 1484188625 lambdaN = 1331186478 bitLength = 3072
2016-08-27 15:30:54,888 INFO  general.PaillierTest  [] - encM1 = -1180528928 encM2 = -2019482150
2016-08-27 15:30:54,990 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 15:30:55,044 INFO  general.PaillierTest  [] - encM1_times_encM2 = -20660440 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 15:30:56,688 INFO  encryption.Paillier  [] - Parameters = p = -1831061389 q = -617784227 N = -880749113 NSquared = 327467185 lambdaN = -1363435396 bitLength = 3323
2016-08-27 15:30:56,808 INFO  general.PaillierTest  [] - encM1 = -1789184994 encM2 = 821597038
2016-08-27 15:30:56,932 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 15:30:56,991 INFO  general.PaillierTest  [] - encM1_times_encM2 = -2143542190 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 15:30:56,991 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-27 15:30:56,992 INFO  general.PaillierTest  [] - i = 0
2016-08-27 15:30:56,994 INFO  encryption.Paillier  [] - testBit false
 N = 10111110011001110111000001011011110110101001101100000101001000011000101011111011100011100011110111011011101111011000101111101000110000100001100001001010001110010110011111110100100010110011010111010101
2016-08-27 15:30:56,997 INFO  encryption.Paillier  [] - testBit true
 N = 11001101101010110100111010100000001111100111100101101110011001001000011100101101100101100001111101101110100111100100101100110010000011101001111110111100000001011110110110111111110001010010111100111011
2016-08-27 15:30:56,997 INFO  encryption.Paillier  [] - Parameters = p = -493142861 q = -1815931047 N = -1077596357 NSquared = -1014712423 lambdaN = -1531744872 bitLength = 201
2016-08-27 15:30:56,997 INFO  general.PaillierTest  [] - encM1 = 388143693 encM2 = -250880477
2016-08-27 15:30:56,997 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 15:30:56,998 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1931282805 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 15:30:58,957 INFO  encryption.Paillier  [] - testBit true

2016-08-27 15:30:58,959 INFO  encryption.Paillier  [] - Parameters = p = -403356641 q = -442071509 N = 1056222005 NSquared = 2072500473 lambdaN = -1196658570 bitLength = 3072
2016-08-27 15:30:59,059 INFO  general.PaillierTest  [] - encM1 = -504341527 encM2 = -852781911
2016-08-27 15:30:59,157 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 15:30:59,207 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1210974964 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 15:31:00,451 INFO  encryption.Paillier  [] - testBit false

2016-08-27 15:31:03,311 INFO  encryption.Paillier  [] - testBit false

2016-08-27 15:31:05,627 INFO  encryption.Paillier  [] - testBit true

2016-08-27 15:31:05,629 INFO  encryption.Paillier  [] - Parameters = p = 724532457 q = 541152577 N = -1833888727 NSquared = -1505202543 lambdaN = -1461188544 bitLength = 3120
2016-08-27 15:31:05,734 INFO  general.PaillierTest  [] - encM1 = -2122164003 encM2 = 1890824281
2016-08-27 15:31:05,837 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 15:31:05,891 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1583266928 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 15:31:05,892 INFO  utils.SystemConfiguration  [] - Loading file 'pirk.properties'
2016-08-27 15:31:05,892 INFO  utils.SystemConfiguration  [] - Loading file 'querier.properties'
2016-08-27 15:31:05,893 INFO  utils.SystemConfiguration  [] - Loading file 'responder.properties'
2016-08-27 15:31:05,893 INFO  utils.SystemConfiguration  [] - Loading properties from dirName = /root/
2016-08-27 15:31:05,893 INFO  general.PaillierTest  [] - Ending testPaillierWithKeyGeneration: 
2016-08-27 15:31:05,896 INFO  encryption.Paillier  [] - Parameters = p = 7 q = 17 N = 119 NSquared = 14161 lambdaN = 48 bitLength = 201
2016-08-27 15:31:05,898 INFO  encryption.Paillier  [] - Parameters = p = 7 q = 17 N = 119 NSquared = 14161 lambdaN = 48 bitLength = 201
2016-08-27 15:31:05,899 INFO  general.PaillierTest  [] - Starting testPaillierGivenAllParameters: 
2016-08-27 15:31:05,900 INFO  encryption.Paillier  [] - Parameters = p = 7 q = 17 N = 119 NSquared = 14161 lambdaN = 48 bitLength = 201
2016-08-27 15:31:05,900 INFO  general.PaillierTest  [] - encM1 = 14019 encM2 = 8836
2016-08-27 15:31:05,900 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 15:31:05,901 INFO  general.PaillierTest  [] - encM1_times_encM2 = 5617 encM1plusM2 = 5617
2016-08-27 15:31:05,901 INFO  general.PaillierTest  [] - Successfully completed testPaillierGivenAllParameters: 
2016-08-27 15:31:05,906 INFO  general.PartitionUtilsTest  [] - Starting testMask: 
2016-08-27 15:31:05,907 INFO  general.PartitionUtilsTest  [] - Successfully completed testMask
2016-08-27 15:31:05,907 INFO  general.PartitionUtilsTest  [] - Starting testToPartitions:
2016-08-27 15:31:05,910 INFO  general.PartitionUtilsTest  [] - testString.getBytes().length = 10
2016-08-27 15:31:05,910 INFO  general.PartitionUtilsTest  [] - testString.getBytes().length = 1
2016-08-27 15:31:05,911 INFO  general.PartitionUtilsTest  [] - Sucessfully completed testToPartitions:
2016-08-27 15:31:05,912 INFO  general.PartitionUtilsTest  [] - Starting testPartitionBits: 
2016-08-27 15:31:05,912 INFO  general.PartitionUtilsTest  [] - Successfully completed testPartitionBits
2016-08-27 15:31:05,921 INFO  utils.Inputs       [] - file = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/testDataSchemaFile681171316210355343.xml
2016-08-27 15:31:05,978 INFO  data.DataSchemaLoader  [] - Loading pre-configured data schemas: 
2016-08-27 15:31:05,979 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/testDataSchemaFile681171316210355343.xml hdfs = false
2016-08-27 15:31:05,979 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/testDataSchemaFile681171316210355343.xml
2016-08-27 15:31:05,982 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-27 15:31:05,983 INFO  data.DataSchemaLoader  [] - schemaName = testDataSchema
2016-08-27 15:31:05,984 INFO  data.DataSchemaLoader  [] - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-27 15:31:05,985 INFO  data.DataSchemaLoader  [] - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 15:31:05,985 INFO  data.DataSchemaLoader  [] - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:31:05,985 INFO  data.DataSchemaLoader  [] - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:31:05,986 INFO  data.DataSchemaLoader  [] - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 15:31:05,986 INFO  data.DataSchemaLoader  [] - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 15:31:05,986 INFO  data.DataSchemaLoader  [] - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:31:05,987 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/testDataSchemaFile681171316210355343.xml hdfs = false
2016-08-27 15:31:05,987 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/testDataSchemaFile681171316210355343.xml
2016-08-27 15:31:05,989 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-27 15:31:05,990 INFO  data.DataSchemaLoader  [] - schemaName = testDataSchema
2016-08-27 15:31:05,990 INFO  data.DataSchemaLoader  [] - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-27 15:31:05,990 INFO  data.DataSchemaLoader  [] - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 15:31:05,990 INFO  data.DataSchemaLoader  [] - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:31:05,991 INFO  data.DataSchemaLoader  [] - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:31:05,991 INFO  data.DataSchemaLoader  [] - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 15:31:05,991 INFO  data.DataSchemaLoader  [] - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 15:31:05,991 INFO  data.DataSchemaLoader  [] - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:31:05,992 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-hostname-query
2016-08-27 15:31:05,992 INFO  utils.TestUtils    [] - localFS: file = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-hostname-query_file349573871809473132.xml
2016-08-27 15:31:05,993 INFO  utils.TestUtils    [] - query.schemas = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-hostname-query_file349573871809473132.xml
2016-08-27 15:31:05,994 INFO  utils.TestUtils    [] - elementName = date
2016-08-27 15:31:05,994 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-27 15:31:05,995 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-27 15:31:05,995 INFO  utils.TestUtils    [] - elementName = qtype
2016-08-27 15:31:05,995 INFO  utils.TestUtils    [] - elementName = rcode
2016-08-27 15:31:05,995 INFO  utils.TestUtils    [] - elementName = ip
2016-08-27 15:31:05,997 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-ip-query
2016-08-27 15:31:05,998 INFO  utils.TestUtils    [] - localFS: file = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-ip-query_file9014745757010494341.xml
2016-08-27 15:31:05,998 INFO  utils.TestUtils    [] - query.schemas = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-hostname-query_file349573871809473132.xml,/var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-ip-query_file9014745757010494341.xml
2016-08-27 15:31:06,000 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-27 15:31:06,000 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-27 15:31:06,000 INFO  utils.TestUtils    [] - elementName = ip
2016-08-27 15:31:06,002 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-nxdomain-query
2016-08-27 15:31:06,003 INFO  utils.TestUtils    [] - localFS: file = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-nxdomain-query_file6009230615177346148.xml
2016-08-27 15:31:06,003 INFO  utils.TestUtils    [] - query.schemas = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-hostname-query_file349573871809473132.xml,/var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-ip-query_file9014745757010494341.xml,/var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-nxdomain-query_file6009230615177346148.xml
2016-08-27 15:31:06,004 INFO  utils.TestUtils    [] - elementName = qname
2016-08-27 15:31:06,005 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-27 15:31:06,005 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-27 15:31:06,006 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query
2016-08-27 15:31:06,007 INFO  utils.TestUtils    [] - localFS: file = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query_file4652834770500303702.xml
2016-08-27 15:31:06,008 INFO  utils.TestUtils    [] - query.schemas = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-hostname-query_file349573871809473132.xml,/var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-ip-query_file9014745757010494341.xml,/var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-nxdomain-query_file6009230615177346148.xml,/var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query_file4652834770500303702.xml
2016-08-27 15:31:06,009 INFO  utils.TestUtils    [] - elementName = qname
2016-08-27 15:31:06,010 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-27 15:31:06,010 INFO  utils.TestUtils    [] - elementName = ip
2016-08-27 15:31:06,012 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query-no-filter
2016-08-27 15:31:06,013 INFO  utils.TestUtils    [] - localFS: file = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query-no-filter_file7577831703458395023.xml
2016-08-27 15:31:06,013 INFO  utils.TestUtils    [] - query.schemas = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-hostname-query_file349573871809473132.xml,/var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-ip-query_file9014745757010494341.xml,/var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-nxdomain-query_file6009230615177346148.xml,/var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query_file4652834770500303702.xml,/var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query-no-filter_file7577831703458395023.xml
2016-08-27 15:31:06,014 INFO  utils.TestUtils    [] - elementName = qname
2016-08-27 15:31:06,014 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-27 15:31:06,015 INFO  utils.TestUtils    [] - elementName = ip
2016-08-27 15:31:06,018 INFO  query.QuerySchemaLoader  [] - Loading query schemas: 
2016-08-27 15:31:06,019 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-hostname-query_file349573871809473132.xml
2016-08-27 15:31:06,019 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-hostname-query_file349573871809473132.xml
2016-08-27 15:31:06,021 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 15:31:06,021 INFO  query.QuerySchemaLoader  [] - schemaName = dns-hostname-query
2016-08-27 15:31:06,022 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 15:31:06,022 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-27 15:31:06,022 INFO  query.QuerySchemaLoader  [] - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-27 15:31:06,022 INFO  query.QuerySchemaLoader  [] - name = date bits = 64 dataElementSize = 64
2016-08-27 15:31:06,023 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:31:06,023 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-27 15:31:06,023 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:31:06,023 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-27 15:31:06,023 INFO  query.QuerySchemaLoader  [] - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 15:31:06,024 INFO  query.QuerySchemaLoader  [] - name = qtype bits = 32 dataElementSize = 160
2016-08-27 15:31:06,026 INFO  query.QuerySchemaLoader  [] - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 15:31:06,027 INFO  query.QuerySchemaLoader  [] - name = rcode bits = 32 dataElementSize = 192
2016-08-27 15:31:06,027 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:31:06,028 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 256
2016-08-27 15:31:06,029 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-ip-query_file9014745757010494341.xml
2016-08-27 15:31:06,029 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-ip-query_file9014745757010494341.xml
2016-08-27 15:31:06,031 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 15:31:06,031 INFO  query.QuerySchemaLoader  [] - schemaName = dns-ip-query
2016-08-27 15:31:06,031 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 15:31:06,032 INFO  query.QuerySchemaLoader  [] - selectorName = ip
2016-08-27 15:31:06,032 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:31:06,032 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 32
2016-08-27 15:31:06,032 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:31:06,032 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 64
2016-08-27 15:31:06,033 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:31:06,033 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 128
2016-08-27 15:31:06,033 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-nxdomain-query_file6009230615177346148.xml
2016-08-27 15:31:06,033 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-nxdomain-query_file6009230615177346148.xml
2016-08-27 15:31:06,035 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 15:31:06,036 INFO  query.QuerySchemaLoader  [] - schemaName = dns-nxdomain-query
2016-08-27 15:31:06,036 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 15:31:06,036 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-27 15:31:06,036 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 15:31:06,036 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-27 15:31:06,037 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:31:06,037 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-27 15:31:06,038 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:31:06,038 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-27 15:31:06,038 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query_file4652834770500303702.xml
2016-08-27 15:31:06,038 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query_file4652834770500303702.xml
2016-08-27 15:31:06,040 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 15:31:06,040 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query
2016-08-27 15:31:06,040 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 15:31:06,040 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-27 15:31:06,040 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 15:31:06,041 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-27 15:31:06,041 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:31:06,041 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-27 15:31:06,041 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:31:06,041 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-27 15:31:06,041 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query-no-filter_file7577831703458395023.xml
2016-08-27 15:31:06,042 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query-no-filter_file7577831703458395023.xml
2016-08-27 15:31:06,044 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 15:31:06,044 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query-no-filter
2016-08-27 15:31:06,045 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 15:31:06,045 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-27 15:31:06,045 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 15:31:06,045 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-27 15:31:06,045 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:31:06,045 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-27 15:31:06,046 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:31:06,046 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-27 15:31:06,046 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-hostname-query_file349573871809473132.xml
2016-08-27 15:31:06,046 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-hostname-query_file349573871809473132.xml
2016-08-27 15:31:06,048 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 15:31:06,048 INFO  query.QuerySchemaLoader  [] - schemaName = dns-hostname-query
2016-08-27 15:31:06,048 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 15:31:06,048 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-27 15:31:06,048 INFO  query.QuerySchemaLoader  [] - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-27 15:31:06,048 INFO  query.QuerySchemaLoader  [] - name = date bits = 64 dataElementSize = 64
2016-08-27 15:31:06,049 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:31:06,049 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-27 15:31:06,049 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:31:06,049 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-27 15:31:06,049 INFO  query.QuerySchemaLoader  [] - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 15:31:06,049 INFO  query.QuerySchemaLoader  [] - name = qtype bits = 32 dataElementSize = 160
2016-08-27 15:31:06,049 INFO  query.QuerySchemaLoader  [] - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 15:31:06,049 INFO  query.QuerySchemaLoader  [] - name = rcode bits = 32 dataElementSize = 192
2016-08-27 15:31:06,049 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:31:06,049 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 256
2016-08-27 15:31:06,050 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-ip-query_file9014745757010494341.xml
2016-08-27 15:31:06,050 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-ip-query_file9014745757010494341.xml
2016-08-27 15:31:06,052 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 15:31:06,052 INFO  query.QuerySchemaLoader  [] - schemaName = dns-ip-query
2016-08-27 15:31:06,053 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 15:31:06,053 INFO  query.QuerySchemaLoader  [] - selectorName = ip
2016-08-27 15:31:06,053 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:31:06,053 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 32
2016-08-27 15:31:06,053 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:31:06,053 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 64
2016-08-27 15:31:06,054 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:31:06,054 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 128
2016-08-27 15:31:06,054 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-nxdomain-query_file6009230615177346148.xml
2016-08-27 15:31:06,054 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-nxdomain-query_file6009230615177346148.xml
2016-08-27 15:31:06,056 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 15:31:06,056 INFO  query.QuerySchemaLoader  [] - schemaName = dns-nxdomain-query
2016-08-27 15:31:06,057 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 15:31:06,057 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-27 15:31:06,057 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 15:31:06,057 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-27 15:31:06,057 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:31:06,058 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-27 15:31:06,058 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:31:06,058 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-27 15:31:06,058 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query_file4652834770500303702.xml
2016-08-27 15:31:06,059 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query_file4652834770500303702.xml
2016-08-27 15:31:06,061 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 15:31:06,061 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query
2016-08-27 15:31:06,062 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 15:31:06,062 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-27 15:31:06,062 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 15:31:06,062 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-27 15:31:06,062 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:31:06,063 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-27 15:31:06,063 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:31:06,063 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-27 15:31:06,063 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query-no-filter_file7577831703458395023.xml
2016-08-27 15:31:06,063 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query-no-filter_file7577831703458395023.xml
2016-08-27 15:31:06,065 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 15:31:06,065 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query-no-filter
2016-08-27 15:31:06,066 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 15:31:06,066 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-27 15:31:06,066 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 15:31:06,066 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-27 15:31:06,066 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:31:06,066 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-27 15:31:06,067 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:31:06,067 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-27 15:31:06,118 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,118 INFO  utils.QueryParserUtils  [] - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,119 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,119 INFO  utils.QueryParserUtils  [] - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,121 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,121 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
2016-08-27 15:31:06,122 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,122 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
2016-08-27 15:31:06,123 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,123 INFO  utils.QueryParserUtils  [] - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
2016-08-27 15:31:06,123 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,124 INFO  utils.QueryParserUtils  [] - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
2016-08-27 15:31:06,124 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,124 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
2016-08-27 15:31:06,125 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,125 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
2016-08-27 15:31:06,125 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,126 INFO  utils.QueryParserUtils  [] - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
2016-08-27 15:31:06,126 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,126 INFO  utils.QueryParserUtils  [] - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
2016-08-27 15:31:06,127 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,127 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,127 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,128 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,128 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,129 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
2016-08-27 15:31:06,129 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,129 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
2016-08-27 15:31:06,130 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,130 INFO  utils.QueryParserUtils  [] - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,130 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,130 INFO  utils.QueryParserUtils  [] - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,131 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,131 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
2016-08-27 15:31:06,131 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,131 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
2016-08-27 15:31:06,132 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,132 INFO  utils.QueryParserUtils  [] - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
2016-08-27 15:31:06,132 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,132 INFO  utils.QueryParserUtils  [] - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
2016-08-27 15:31:06,133 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,133 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
2016-08-27 15:31:06,133 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,133 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
2016-08-27 15:31:06,134 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,134 INFO  utils.QueryParserUtils  [] - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
2016-08-27 15:31:06,134 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,134 INFO  utils.QueryParserUtils  [] - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
2016-08-27 15:31:06,135 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,135 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,135 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,135 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,136 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,136 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
2016-08-27 15:31:06,136 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,137 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
2016-08-27 15:31:06,137 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,137 INFO  utils.QueryParserUtils  [] - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,138 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,138 INFO  utils.QueryParserUtils  [] - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,139 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,139 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
2016-08-27 15:31:06,139 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,139 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
2016-08-27 15:31:06,140 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,140 INFO  utils.QueryParserUtils  [] - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
2016-08-27 15:31:06,140 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,141 INFO  utils.QueryParserUtils  [] - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
2016-08-27 15:31:06,141 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,142 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
2016-08-27 15:31:06,142 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,142 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
2016-08-27 15:31:06,143 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,143 INFO  utils.QueryParserUtils  [] - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
2016-08-27 15:31:06,143 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,143 INFO  utils.QueryParserUtils  [] - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
2016-08-27 15:31:06,144 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,144 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,144 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,145 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,145 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,146 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
2016-08-27 15:31:06,146 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,146 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
2016-08-27 15:31:06,151 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [0+TO+2] value = 0
2016-08-27 15:31:06,152 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {-1+TO+2} value = 0
2016-08-27 15:31:06,152 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [-1+TO+0] value = 0
2016-08-27 15:31:06,152 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {0+TO+3} value = 0
2016-08-27 15:31:06,153 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [3+TO+10] value = 0
2016-08-27 15:31:06,153 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [0+TO+2] value = 0
2016-08-27 15:31:06,153 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {-1+TO+2} value = 0
2016-08-27 15:31:06,154 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [-1+TO+0] value = 0
2016-08-27 15:31:06,154 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {0+TO+3} value = 0
2016-08-27 15:31:06,154 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [3+TO+10] value = 0
2016-08-27 15:31:06,154 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [0+TO+2] value = 0
2016-08-27 15:31:06,155 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {-1+TO+2} value = 0
2016-08-27 15:31:06,155 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [-1+TO+0] value = 0
2016-08-27 15:31:06,155 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {0+TO+3} value = 0
2016-08-27 15:31:06,156 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [3+TO+10] value = 0
2016-08-27 15:31:06,157 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
2016-08-27 15:31:06,157 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
2016-08-27 15:31:06,157 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
2016-08-27 15:31:06,157 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
2016-08-27 15:31:06,157 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
2016-08-27 15:31:06,157 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
2016-08-27 15:31:06,158 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
2016-08-27 15:31:06,158 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
2016-08-27 15:31:06,158 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 15:31:06,158 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 15:31:06,158 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 15:31:06,159 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 15:31:06,159 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 15:31:06,159 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 15:31:06,159 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
2016-08-27 15:31:06,160 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
2016-08-27 15:31:06,160 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-27 15:31:06,160 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 15:31:06,160 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 15:31:06,161 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 15:31:06,161 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 15:31:06,161 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 15:31:06,161 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 15:31:06,161 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
2016-08-27 15:31:06,162 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
2016-08-27 15:31:06,162 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
2016-08-27 15:31:06,162 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 15:31:06,162 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 15:31:06,163 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 15:31:06,163 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 15:31:06,163 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 15:31:06,163 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 15:31:06,163 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
2016-08-27 15:31:06,164 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
2016-08-27 15:31:06,164 INFO  utils.QueryParserUtils  [] - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
2016-08-27 15:31:06,164 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
2016-08-27 15:31:06,164 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 15:31:06,164 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-27 15:31:06,165 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
2016-08-27 15:31:06,165 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 15:31:06,165 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-27 15:31:06,165 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
2016-08-27 15:31:06,165 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 15:31:06,166 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-27 15:31:06,166 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
2016-08-27 15:31:06,166 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-27 15:31:06,166 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
2016-08-27 15:31:06,167 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-27 15:31:06,169 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
2016-08-27 15:31:06,169 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
2016-08-27 15:31:06,169 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
2016-08-27 15:31:06,169 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
2016-08-27 15:31:06,169 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
2016-08-27 15:31:06,169 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
2016-08-27 15:31:06,170 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
2016-08-27 15:31:06,170 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
2016-08-27 15:31:06,170 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 15:31:06,170 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 15:31:06,171 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 15:31:06,171 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 15:31:06,171 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 15:31:06,171 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 15:31:06,171 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
2016-08-27 15:31:06,172 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
2016-08-27 15:31:06,172 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-27 15:31:06,172 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 15:31:06,172 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 15:31:06,173 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 15:31:06,173 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 15:31:06,173 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 15:31:06,173 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 15:31:06,173 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
2016-08-27 15:31:06,173 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
2016-08-27 15:31:06,174 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
2016-08-27 15:31:06,174 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 15:31:06,174 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 15:31:06,174 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 15:31:06,174 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 15:31:06,175 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 15:31:06,175 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 15:31:06,175 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
2016-08-27 15:31:06,175 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
2016-08-27 15:31:06,175 INFO  utils.QueryParserUtils  [] - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
2016-08-27 15:31:06,175 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
2016-08-27 15:31:06,175 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 15:31:06,176 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-27 15:31:06,176 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
2016-08-27 15:31:06,176 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 15:31:06,176 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-27 15:31:06,176 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
2016-08-27 15:31:06,176 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 15:31:06,176 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-27 15:31:06,176 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
2016-08-27 15:31:06,177 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-27 15:31:06,177 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
2016-08-27 15:31:06,177 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-27 15:31:06,177 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.40
2016-08-27 15:31:06,178 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-27 15:31:06,178 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-27 15:31:06,178 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 15:31:06,178 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-27 15:31:06,178 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 15:31:06,178 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-27 15:31:06,178 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 15:31:06,179 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 40 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-27 15:31:06,179 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-27 15:31:06,179 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.60
2016-08-27 15:31:06,179 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-27 15:31:06,179 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-27 15:31:06,179 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 15:31:06,179 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-27 15:31:06,179 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 15:31:06,180 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-27 15:31:06,180 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 15:31:06,180 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 60 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-27 15:31:06,180 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
2016-08-27 15:31:06,181 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
2016-08-27 15:31:06,181 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
2016-08-27 15:31:06,181 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
2016-08-27 15:31:06,181 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
2016-08-27 15:31:06,181 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
2016-08-27 15:31:06,182 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
2016-08-27 15:31:06,182 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
2016-08-27 15:31:06,182 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 15:31:06,182 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 15:31:06,183 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 15:31:06,183 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 15:31:06,183 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 15:31:06,183 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 15:31:06,183 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
2016-08-27 15:31:06,184 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
2016-08-27 15:31:06,184 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-27 15:31:06,184 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 15:31:06,184 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 15:31:06,184 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 15:31:06,184 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 15:31:06,185 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 15:31:06,185 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 15:31:06,185 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
2016-08-27 15:31:06,185 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
2016-08-27 15:31:06,185 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
2016-08-27 15:31:06,186 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 15:31:06,186 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 15:31:06,186 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 15:31:06,186 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 15:31:06,186 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 15:31:06,186 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 15:31:06,186 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
2016-08-27 15:31:06,186 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
2016-08-27 15:31:06,187 INFO  utils.QueryParserUtils  [] - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
2016-08-27 15:31:06,187 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
2016-08-27 15:31:06,187 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 15:31:06,187 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-27 15:31:06,187 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
2016-08-27 15:31:06,187 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 15:31:06,187 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-27 15:31:06,188 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
2016-08-27 15:31:06,188 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 15:31:06,188 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-27 15:31:06,188 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
2016-08-27 15:31:06,188 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-27 15:31:06,189 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
2016-08-27 15:31:06,189 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-27 15:31:06,189 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.40
2016-08-27 15:31:06,189 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-27 15:31:06,190 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-27 15:31:06,190 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 15:31:06,190 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-27 15:31:06,190 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 15:31:06,190 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-27 15:31:06,190 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 15:31:06,190 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 40 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-27 15:31:06,191 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-27 15:31:06,191 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.60
2016-08-27 15:31:06,191 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-27 15:31:06,191 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-27 15:31:06,191 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 15:31:06,192 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-27 15:31:06,192 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 15:31:06,192 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-27 15:31:06,192 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 15:31:06,192 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 60 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-27 15:31:06,193 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,193 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,193 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,193 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,194 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,194 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,194 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,194 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,195 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,195 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,195 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,195 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,196 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,196 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,196 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,196 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,197 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,197 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,197 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,197 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,198 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,198 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,198 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,198 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,199 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,199 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,199 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,199 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,200 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,200 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,200 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,200 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,201 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,201 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,201 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,202 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,202 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,203 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,203 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,203 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,204 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,204 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,204 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,204 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 15:31:06,205 INFO  general.QueryParserUtilsTest  [] - running testIgnoreCase
2016-08-27 15:31:06,206 INFO  general.QueryParserUtilsTest  [] - completed testIgnoreCase
2016-08-27 15:31:06,208 INFO  general.QueryParserUtilsTest  [] - running testQueryFieldDoesNotExist
2016-08-27 15:31:06,208 INFO  general.QueryParserUtilsTest  [] - completed testQueryFieldDoesNotExist
2016-08-27 15:31:06,213 INFO  data.LoadDataSchemaTest  [] - file = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/unknownPartitioner1691525530320838464.xml
2016-08-27 15:31:06,215 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/unknownPartitioner1691525530320838464.xml hdfs = false
2016-08-27 15:31:06,216 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/unknownPartitioner1691525530320838464.xml
2016-08-27 15:31:06,217 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-27 15:31:06,217 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-27 15:31:06,219 INFO  data.LoadDataSchemaTest  [] - file = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/schemaFile1344086784494682382.xml
2016-08-27 15:31:06,221 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/schemaFile1344086784494682382.xml hdfs = false
2016-08-27 15:31:06,221 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/schemaFile1344086784494682382.xml
2016-08-27 15:31:06,223 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-27 15:31:06,223 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-27 15:31:06,223 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 15:31:06,224 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 15:31:06,224 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:31:06,225 INFO  data.LoadDataSchemaTest  [] - file = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/wrongJavaType9029518920391569435.xml
2016-08-27 15:31:06,227 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/wrongJavaType9029518920391569435.xml hdfs = false
2016-08-27 15:31:06,227 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/wrongJavaType9029518920391569435.xml
2016-08-27 15:31:06,228 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-27 15:31:06,228 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-27 15:31:06,230 INFO  query.LoadQuerySchemaTest  [] - Starting testDataSchemaDoesNotExist: 
2016-08-27 15:31:06,231 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-27 15:31:06,231 INFO  utils.TestUtils    [] - localFS: file = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySchemaFile3224002165402574916.xml
2016-08-27 15:31:06,231 INFO  utils.TestUtils    [] - query.schemas = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySchemaFile3224002165402574916.xml
2016-08-27 15:31:06,232 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-27 15:31:06,233 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-27 15:31:06,233 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-27 15:31:06,235 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySchemaFile3224002165402574916.xml
2016-08-27 15:31:06,235 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySchemaFile3224002165402574916.xml
2016-08-27 15:31:06,237 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 15:31:06,237 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-27 15:31:06,237 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-27 15:31:06,238 INFO  query.QuerySchemaLoader  [] - selectorName = elementName4
2016-08-27 15:31:06,238 INFO  query.LoadQuerySchemaTest  [] - Finished testDataSchemaDoesNotExist 
2016-08-27 15:31:06,238 INFO  query.LoadQuerySchemaTest  [] - Starting testGeneralSchemaLoad: 
2016-08-27 15:31:06,239 INFO  utils.Inputs       [] - StopList file being created
2016-08-27 15:31:06,239 INFO  utils.TestUtils    [] - localFS: file = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/stopListFile9145669031766436571.tmp
2016-08-27 15:31:06,240 INFO  query.LoadQuerySchemaTest  [] - file = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dataSchemaFile4805307101337381471.xml
2016-08-27 15:31:06,244 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dataSchemaFile4805307101337381471.xml hdfs = false
2016-08-27 15:31:06,244 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dataSchemaFile4805307101337381471.xml
2016-08-27 15:31:06,246 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-27 15:31:06,246 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-27 15:31:06,246 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 15:31:06,247 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 15:31:06,247 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:31:06,250 INFO  data.DataSchemaLoader  [] - name = elementName4 javaType = byte isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 15:31:06,252 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-27 15:31:06,253 INFO  utils.TestUtils    [] - localFS: file = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySchemaFile4731518303627965201.xml
2016-08-27 15:31:06,253 INFO  utils.TestUtils    [] - query.schemas = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySchemaFile4731518303627965201.xml
2016-08-27 15:31:06,256 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-27 15:31:06,257 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-27 15:31:06,257 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-27 15:31:06,257 INFO  utils.TestUtils    [] - filterName = elementName2
2016-08-27 15:31:06,258 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySchemaFile4731518303627965201.xml
2016-08-27 15:31:06,259 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySchemaFile4731518303627965201.xml
2016-08-27 15:31:06,261 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 15:31:06,261 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-27 15:31:06,261 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-27 15:31:06,261 INFO  query.QuerySchemaLoader  [] - selectorName = elementName4
2016-08-27 15:31:06,262 INFO  query.QuerySchemaLoader  [] - name = elementName1 partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 15:31:06,262 INFO  query.QuerySchemaLoader  [] - name = elementName1 bits = 64 dataElementSize = 64
2016-08-27 15:31:06,262 INFO  query.QuerySchemaLoader  [] - name = elementName2 partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 15:31:06,262 INFO  query.QuerySchemaLoader  [] - name = elementName2 bits = 64 dataElementSize = 128
2016-08-27 15:31:06,262 INFO  query.QuerySchemaLoader  [] - name = elementName3 partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:31:06,262 INFO  query.QuerySchemaLoader  [] - name = elementName3 bits = 64 dataElementSize = 192
2016-08-27 15:31:06,263 INFO  query.QuerySchemaLoader  [] - filterName = elementName2
2016-08-27 15:31:06,488 WARN  util.NativeCodeLoader  [] - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2016-08-27 15:31:06,699 INFO  query.LoadQuerySchemaTest  [] - Finished testGeneralSchemaLoad: 
2016-08-27 15:31:06,700 INFO  query.LoadQuerySchemaTest  [] - Starting testSelectorDoesNotExistInDataSchema: 
2016-08-27 15:31:06,700 INFO  query.LoadQuerySchemaTest  [] - file = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dataSchemaFile4338301933228109867.xml
2016-08-27 15:31:06,703 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dataSchemaFile4338301933228109867.xml hdfs = false
2016-08-27 15:31:06,703 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dataSchemaFile4338301933228109867.xml
2016-08-27 15:31:06,705 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-27 15:31:06,705 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-27 15:31:06,706 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 15:31:06,706 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 15:31:06,706 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:31:06,706 INFO  data.DataSchemaLoader  [] - name = elementName4 javaType = byte isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 15:31:06,707 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-27 15:31:06,708 INFO  utils.TestUtils    [] - localFS: file = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySchemaFile6464694365992378695.xml
2016-08-27 15:31:06,708 INFO  utils.TestUtils    [] - query.schemas = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySchemaFile6464694365992378695.xml
2016-08-27 15:31:06,709 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-27 15:31:06,709 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-27 15:31:06,709 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-27 15:31:06,710 INFO  utils.TestUtils    [] - filterName = elementName2
2016-08-27 15:31:06,711 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySchemaFile6464694365992378695.xml
2016-08-27 15:31:06,711 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySchemaFile6464694365992378695.xml
2016-08-27 15:31:06,712 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 15:31:06,713 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-27 15:31:06,713 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-27 15:31:06,713 INFO  query.QuerySchemaLoader  [] - selectorName = nonExistentElement
2016-08-27 15:31:06,713 INFO  query.LoadQuerySchemaTest  [] - Finished testSelectorDoesNotExistInDataSchema 
2016-08-27 15:31:06,714 INFO  query.LoadQuerySchemaTest  [] - file = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dataSchemaFile2691428970338727001.xml
2016-08-27 15:31:06,717 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dataSchemaFile2691428970338727001.xml hdfs = false
2016-08-27 15:31:06,717 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dataSchemaFile2691428970338727001.xml
2016-08-27 15:31:06,718 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-27 15:31:06,719 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-27 15:31:06,719 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 15:31:06,719 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 15:31:06,719 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 15:31:06,719 INFO  data.DataSchemaLoader  [] - name = elementName4 javaType = byte isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 15:31:06,720 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-27 15:31:06,720 INFO  utils.TestUtils    [] - localFS: file = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySchemaFile5608815310606404272.xml
2016-08-27 15:31:06,721 INFO  utils.TestUtils    [] - query.schemas = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySchemaFile5608815310606404272.xml
2016-08-27 15:31:06,721 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-27 15:31:06,722 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-27 15:31:06,722 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-27 15:31:06,722 INFO  utils.TestUtils    [] - filterName = elementName2
2016-08-27 15:31:06,723 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySchemaFile5608815310606404272.xml
2016-08-27 15:31:06,724 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/querySchemaFile5608815310606404272.xml
2016-08-27 15:31:06,725 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 15:31:06,726 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-27 15:31:06,726 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-27 15:31:06,726 INFO  query.QuerySchemaLoader  [] - selectorName = nonExistentElement
2016-08-27 15:31:06,726 INFO  query.LoadQuerySchemaTest  [] - Finished testFunkyFilterScenarios
