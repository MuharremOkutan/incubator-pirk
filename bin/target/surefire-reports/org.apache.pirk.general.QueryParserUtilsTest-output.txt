 INFO [main] 2016-08-27 15:31:05,921 (Inputs.java:520) - file = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/testDataSchemaFile681171316210355343.xml
<?xml version="1.0" encoding="UTF-8" standalone="no"?><schema><schemaName>testDataSchema</schemaName><element><name>date</name><type>string</type><partitioner>org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner</partitioner></element><element><name>qname</name><type>string</type><partitioner>org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner</partitioner></element><element><name>src_ip</name><type>string</type><partitioner>org.apache.pirk.schema.data.partitioner.IPDataPartitioner</partitioner></element><element><name>dest_ip</name><type>string</type><partitioner>org.apache.pirk.schema.data.partitioner.IPDataPartitioner</partitioner></element><element><name>qtype</name><type>short</type><isArray/><partitioner>org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner</partitioner></element><element><name>rcode</name><type>int</type><partitioner>org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner</partitioner></element><element><name>ip</name><type>string</type><isArray/><partitioner>org.apache.pirk.schema.data.partitioner.IPDataPartitioner</partitioner></element></schema>
 INFO [main] 2016-08-27 15:31:05,978 (DataSchemaLoader.java:81) - Loading pre-configured data schemas: 
 INFO [main] 2016-08-27 15:31:05,979 (DataSchemaLoader.java:127) - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/testDataSchemaFile681171316210355343.xml hdfs = false
 INFO [main] 2016-08-27 15:31:05,979 (DataSchemaLoader.java:142) - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/testDataSchemaFile681171316210355343.xml
 INFO [main] 2016-08-27 15:31:05,982 (DataSchemaLoader.java:234) - Root element: schema
 INFO [main] 2016-08-27 15:31:05,983 (DataSchemaLoader.java:192) - schemaName = testDataSchema
 INFO [main] 2016-08-27 15:31:05,984 (DataSchemaLoader.java:294) - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
 INFO [main] 2016-08-27 15:31:05,985 (DataSchemaLoader.java:294) - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
 INFO [main] 2016-08-27 15:31:05,985 (DataSchemaLoader.java:294) - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-27 15:31:05,985 (DataSchemaLoader.java:294) - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-27 15:31:05,986 (DataSchemaLoader.java:294) - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
 INFO [main] 2016-08-27 15:31:05,986 (DataSchemaLoader.java:294) - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
 INFO [main] 2016-08-27 15:31:05,986 (DataSchemaLoader.java:294) - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-27 15:31:05,987 (DataSchemaLoader.java:127) - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/testDataSchemaFile681171316210355343.xml hdfs = false
 INFO [main] 2016-08-27 15:31:05,987 (DataSchemaLoader.java:142) - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/testDataSchemaFile681171316210355343.xml
 INFO [main] 2016-08-27 15:31:05,989 (DataSchemaLoader.java:234) - Root element: schema
 INFO [main] 2016-08-27 15:31:05,990 (DataSchemaLoader.java:192) - schemaName = testDataSchema
 INFO [main] 2016-08-27 15:31:05,990 (DataSchemaLoader.java:294) - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
 INFO [main] 2016-08-27 15:31:05,990 (DataSchemaLoader.java:294) - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
 INFO [main] 2016-08-27 15:31:05,990 (DataSchemaLoader.java:294) - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-27 15:31:05,991 (DataSchemaLoader.java:294) - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-27 15:31:05,991 (DataSchemaLoader.java:294) - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
 INFO [main] 2016-08-27 15:31:05,991 (DataSchemaLoader.java:294) - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
 INFO [main] 2016-08-27 15:31:05,991 (DataSchemaLoader.java:294) - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-27 15:31:05,992 (TestUtils.java:144) - createQuerySchema: querySchemaName = dns-hostname-query
 INFO [main] 2016-08-27 15:31:05,992 (TestUtils.java:165) - localFS: file = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-hostname-query_file349573871809473132.xml
 INFO [main] 2016-08-27 15:31:05,993 (TestUtils.java:180) - query.schemas = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-hostname-query_file349573871809473132.xml
 INFO [main] 2016-08-27 15:31:05,994 (TestUtils.java:213) - elementName = date
 INFO [main] 2016-08-27 15:31:05,994 (TestUtils.java:213) - elementName = src_ip
 INFO [main] 2016-08-27 15:31:05,995 (TestUtils.java:213) - elementName = dest_ip
 INFO [main] 2016-08-27 15:31:05,995 (TestUtils.java:213) - elementName = qtype
 INFO [main] 2016-08-27 15:31:05,995 (TestUtils.java:213) - elementName = rcode
 INFO [main] 2016-08-27 15:31:05,995 (TestUtils.java:213) - elementName = ip
<?xml version="1.0" encoding="UTF-8" standalone="no"?><schema><schemaName>dns-hostname-query</schemaName><dataSchemaName>testDataSchema</dataSchemaName><selectorName>qname</selectorName><elements><name>date</name><name>src_ip</name><name>dest_ip</name><name>qtype</name><name>rcode</name><name>ip</name></elements></schema>
 INFO [main] 2016-08-27 15:31:05,997 (TestUtils.java:144) - createQuerySchema: querySchemaName = dns-ip-query
 INFO [main] 2016-08-27 15:31:05,998 (TestUtils.java:165) - localFS: file = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-ip-query_file9014745757010494341.xml
 INFO [main] 2016-08-27 15:31:05,998 (TestUtils.java:180) - query.schemas = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-hostname-query_file349573871809473132.xml,/var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-ip-query_file9014745757010494341.xml
 INFO [main] 2016-08-27 15:31:06,000 (TestUtils.java:213) - elementName = src_ip
 INFO [main] 2016-08-27 15:31:06,000 (TestUtils.java:213) - elementName = dest_ip
 INFO [main] 2016-08-27 15:31:06,000 (TestUtils.java:213) - elementName = ip
<?xml version="1.0" encoding="UTF-8" standalone="no"?><schema><schemaName>dns-ip-query</schemaName><dataSchemaName>testDataSchema</dataSchemaName><selectorName>ip</selectorName><elements><name>src_ip</name><name>dest_ip</name><name>ip</name></elements></schema>
 INFO [main] 2016-08-27 15:31:06,002 (TestUtils.java:144) - createQuerySchema: querySchemaName = dns-nxdomain-query
 INFO [main] 2016-08-27 15:31:06,003 (TestUtils.java:165) - localFS: file = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-nxdomain-query_file6009230615177346148.xml
 INFO [main] 2016-08-27 15:31:06,003 (TestUtils.java:180) - query.schemas = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-hostname-query_file349573871809473132.xml,/var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-ip-query_file9014745757010494341.xml,/var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-nxdomain-query_file6009230615177346148.xml
 INFO [main] 2016-08-27 15:31:06,004 (TestUtils.java:213) - elementName = qname
 INFO [main] 2016-08-27 15:31:06,005 (TestUtils.java:213) - elementName = src_ip
 INFO [main] 2016-08-27 15:31:06,005 (TestUtils.java:213) - elementName = dest_ip
<?xml version="1.0" encoding="UTF-8" standalone="no"?><schema><schemaName>dns-nxdomain-query</schemaName><dataSchemaName>testDataSchema</dataSchemaName><selectorName>qname</selectorName><elements><name>qname</name><name>src_ip</name><name>dest_ip</name></elements></schema>
 INFO [main] 2016-08-27 15:31:06,006 (TestUtils.java:144) - createQuerySchema: querySchemaName = dns-srcip-query
 INFO [main] 2016-08-27 15:31:06,007 (TestUtils.java:165) - localFS: file = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query_file4652834770500303702.xml
 INFO [main] 2016-08-27 15:31:06,008 (TestUtils.java:180) - query.schemas = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-hostname-query_file349573871809473132.xml,/var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-ip-query_file9014745757010494341.xml,/var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-nxdomain-query_file6009230615177346148.xml,/var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query_file4652834770500303702.xml
 INFO [main] 2016-08-27 15:31:06,009 (TestUtils.java:213) - elementName = qname
 INFO [main] 2016-08-27 15:31:06,010 (TestUtils.java:213) - elementName = dest_ip
 INFO [main] 2016-08-27 15:31:06,010 (TestUtils.java:213) - elementName = ip
<?xml version="1.0" encoding="UTF-8" standalone="no"?><schema><schemaName>dns-srcip-query</schemaName><dataSchemaName>testDataSchema</dataSchemaName><selectorName>src_ip</selectorName><elements><name>qname</name><name>dest_ip</name><name>ip</name></elements></schema>
 INFO [main] 2016-08-27 15:31:06,012 (TestUtils.java:144) - createQuerySchema: querySchemaName = dns-srcip-query-no-filter
 INFO [main] 2016-08-27 15:31:06,013 (TestUtils.java:165) - localFS: file = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query-no-filter_file7577831703458395023.xml
 INFO [main] 2016-08-27 15:31:06,013 (TestUtils.java:180) - query.schemas = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-hostname-query_file349573871809473132.xml,/var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-ip-query_file9014745757010494341.xml,/var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-nxdomain-query_file6009230615177346148.xml,/var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query_file4652834770500303702.xml,/var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query-no-filter_file7577831703458395023.xml
 INFO [main] 2016-08-27 15:31:06,014 (TestUtils.java:213) - elementName = qname
 INFO [main] 2016-08-27 15:31:06,014 (TestUtils.java:213) - elementName = dest_ip
 INFO [main] 2016-08-27 15:31:06,015 (TestUtils.java:213) - elementName = ip
<?xml version="1.0" encoding="UTF-8" standalone="no"?><schema><schemaName>dns-srcip-query-no-filter</schemaName><dataSchemaName>testDataSchema</dataSchemaName><selectorName>src_ip</selectorName><elements><name>qname</name><name>dest_ip</name><name>ip</name></elements></schema>
 INFO [main] 2016-08-27 15:31:06,018 (QuerySchemaLoader.java:83) - Loading query schemas: 
 INFO [main] 2016-08-27 15:31:06,019 (QuerySchemaLoader.java:128) - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-hostname-query_file349573871809473132.xml
 INFO [main] 2016-08-27 15:31:06,019 (QuerySchemaLoader.java:143) - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-hostname-query_file349573871809473132.xml
 INFO [main] 2016-08-27 15:31:06,021 (QuerySchemaLoader.java:292) - Root element: schema
 INFO [main] 2016-08-27 15:31:06,021 (QuerySchemaLoader.java:190) - schemaName = dns-hostname-query
 INFO [main] 2016-08-27 15:31:06,022 (QuerySchemaLoader.java:194) - dataSchemaName = testDataSchema
 INFO [main] 2016-08-27 15:31:06,022 (QuerySchemaLoader.java:205) - selectorName = qname
 INFO [main] 2016-08-27 15:31:06,022 (QuerySchemaLoader.java:234) - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
 INFO [main] 2016-08-27 15:31:06,022 (QuerySchemaLoader.java:247) - name = date bits = 64 dataElementSize = 64
 INFO [main] 2016-08-27 15:31:06,023 (QuerySchemaLoader.java:234) - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-27 15:31:06,023 (QuerySchemaLoader.java:247) - name = src_ip bits = 32 dataElementSize = 96
 INFO [main] 2016-08-27 15:31:06,023 (QuerySchemaLoader.java:234) - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-27 15:31:06,023 (QuerySchemaLoader.java:247) - name = dest_ip bits = 32 dataElementSize = 128
 INFO [main] 2016-08-27 15:31:06,023 (QuerySchemaLoader.java:234) - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
 INFO [main] 2016-08-27 15:31:06,024 (QuerySchemaLoader.java:247) - name = qtype bits = 32 dataElementSize = 160
 INFO [main] 2016-08-27 15:31:06,026 (QuerySchemaLoader.java:234) - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
 INFO [main] 2016-08-27 15:31:06,027 (QuerySchemaLoader.java:247) - name = rcode bits = 32 dataElementSize = 192
 INFO [main] 2016-08-27 15:31:06,027 (QuerySchemaLoader.java:234) - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-27 15:31:06,028 (QuerySchemaLoader.java:247) - name = ip bits = 64 dataElementSize = 256
 INFO [main] 2016-08-27 15:31:06,029 (QuerySchemaLoader.java:128) - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-ip-query_file9014745757010494341.xml
 INFO [main] 2016-08-27 15:31:06,029 (QuerySchemaLoader.java:143) - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-ip-query_file9014745757010494341.xml
 INFO [main] 2016-08-27 15:31:06,031 (QuerySchemaLoader.java:292) - Root element: schema
 INFO [main] 2016-08-27 15:31:06,031 (QuerySchemaLoader.java:190) - schemaName = dns-ip-query
 INFO [main] 2016-08-27 15:31:06,031 (QuerySchemaLoader.java:194) - dataSchemaName = testDataSchema
 INFO [main] 2016-08-27 15:31:06,032 (QuerySchemaLoader.java:205) - selectorName = ip
 INFO [main] 2016-08-27 15:31:06,032 (QuerySchemaLoader.java:234) - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-27 15:31:06,032 (QuerySchemaLoader.java:247) - name = src_ip bits = 32 dataElementSize = 32
 INFO [main] 2016-08-27 15:31:06,032 (QuerySchemaLoader.java:234) - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-27 15:31:06,032 (QuerySchemaLoader.java:247) - name = dest_ip bits = 32 dataElementSize = 64
 INFO [main] 2016-08-27 15:31:06,033 (QuerySchemaLoader.java:234) - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-27 15:31:06,033 (QuerySchemaLoader.java:247) - name = ip bits = 64 dataElementSize = 128
 INFO [main] 2016-08-27 15:31:06,033 (QuerySchemaLoader.java:128) - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-nxdomain-query_file6009230615177346148.xml
 INFO [main] 2016-08-27 15:31:06,033 (QuerySchemaLoader.java:143) - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-nxdomain-query_file6009230615177346148.xml
 INFO [main] 2016-08-27 15:31:06,035 (QuerySchemaLoader.java:292) - Root element: schema
 INFO [main] 2016-08-27 15:31:06,036 (QuerySchemaLoader.java:190) - schemaName = dns-nxdomain-query
 INFO [main] 2016-08-27 15:31:06,036 (QuerySchemaLoader.java:194) - dataSchemaName = testDataSchema
 INFO [main] 2016-08-27 15:31:06,036 (QuerySchemaLoader.java:205) - selectorName = qname
 INFO [main] 2016-08-27 15:31:06,036 (QuerySchemaLoader.java:234) - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
 INFO [main] 2016-08-27 15:31:06,036 (QuerySchemaLoader.java:247) - name = qname bits = 64 dataElementSize = 64
 INFO [main] 2016-08-27 15:31:06,037 (QuerySchemaLoader.java:234) - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-27 15:31:06,037 (QuerySchemaLoader.java:247) - name = src_ip bits = 32 dataElementSize = 96
 INFO [main] 2016-08-27 15:31:06,038 (QuerySchemaLoader.java:234) - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-27 15:31:06,038 (QuerySchemaLoader.java:247) - name = dest_ip bits = 32 dataElementSize = 128
 INFO [main] 2016-08-27 15:31:06,038 (QuerySchemaLoader.java:128) - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query_file4652834770500303702.xml
 INFO [main] 2016-08-27 15:31:06,038 (QuerySchemaLoader.java:143) - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query_file4652834770500303702.xml
 INFO [main] 2016-08-27 15:31:06,040 (QuerySchemaLoader.java:292) - Root element: schema
 INFO [main] 2016-08-27 15:31:06,040 (QuerySchemaLoader.java:190) - schemaName = dns-srcip-query
 INFO [main] 2016-08-27 15:31:06,040 (QuerySchemaLoader.java:194) - dataSchemaName = testDataSchema
 INFO [main] 2016-08-27 15:31:06,040 (QuerySchemaLoader.java:205) - selectorName = src_ip
 INFO [main] 2016-08-27 15:31:06,040 (QuerySchemaLoader.java:234) - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
 INFO [main] 2016-08-27 15:31:06,041 (QuerySchemaLoader.java:247) - name = qname bits = 64 dataElementSize = 64
 INFO [main] 2016-08-27 15:31:06,041 (QuerySchemaLoader.java:234) - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-27 15:31:06,041 (QuerySchemaLoader.java:247) - name = dest_ip bits = 32 dataElementSize = 96
 INFO [main] 2016-08-27 15:31:06,041 (QuerySchemaLoader.java:234) - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-27 15:31:06,041 (QuerySchemaLoader.java:247) - name = ip bits = 64 dataElementSize = 160
 INFO [main] 2016-08-27 15:31:06,041 (QuerySchemaLoader.java:128) - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query-no-filter_file7577831703458395023.xml
 INFO [main] 2016-08-27 15:31:06,042 (QuerySchemaLoader.java:143) - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query-no-filter_file7577831703458395023.xml
 INFO [main] 2016-08-27 15:31:06,044 (QuerySchemaLoader.java:292) - Root element: schema
 INFO [main] 2016-08-27 15:31:06,044 (QuerySchemaLoader.java:190) - schemaName = dns-srcip-query-no-filter
 INFO [main] 2016-08-27 15:31:06,045 (QuerySchemaLoader.java:194) - dataSchemaName = testDataSchema
 INFO [main] 2016-08-27 15:31:06,045 (QuerySchemaLoader.java:205) - selectorName = src_ip
 INFO [main] 2016-08-27 15:31:06,045 (QuerySchemaLoader.java:234) - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
 INFO [main] 2016-08-27 15:31:06,045 (QuerySchemaLoader.java:247) - name = qname bits = 64 dataElementSize = 64
 INFO [main] 2016-08-27 15:31:06,045 (QuerySchemaLoader.java:234) - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-27 15:31:06,045 (QuerySchemaLoader.java:247) - name = dest_ip bits = 32 dataElementSize = 96
 INFO [main] 2016-08-27 15:31:06,046 (QuerySchemaLoader.java:234) - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-27 15:31:06,046 (QuerySchemaLoader.java:247) - name = ip bits = 64 dataElementSize = 160
 INFO [main] 2016-08-27 15:31:06,046 (QuerySchemaLoader.java:128) - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-hostname-query_file349573871809473132.xml
 INFO [main] 2016-08-27 15:31:06,046 (QuerySchemaLoader.java:143) - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-hostname-query_file349573871809473132.xml
 INFO [main] 2016-08-27 15:31:06,048 (QuerySchemaLoader.java:292) - Root element: schema
 INFO [main] 2016-08-27 15:31:06,048 (QuerySchemaLoader.java:190) - schemaName = dns-hostname-query
 INFO [main] 2016-08-27 15:31:06,048 (QuerySchemaLoader.java:194) - dataSchemaName = testDataSchema
 INFO [main] 2016-08-27 15:31:06,048 (QuerySchemaLoader.java:205) - selectorName = qname
 INFO [main] 2016-08-27 15:31:06,048 (QuerySchemaLoader.java:234) - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
 INFO [main] 2016-08-27 15:31:06,048 (QuerySchemaLoader.java:247) - name = date bits = 64 dataElementSize = 64
 INFO [main] 2016-08-27 15:31:06,049 (QuerySchemaLoader.java:234) - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-27 15:31:06,049 (QuerySchemaLoader.java:247) - name = src_ip bits = 32 dataElementSize = 96
 INFO [main] 2016-08-27 15:31:06,049 (QuerySchemaLoader.java:234) - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-27 15:31:06,049 (QuerySchemaLoader.java:247) - name = dest_ip bits = 32 dataElementSize = 128
 INFO [main] 2016-08-27 15:31:06,049 (QuerySchemaLoader.java:234) - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
 INFO [main] 2016-08-27 15:31:06,049 (QuerySchemaLoader.java:247) - name = qtype bits = 32 dataElementSize = 160
 INFO [main] 2016-08-27 15:31:06,049 (QuerySchemaLoader.java:234) - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
 INFO [main] 2016-08-27 15:31:06,049 (QuerySchemaLoader.java:247) - name = rcode bits = 32 dataElementSize = 192
 INFO [main] 2016-08-27 15:31:06,049 (QuerySchemaLoader.java:234) - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-27 15:31:06,049 (QuerySchemaLoader.java:247) - name = ip bits = 64 dataElementSize = 256
 INFO [main] 2016-08-27 15:31:06,050 (QuerySchemaLoader.java:128) - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-ip-query_file9014745757010494341.xml
 INFO [main] 2016-08-27 15:31:06,050 (QuerySchemaLoader.java:143) - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-ip-query_file9014745757010494341.xml
 INFO [main] 2016-08-27 15:31:06,052 (QuerySchemaLoader.java:292) - Root element: schema
 INFO [main] 2016-08-27 15:31:06,052 (QuerySchemaLoader.java:190) - schemaName = dns-ip-query
 INFO [main] 2016-08-27 15:31:06,053 (QuerySchemaLoader.java:194) - dataSchemaName = testDataSchema
 INFO [main] 2016-08-27 15:31:06,053 (QuerySchemaLoader.java:205) - selectorName = ip
 INFO [main] 2016-08-27 15:31:06,053 (QuerySchemaLoader.java:234) - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-27 15:31:06,053 (QuerySchemaLoader.java:247) - name = src_ip bits = 32 dataElementSize = 32
 INFO [main] 2016-08-27 15:31:06,053 (QuerySchemaLoader.java:234) - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-27 15:31:06,053 (QuerySchemaLoader.java:247) - name = dest_ip bits = 32 dataElementSize = 64
 INFO [main] 2016-08-27 15:31:06,054 (QuerySchemaLoader.java:234) - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-27 15:31:06,054 (QuerySchemaLoader.java:247) - name = ip bits = 64 dataElementSize = 128
 INFO [main] 2016-08-27 15:31:06,054 (QuerySchemaLoader.java:128) - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-nxdomain-query_file6009230615177346148.xml
 INFO [main] 2016-08-27 15:31:06,054 (QuerySchemaLoader.java:143) - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-nxdomain-query_file6009230615177346148.xml
 INFO [main] 2016-08-27 15:31:06,056 (QuerySchemaLoader.java:292) - Root element: schema
 INFO [main] 2016-08-27 15:31:06,056 (QuerySchemaLoader.java:190) - schemaName = dns-nxdomain-query
 INFO [main] 2016-08-27 15:31:06,057 (QuerySchemaLoader.java:194) - dataSchemaName = testDataSchema
 INFO [main] 2016-08-27 15:31:06,057 (QuerySchemaLoader.java:205) - selectorName = qname
 INFO [main] 2016-08-27 15:31:06,057 (QuerySchemaLoader.java:234) - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
 INFO [main] 2016-08-27 15:31:06,057 (QuerySchemaLoader.java:247) - name = qname bits = 64 dataElementSize = 64
 INFO [main] 2016-08-27 15:31:06,057 (QuerySchemaLoader.java:234) - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-27 15:31:06,058 (QuerySchemaLoader.java:247) - name = src_ip bits = 32 dataElementSize = 96
 INFO [main] 2016-08-27 15:31:06,058 (QuerySchemaLoader.java:234) - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-27 15:31:06,058 (QuerySchemaLoader.java:247) - name = dest_ip bits = 32 dataElementSize = 128
 INFO [main] 2016-08-27 15:31:06,058 (QuerySchemaLoader.java:128) - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query_file4652834770500303702.xml
 INFO [main] 2016-08-27 15:31:06,059 (QuerySchemaLoader.java:143) - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query_file4652834770500303702.xml
 INFO [main] 2016-08-27 15:31:06,061 (QuerySchemaLoader.java:292) - Root element: schema
 INFO [main] 2016-08-27 15:31:06,061 (QuerySchemaLoader.java:190) - schemaName = dns-srcip-query
 INFO [main] 2016-08-27 15:31:06,062 (QuerySchemaLoader.java:194) - dataSchemaName = testDataSchema
 INFO [main] 2016-08-27 15:31:06,062 (QuerySchemaLoader.java:205) - selectorName = src_ip
 INFO [main] 2016-08-27 15:31:06,062 (QuerySchemaLoader.java:234) - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
 INFO [main] 2016-08-27 15:31:06,062 (QuerySchemaLoader.java:247) - name = qname bits = 64 dataElementSize = 64
 INFO [main] 2016-08-27 15:31:06,062 (QuerySchemaLoader.java:234) - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-27 15:31:06,063 (QuerySchemaLoader.java:247) - name = dest_ip bits = 32 dataElementSize = 96
 INFO [main] 2016-08-27 15:31:06,063 (QuerySchemaLoader.java:234) - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-27 15:31:06,063 (QuerySchemaLoader.java:247) - name = ip bits = 64 dataElementSize = 160
 INFO [main] 2016-08-27 15:31:06,063 (QuerySchemaLoader.java:128) - Loading schemaFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query-no-filter_file7577831703458395023.xml
 INFO [main] 2016-08-27 15:31:06,063 (QuerySchemaLoader.java:143) - localFS: inputFile = /var/folders/6m/1pjbh3894cdbqjf013ll3kb80000gp/T/dns-srcip-query-no-filter_file7577831703458395023.xml
 INFO [main] 2016-08-27 15:31:06,065 (QuerySchemaLoader.java:292) - Root element: schema
 INFO [main] 2016-08-27 15:31:06,065 (QuerySchemaLoader.java:190) - schemaName = dns-srcip-query-no-filter
 INFO [main] 2016-08-27 15:31:06,066 (QuerySchemaLoader.java:194) - dataSchemaName = testDataSchema
 INFO [main] 2016-08-27 15:31:06,066 (QuerySchemaLoader.java:205) - selectorName = src_ip
 INFO [main] 2016-08-27 15:31:06,066 (QuerySchemaLoader.java:234) - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
 INFO [main] 2016-08-27 15:31:06,066 (QuerySchemaLoader.java:247) - name = qname bits = 64 dataElementSize = 64
 INFO [main] 2016-08-27 15:31:06,066 (QuerySchemaLoader.java:234) - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-27 15:31:06,066 (QuerySchemaLoader.java:247) - name = dest_ip bits = 32 dataElementSize = 96
 INFO [main] 2016-08-27 15:31:06,067 (QuerySchemaLoader.java:234) - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-27 15:31:06,067 (QuerySchemaLoader.java:247) - name = ip bits = 64 dataElementSize = 160
 INFO [main] 2016-08-27 15:31:06,118 (QueryParserUtils.java:672) - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,118 (QueryParserUtils.java:736) - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,119 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,119 (QueryParserUtils.java:738) - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,121 (QueryParserUtils.java:672) - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,121 (QueryParserUtils.java:736) - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,122 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,122 (QueryParserUtils.java:738) - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,123 (QueryParserUtils.java:672) - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,123 (QueryParserUtils.java:736) - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,123 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,124 (QueryParserUtils.java:738) - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,124 (QueryParserUtils.java:672) - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,124 (QueryParserUtils.java:736) - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
 INFO [main] 2016-08-27 15:31:06,125 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,125 (QueryParserUtils.java:738) - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
 INFO [main] 2016-08-27 15:31:06,125 (QueryParserUtils.java:672) - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,126 (QueryParserUtils.java:736) - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
 INFO [main] 2016-08-27 15:31:06,126 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,126 (QueryParserUtils.java:738) - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
 INFO [main] 2016-08-27 15:31:06,127 (QueryParserUtils.java:672) - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,127 (QueryParserUtils.java:736) - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,127 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,128 (QueryParserUtils.java:738) - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,128 (QueryParserUtils.java:672) - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,129 (QueryParserUtils.java:736) - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
 INFO [main] 2016-08-27 15:31:06,129 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,129 (QueryParserUtils.java:738) - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
 INFO [main] 2016-08-27 15:31:06,130 (QueryParserUtils.java:672) - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,130 (QueryParserUtils.java:736) - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,130 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,130 (QueryParserUtils.java:738) - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,131 (QueryParserUtils.java:672) - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,131 (QueryParserUtils.java:736) - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,131 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,131 (QueryParserUtils.java:738) - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,132 (QueryParserUtils.java:672) - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,132 (QueryParserUtils.java:736) - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,132 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,132 (QueryParserUtils.java:738) - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,133 (QueryParserUtils.java:672) - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,133 (QueryParserUtils.java:736) - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
 INFO [main] 2016-08-27 15:31:06,133 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,133 (QueryParserUtils.java:738) - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
 INFO [main] 2016-08-27 15:31:06,134 (QueryParserUtils.java:672) - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,134 (QueryParserUtils.java:736) - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
 INFO [main] 2016-08-27 15:31:06,134 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,134 (QueryParserUtils.java:738) - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
 INFO [main] 2016-08-27 15:31:06,135 (QueryParserUtils.java:672) - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,135 (QueryParserUtils.java:736) - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,135 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,135 (QueryParserUtils.java:738) - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,136 (QueryParserUtils.java:672) - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,136 (QueryParserUtils.java:736) - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
 INFO [main] 2016-08-27 15:31:06,136 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,137 (QueryParserUtils.java:738) - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
 INFO [main] 2016-08-27 15:31:06,137 (QueryParserUtils.java:672) - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,137 (QueryParserUtils.java:736) - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,138 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,138 (QueryParserUtils.java:738) - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,139 (QueryParserUtils.java:672) - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,139 (QueryParserUtils.java:736) - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,139 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,139 (QueryParserUtils.java:738) - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,140 (QueryParserUtils.java:672) - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,140 (QueryParserUtils.java:736) - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,140 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,141 (QueryParserUtils.java:738) - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,141 (QueryParserUtils.java:672) - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,142 (QueryParserUtils.java:736) - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
 INFO [main] 2016-08-27 15:31:06,142 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,142 (QueryParserUtils.java:738) - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
 INFO [main] 2016-08-27 15:31:06,143 (QueryParserUtils.java:672) - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,143 (QueryParserUtils.java:736) - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
 INFO [main] 2016-08-27 15:31:06,143 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,143 (QueryParserUtils.java:738) - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
 INFO [main] 2016-08-27 15:31:06,144 (QueryParserUtils.java:672) - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,144 (QueryParserUtils.java:736) - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,144 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,145 (QueryParserUtils.java:738) - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,145 (QueryParserUtils.java:672) - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,146 (QueryParserUtils.java:736) - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
 INFO [main] 2016-08-27 15:31:06,146 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,146 (QueryParserUtils.java:738) - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
 INFO [main] 2016-08-27 15:31:06,151 (QueryParserUtils.java:672) - inclusive = true field = rcode query = [0+TO+2] value = 0
 INFO [main] 2016-08-27 15:31:06,152 (QueryParserUtils.java:672) - inclusive = false field = rcode query = {-1+TO+2} value = 0
 INFO [main] 2016-08-27 15:31:06,152 (QueryParserUtils.java:672) - inclusive = true field = rcode query = [-1+TO+0] value = 0
 INFO [main] 2016-08-27 15:31:06,152 (QueryParserUtils.java:672) - inclusive = false field = rcode query = {0+TO+3} value = 0
 INFO [main] 2016-08-27 15:31:06,153 (QueryParserUtils.java:672) - inclusive = true field = rcode query = [3+TO+10] value = 0
 INFO [main] 2016-08-27 15:31:06,153 (QueryParserUtils.java:672) - inclusive = true field = rcode query = [0+TO+2] value = 0
 INFO [main] 2016-08-27 15:31:06,153 (QueryParserUtils.java:672) - inclusive = false field = rcode query = {-1+TO+2} value = 0
 INFO [main] 2016-08-27 15:31:06,154 (QueryParserUtils.java:672) - inclusive = true field = rcode query = [-1+TO+0] value = 0
 INFO [main] 2016-08-27 15:31:06,154 (QueryParserUtils.java:672) - inclusive = false field = rcode query = {0+TO+3} value = 0
 INFO [main] 2016-08-27 15:31:06,154 (QueryParserUtils.java:672) - inclusive = true field = rcode query = [3+TO+10] value = 0
 INFO [main] 2016-08-27 15:31:06,154 (QueryParserUtils.java:672) - inclusive = true field = rcode query = [0+TO+2] value = 0
 INFO [main] 2016-08-27 15:31:06,155 (QueryParserUtils.java:672) - inclusive = false field = rcode query = {-1+TO+2} value = 0
 INFO [main] 2016-08-27 15:31:06,155 (QueryParserUtils.java:672) - inclusive = true field = rcode query = [-1+TO+0] value = 0
 INFO [main] 2016-08-27 15:31:06,155 (QueryParserUtils.java:672) - inclusive = false field = rcode query = {0+TO+3} value = 0
 INFO [main] 2016-08-27 15:31:06,156 (QueryParserUtils.java:672) - inclusive = true field = rcode query = [3+TO+10] value = 0
 INFO [main] 2016-08-27 15:31:06,157 (QueryParserUtils.java:672) - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
 INFO [main] 2016-08-27 15:31:06,157 (QueryParserUtils.java:693) - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
 INFO [main] 2016-08-27 15:31:06,157 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
 INFO [main] 2016-08-27 15:31:06,157 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
 INFO [main] 2016-08-27 15:31:06,157 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
 INFO [main] 2016-08-27 15:31:06,157 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
 INFO [main] 2016-08-27 15:31:06,158 (QueryParserUtils.java:672) - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
 INFO [main] 2016-08-27 15:31:06,158 (QueryParserUtils.java:693) - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
 INFO [main] 2016-08-27 15:31:06,158 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-27 15:31:06,158 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-27 15:31:06,158 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-27 15:31:06,159 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-27 15:31:06,159 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-27 15:31:06,159 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-27 15:31:06,159 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
 INFO [main] 2016-08-27 15:31:06,160 (QueryParserUtils.java:672) - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
 INFO [main] 2016-08-27 15:31:06,160 (QueryParserUtils.java:693) - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
 INFO [main] 2016-08-27 15:31:06,160 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-27 15:31:06,160 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-27 15:31:06,161 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-27 15:31:06,161 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-27 15:31:06,161 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-27 15:31:06,161 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-27 15:31:06,161 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-27 15:31:06,162 (QueryParserUtils.java:672) - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
 INFO [main] 2016-08-27 15:31:06,162 (QueryParserUtils.java:693) - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
 INFO [main] 2016-08-27 15:31:06,162 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-27 15:31:06,162 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-27 15:31:06,163 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-27 15:31:06,163 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-27 15:31:06,163 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-27 15:31:06,163 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-27 15:31:06,163 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
 INFO [main] 2016-08-27 15:31:06,164 (QueryParserUtils.java:672) - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
 INFO [main] 2016-08-27 15:31:06,164 (QueryParserUtils.java:693) - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
 INFO [main] 2016-08-27 15:31:06,164 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
 INFO [main] 2016-08-27 15:31:06,164 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-27 15:31:06,164 (QueryParserUtils.java:716) - !ipValue[ipBlock].equals(blocksLower[ipBlock]
 INFO [main] 2016-08-27 15:31:06,165 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
 INFO [main] 2016-08-27 15:31:06,165 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-27 15:31:06,165 (QueryParserUtils.java:716) - !ipValue[ipBlock].equals(blocksLower[ipBlock]
 INFO [main] 2016-08-27 15:31:06,165 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
 INFO [main] 2016-08-27 15:31:06,165 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-27 15:31:06,166 (QueryParserUtils.java:716) - !ipValue[ipBlock].equals(blocksLower[ipBlock]
 INFO [main] 2016-08-27 15:31:06,166 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
 INFO [main] 2016-08-27 15:31:06,166 (QueryParserUtils.java:725) - IP block not within given range
 INFO [main] 2016-08-27 15:31:06,166 (QueryParserUtils.java:672) - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
 INFO [main] 2016-08-27 15:31:06,167 (QueryParserUtils.java:693) - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
 INFO [main] 2016-08-27 15:31:06,169 (QueryParserUtils.java:672) - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
 INFO [main] 2016-08-27 15:31:06,169 (QueryParserUtils.java:693) - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
 INFO [main] 2016-08-27 15:31:06,169 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
 INFO [main] 2016-08-27 15:31:06,169 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
 INFO [main] 2016-08-27 15:31:06,169 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
 INFO [main] 2016-08-27 15:31:06,169 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
 INFO [main] 2016-08-27 15:31:06,170 (QueryParserUtils.java:672) - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
 INFO [main] 2016-08-27 15:31:06,170 (QueryParserUtils.java:693) - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
 INFO [main] 2016-08-27 15:31:06,170 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-27 15:31:06,170 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-27 15:31:06,171 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-27 15:31:06,171 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-27 15:31:06,171 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-27 15:31:06,171 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-27 15:31:06,171 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
 INFO [main] 2016-08-27 15:31:06,172 (QueryParserUtils.java:672) - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
 INFO [main] 2016-08-27 15:31:06,172 (QueryParserUtils.java:693) - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
 INFO [main] 2016-08-27 15:31:06,172 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-27 15:31:06,172 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-27 15:31:06,173 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-27 15:31:06,173 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-27 15:31:06,173 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-27 15:31:06,173 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-27 15:31:06,173 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-27 15:31:06,173 (QueryParserUtils.java:672) - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
 INFO [main] 2016-08-27 15:31:06,174 (QueryParserUtils.java:693) - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
 INFO [main] 2016-08-27 15:31:06,174 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-27 15:31:06,174 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-27 15:31:06,174 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-27 15:31:06,174 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-27 15:31:06,175 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-27 15:31:06,175 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-27 15:31:06,175 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
 INFO [main] 2016-08-27 15:31:06,175 (QueryParserUtils.java:672) - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
 INFO [main] 2016-08-27 15:31:06,175 (QueryParserUtils.java:693) - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
 INFO [main] 2016-08-27 15:31:06,175 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
 INFO [main] 2016-08-27 15:31:06,175 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-27 15:31:06,176 (QueryParserUtils.java:716) - !ipValue[ipBlock].equals(blocksLower[ipBlock]
 INFO [main] 2016-08-27 15:31:06,176 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
 INFO [main] 2016-08-27 15:31:06,176 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-27 15:31:06,176 (QueryParserUtils.java:716) - !ipValue[ipBlock].equals(blocksLower[ipBlock]
 INFO [main] 2016-08-27 15:31:06,176 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
 INFO [main] 2016-08-27 15:31:06,176 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-27 15:31:06,176 (QueryParserUtils.java:716) - !ipValue[ipBlock].equals(blocksLower[ipBlock]
 INFO [main] 2016-08-27 15:31:06,176 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
 INFO [main] 2016-08-27 15:31:06,177 (QueryParserUtils.java:725) - IP block not within given range
 INFO [main] 2016-08-27 15:31:06,177 (QueryParserUtils.java:672) - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
 INFO [main] 2016-08-27 15:31:06,177 (QueryParserUtils.java:693) - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
 INFO [main] 2016-08-27 15:31:06,177 (QueryParserUtils.java:672) - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.40
 INFO [main] 2016-08-27 15:31:06,178 (QueryParserUtils.java:693) - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
 INFO [main] 2016-08-27 15:31:06,178 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
 INFO [main] 2016-08-27 15:31:06,178 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-27 15:31:06,178 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
 INFO [main] 2016-08-27 15:31:06,178 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-27 15:31:06,178 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
 INFO [main] 2016-08-27 15:31:06,178 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-27 15:31:06,179 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 40 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
 INFO [main] 2016-08-27 15:31:06,179 (QueryParserUtils.java:725) - IP block not within given range
 INFO [main] 2016-08-27 15:31:06,179 (QueryParserUtils.java:672) - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.60
 INFO [main] 2016-08-27 15:31:06,179 (QueryParserUtils.java:693) - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
 INFO [main] 2016-08-27 15:31:06,179 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
 INFO [main] 2016-08-27 15:31:06,179 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-27 15:31:06,179 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
 INFO [main] 2016-08-27 15:31:06,179 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-27 15:31:06,180 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
 INFO [main] 2016-08-27 15:31:06,180 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-27 15:31:06,180 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 60 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
 INFO [main] 2016-08-27 15:31:06,180 (QueryParserUtils.java:672) - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
 INFO [main] 2016-08-27 15:31:06,181 (QueryParserUtils.java:693) - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
 INFO [main] 2016-08-27 15:31:06,181 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
 INFO [main] 2016-08-27 15:31:06,181 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
 INFO [main] 2016-08-27 15:31:06,181 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
 INFO [main] 2016-08-27 15:31:06,181 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
 INFO [main] 2016-08-27 15:31:06,182 (QueryParserUtils.java:672) - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
 INFO [main] 2016-08-27 15:31:06,182 (QueryParserUtils.java:693) - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
 INFO [main] 2016-08-27 15:31:06,182 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-27 15:31:06,182 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-27 15:31:06,183 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-27 15:31:06,183 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-27 15:31:06,183 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-27 15:31:06,183 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-27 15:31:06,183 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
 INFO [main] 2016-08-27 15:31:06,184 (QueryParserUtils.java:672) - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
 INFO [main] 2016-08-27 15:31:06,184 (QueryParserUtils.java:693) - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
 INFO [main] 2016-08-27 15:31:06,184 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-27 15:31:06,184 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-27 15:31:06,184 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-27 15:31:06,184 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-27 15:31:06,185 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-27 15:31:06,185 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-27 15:31:06,185 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-27 15:31:06,185 (QueryParserUtils.java:672) - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
 INFO [main] 2016-08-27 15:31:06,185 (QueryParserUtils.java:693) - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
 INFO [main] 2016-08-27 15:31:06,186 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-27 15:31:06,186 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-27 15:31:06,186 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-27 15:31:06,186 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-27 15:31:06,186 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-27 15:31:06,186 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-27 15:31:06,186 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
 INFO [main] 2016-08-27 15:31:06,186 (QueryParserUtils.java:672) - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
 INFO [main] 2016-08-27 15:31:06,187 (QueryParserUtils.java:693) - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
 INFO [main] 2016-08-27 15:31:06,187 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
 INFO [main] 2016-08-27 15:31:06,187 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-27 15:31:06,187 (QueryParserUtils.java:716) - !ipValue[ipBlock].equals(blocksLower[ipBlock]
 INFO [main] 2016-08-27 15:31:06,187 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
 INFO [main] 2016-08-27 15:31:06,187 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-27 15:31:06,187 (QueryParserUtils.java:716) - !ipValue[ipBlock].equals(blocksLower[ipBlock]
 INFO [main] 2016-08-27 15:31:06,188 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
 INFO [main] 2016-08-27 15:31:06,188 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-27 15:31:06,188 (QueryParserUtils.java:716) - !ipValue[ipBlock].equals(blocksLower[ipBlock]
 INFO [main] 2016-08-27 15:31:06,188 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
 INFO [main] 2016-08-27 15:31:06,188 (QueryParserUtils.java:725) - IP block not within given range
 INFO [main] 2016-08-27 15:31:06,189 (QueryParserUtils.java:672) - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
 INFO [main] 2016-08-27 15:31:06,189 (QueryParserUtils.java:693) - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
 INFO [main] 2016-08-27 15:31:06,189 (QueryParserUtils.java:672) - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.40
 INFO [main] 2016-08-27 15:31:06,189 (QueryParserUtils.java:693) - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
 INFO [main] 2016-08-27 15:31:06,190 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
 INFO [main] 2016-08-27 15:31:06,190 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-27 15:31:06,190 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
 INFO [main] 2016-08-27 15:31:06,190 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-27 15:31:06,190 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
 INFO [main] 2016-08-27 15:31:06,190 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-27 15:31:06,190 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 40 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
 INFO [main] 2016-08-27 15:31:06,191 (QueryParserUtils.java:725) - IP block not within given range
 INFO [main] 2016-08-27 15:31:06,191 (QueryParserUtils.java:672) - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.60
 INFO [main] 2016-08-27 15:31:06,191 (QueryParserUtils.java:693) - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
 INFO [main] 2016-08-27 15:31:06,191 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
 INFO [main] 2016-08-27 15:31:06,191 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-27 15:31:06,192 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
 INFO [main] 2016-08-27 15:31:06,192 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-27 15:31:06,192 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
 INFO [main] 2016-08-27 15:31:06,192 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-27 15:31:06,192 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 60 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
 INFO [main] 2016-08-27 15:31:06,193 (QueryParserUtils.java:672) - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,193 (QueryParserUtils.java:736) - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,193 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,193 (QueryParserUtils.java:738) - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,194 (QueryParserUtils.java:672) - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,194 (QueryParserUtils.java:736) - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,194 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,194 (QueryParserUtils.java:738) - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,195 (QueryParserUtils.java:672) - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,195 (QueryParserUtils.java:736) - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,195 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,195 (QueryParserUtils.java:738) - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,196 (QueryParserUtils.java:672) - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,196 (QueryParserUtils.java:736) - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,196 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,196 (QueryParserUtils.java:738) - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,197 (QueryParserUtils.java:672) - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,197 (QueryParserUtils.java:736) - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,197 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,197 (QueryParserUtils.java:738) - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,198 (QueryParserUtils.java:672) - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,198 (QueryParserUtils.java:736) - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,198 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,198 (QueryParserUtils.java:738) - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,199 (QueryParserUtils.java:672) - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,199 (QueryParserUtils.java:736) - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,199 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,199 (QueryParserUtils.java:738) - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,200 (QueryParserUtils.java:672) - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,200 (QueryParserUtils.java:736) - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,200 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,200 (QueryParserUtils.java:738) - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,201 (QueryParserUtils.java:672) - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,201 (QueryParserUtils.java:736) - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,201 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,202 (QueryParserUtils.java:738) - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,202 (QueryParserUtils.java:672) - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,203 (QueryParserUtils.java:736) - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,203 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,203 (QueryParserUtils.java:738) - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,204 (QueryParserUtils.java:672) - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,204 (QueryParserUtils.java:736) - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,204 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,204 (QueryParserUtils.java:738) - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-27 15:31:06,205 (QueryParserUtilsTest.java:132) - running testIgnoreCase
 INFO [main] 2016-08-27 15:31:06,206 (QueryParserUtilsTest.java:152) - completed testIgnoreCase
 INFO [main] 2016-08-27 15:31:06,208 (QueryParserUtilsTest.java:106) - running testQueryFieldDoesNotExist
 INFO [main] 2016-08-27 15:31:06,208 (QueryParserUtilsTest.java:126) - completed testQueryFieldDoesNotExist
